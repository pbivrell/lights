{"ast":null,"code":"import _classCallCheck from \"/Users/pbivrell/light/light/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/pbivrell/light/light/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/pbivrell/light/light/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/pbivrell/light/light/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { Factory } from '../Factory.js';\nimport { Shape } from '../Shape.js';\nimport { _registerNode } from '../Global.js';\nexport var Path = /*#__PURE__*/function (_Shape) {\n  _inherits(Path, _Shape);\n\n  var _super = _createSuper(Path);\n\n  function Path(config) {\n    var _this;\n\n    _classCallCheck(this, Path);\n\n    _this = _super.call(this, config);\n    _this.dataArray = [];\n    _this.pathLength = 0;\n    _this.dataArray = Path.parsePathData(_this.data());\n    _this.pathLength = 0;\n\n    for (var i = 0; i < _this.dataArray.length; ++i) {\n      _this.pathLength += _this.dataArray[i].pathLength;\n    }\n\n    _this.on('dataChange.konva', function () {\n      this.dataArray = Path.parsePathData(this.data());\n      this.pathLength = 0;\n\n      for (var i = 0; i < this.dataArray.length; ++i) {\n        this.pathLength += this.dataArray[i].pathLength;\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(Path, [{\n    key: \"_sceneFunc\",\n    value: function _sceneFunc(context) {\n      var ca = this.dataArray;\n      context.beginPath();\n      var isClosed = false;\n\n      for (var n = 0; n < ca.length; n++) {\n        var c = ca[n].command;\n        var p = ca[n].points;\n\n        switch (c) {\n          case 'L':\n            context.lineTo(p[0], p[1]);\n            break;\n\n          case 'M':\n            context.moveTo(p[0], p[1]);\n            break;\n\n          case 'C':\n            context.bezierCurveTo(p[0], p[1], p[2], p[3], p[4], p[5]);\n            break;\n\n          case 'Q':\n            context.quadraticCurveTo(p[0], p[1], p[2], p[3]);\n            break;\n\n          case 'A':\n            var cx = p[0],\n                cy = p[1],\n                rx = p[2],\n                ry = p[3],\n                theta = p[4],\n                dTheta = p[5],\n                psi = p[6],\n                fs = p[7];\n            var r = rx > ry ? rx : ry;\n            var scaleX = rx > ry ? 1 : rx / ry;\n            var scaleY = rx > ry ? ry / rx : 1;\n            context.translate(cx, cy);\n            context.rotate(psi);\n            context.scale(scaleX, scaleY);\n            context.arc(0, 0, r, theta, theta + dTheta, 1 - fs);\n            context.scale(1 / scaleX, 1 / scaleY);\n            context.rotate(-psi);\n            context.translate(-cx, -cy);\n            break;\n\n          case 'z':\n            isClosed = true;\n            context.closePath();\n            break;\n        }\n      }\n\n      if (!isClosed && !this.hasFill()) {\n        context.strokeShape(this);\n      } else {\n        context.fillStrokeShape(this);\n      }\n    }\n  }, {\n    key: \"getSelfRect\",\n    value: function getSelfRect() {\n      var points = [];\n      this.dataArray.forEach(function (data) {\n        if (data.command === 'A') {\n          var start = data.points[4];\n          var dTheta = data.points[5];\n          var end = data.points[4] + dTheta;\n          var inc = Math.PI / 180.0;\n\n          if (Math.abs(start - end) < inc) {\n            inc = Math.abs(start - end);\n          }\n\n          if (dTheta < 0) {\n            for (var t = start - inc; t > end; t -= inc) {\n              var point = Path.getPointOnEllipticalArc(data.points[0], data.points[1], data.points[2], data.points[3], t, 0);\n              points.push(point.x, point.y);\n            }\n          } else {\n            for (var _t = start + inc; _t < end; _t += inc) {\n              var _point = Path.getPointOnEllipticalArc(data.points[0], data.points[1], data.points[2], data.points[3], _t, 0);\n\n              points.push(_point.x, _point.y);\n            }\n          }\n        } else if (data.command === 'C') {\n          for (var _t2 = 0.0; _t2 <= 1; _t2 += 0.01) {\n            var _point2 = Path.getPointOnCubicBezier(_t2, data.start.x, data.start.y, data.points[0], data.points[1], data.points[2], data.points[3], data.points[4], data.points[5]);\n\n            points.push(_point2.x, _point2.y);\n          }\n        } else {\n          points = points.concat(data.points);\n        }\n      });\n      var minX = points[0];\n      var maxX = points[0];\n      var minY = points[1];\n      var maxY = points[1];\n      var x, y;\n\n      for (var i = 0; i < points.length / 2; i++) {\n        x = points[i * 2];\n        y = points[i * 2 + 1];\n\n        if (!isNaN(x)) {\n          minX = Math.min(minX, x);\n          maxX = Math.max(maxX, x);\n        }\n\n        if (!isNaN(y)) {\n          minY = Math.min(minY, y);\n          maxY = Math.max(maxY, y);\n        }\n      }\n\n      return {\n        x: Math.round(minX),\n        y: Math.round(minY),\n        width: Math.round(maxX - minX),\n        height: Math.round(maxY - minY)\n      };\n    }\n  }, {\n    key: \"getLength\",\n    value: function getLength() {\n      return this.pathLength;\n    }\n  }, {\n    key: \"getPointAtLength\",\n    value: function getPointAtLength(length) {\n      var point,\n          i = 0,\n          ii = this.dataArray.length;\n\n      if (!ii) {\n        return null;\n      }\n\n      while (i < ii && length > this.dataArray[i].pathLength) {\n        length -= this.dataArray[i].pathLength;\n        ++i;\n      }\n\n      if (i === ii) {\n        point = this.dataArray[i - 1].points.slice(-2);\n        return {\n          x: point[0],\n          y: point[1]\n        };\n      }\n\n      if (length < 0.01) {\n        point = this.dataArray[i].points.slice(0, 2);\n        return {\n          x: point[0],\n          y: point[1]\n        };\n      }\n\n      var cp = this.dataArray[i];\n      var p = cp.points;\n\n      switch (cp.command) {\n        case 'L':\n          return Path.getPointOnLine(length, cp.start.x, cp.start.y, p[0], p[1]);\n\n        case 'C':\n          return Path.getPointOnCubicBezier(length / cp.pathLength, cp.start.x, cp.start.y, p[0], p[1], p[2], p[3], p[4], p[5]);\n\n        case 'Q':\n          return Path.getPointOnQuadraticBezier(length / cp.pathLength, cp.start.x, cp.start.y, p[0], p[1], p[2], p[3]);\n\n        case 'A':\n          var cx = p[0],\n              cy = p[1],\n              rx = p[2],\n              ry = p[3],\n              theta = p[4],\n              dTheta = p[5],\n              psi = p[6];\n          theta += dTheta * length / cp.pathLength;\n          return Path.getPointOnEllipticalArc(cx, cy, rx, ry, theta, psi);\n      }\n\n      return null;\n    }\n  }], [{\n    key: \"getLineLength\",\n    value: function getLineLength(x1, y1, x2, y2) {\n      return Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    }\n  }, {\n    key: \"getPointOnLine\",\n    value: function getPointOnLine(dist, P1x, P1y, P2x, P2y, fromX, fromY) {\n      if (fromX === undefined) {\n        fromX = P1x;\n      }\n\n      if (fromY === undefined) {\n        fromY = P1y;\n      }\n\n      var m = (P2y - P1y) / (P2x - P1x + 0.00000001);\n      var run = Math.sqrt(dist * dist / (1 + m * m));\n\n      if (P2x < P1x) {\n        run *= -1;\n      }\n\n      var rise = m * run;\n      var pt;\n\n      if (P2x === P1x) {\n        pt = {\n          x: fromX,\n          y: fromY + rise\n        };\n      } else if ((fromY - P1y) / (fromX - P1x + 0.00000001) === m) {\n        pt = {\n          x: fromX + run,\n          y: fromY + rise\n        };\n      } else {\n        var ix, iy;\n        var len = this.getLineLength(P1x, P1y, P2x, P2y);\n        var u = (fromX - P1x) * (P2x - P1x) + (fromY - P1y) * (P2y - P1y);\n        u = u / (len * len);\n        ix = P1x + u * (P2x - P1x);\n        iy = P1y + u * (P2y - P1y);\n        var pRise = this.getLineLength(fromX, fromY, ix, iy);\n        var pRun = Math.sqrt(dist * dist - pRise * pRise);\n        run = Math.sqrt(pRun * pRun / (1 + m * m));\n\n        if (P2x < P1x) {\n          run *= -1;\n        }\n\n        rise = m * run;\n        pt = {\n          x: ix + run,\n          y: iy + rise\n        };\n      }\n\n      return pt;\n    }\n  }, {\n    key: \"getPointOnCubicBezier\",\n    value: function getPointOnCubicBezier(pct, P1x, P1y, P2x, P2y, P3x, P3y, P4x, P4y) {\n      function CB1(t) {\n        return t * t * t;\n      }\n\n      function CB2(t) {\n        return 3 * t * t * (1 - t);\n      }\n\n      function CB3(t) {\n        return 3 * t * (1 - t) * (1 - t);\n      }\n\n      function CB4(t) {\n        return (1 - t) * (1 - t) * (1 - t);\n      }\n\n      var x = P4x * CB1(pct) + P3x * CB2(pct) + P2x * CB3(pct) + P1x * CB4(pct);\n      var y = P4y * CB1(pct) + P3y * CB2(pct) + P2y * CB3(pct) + P1y * CB4(pct);\n      return {\n        x: x,\n        y: y\n      };\n    }\n  }, {\n    key: \"getPointOnQuadraticBezier\",\n    value: function getPointOnQuadraticBezier(pct, P1x, P1y, P2x, P2y, P3x, P3y) {\n      function QB1(t) {\n        return t * t;\n      }\n\n      function QB2(t) {\n        return 2 * t * (1 - t);\n      }\n\n      function QB3(t) {\n        return (1 - t) * (1 - t);\n      }\n\n      var x = P3x * QB1(pct) + P2x * QB2(pct) + P1x * QB3(pct);\n      var y = P3y * QB1(pct) + P2y * QB2(pct) + P1y * QB3(pct);\n      return {\n        x: x,\n        y: y\n      };\n    }\n  }, {\n    key: \"getPointOnEllipticalArc\",\n    value: function getPointOnEllipticalArc(cx, cy, rx, ry, theta, psi) {\n      var cosPsi = Math.cos(psi),\n          sinPsi = Math.sin(psi);\n      var pt = {\n        x: rx * Math.cos(theta),\n        y: ry * Math.sin(theta)\n      };\n      return {\n        x: cx + (pt.x * cosPsi - pt.y * sinPsi),\n        y: cy + (pt.x * sinPsi + pt.y * cosPsi)\n      };\n    }\n  }, {\n    key: \"parsePathData\",\n    value: function parsePathData(data) {\n      if (!data) {\n        return [];\n      }\n\n      var cs = data;\n      var cc = ['m', 'M', 'l', 'L', 'v', 'V', 'h', 'H', 'z', 'Z', 'c', 'C', 'q', 'Q', 't', 'T', 's', 'S', 'a', 'A'];\n      cs = cs.replace(new RegExp(' ', 'g'), ',');\n\n      for (var n = 0; n < cc.length; n++) {\n        cs = cs.replace(new RegExp(cc[n], 'g'), '|' + cc[n]);\n      }\n\n      var arr = cs.split('|');\n      var ca = [];\n      var coords = [];\n      var cpx = 0;\n      var cpy = 0;\n      var re = /([-+]?((\\d+\\.\\d+)|((\\d+)|(\\.\\d+)))(?:e[-+]?\\d+)?)/gi;\n      var match;\n\n      for (n = 1; n < arr.length; n++) {\n        var str = arr[n];\n        var c = str.charAt(0);\n        str = str.slice(1);\n        coords.length = 0;\n\n        while (match = re.exec(str)) {\n          coords.push(match[0]);\n        }\n\n        var p = [];\n\n        for (var j = 0, jlen = coords.length; j < jlen; j++) {\n          if (coords[j] === '00') {\n            p.push(0, 0);\n            continue;\n          }\n\n          var parsed = parseFloat(coords[j]);\n\n          if (!isNaN(parsed)) {\n            p.push(parsed);\n          } else {\n            p.push(0);\n          }\n        }\n\n        while (p.length > 0) {\n          if (isNaN(p[0])) {\n            break;\n          }\n\n          var cmd = null;\n          var points = [];\n          var startX = cpx,\n              startY = cpy;\n          var prevCmd, ctlPtx, ctlPty;\n          var rx, ry, psi, fa, fs, x1, y1;\n\n          switch (c) {\n            case 'l':\n              cpx += p.shift();\n              cpy += p.shift();\n              cmd = 'L';\n              points.push(cpx, cpy);\n              break;\n\n            case 'L':\n              cpx = p.shift();\n              cpy = p.shift();\n              points.push(cpx, cpy);\n              break;\n\n            case 'm':\n              var dx = p.shift();\n              var dy = p.shift();\n              cpx += dx;\n              cpy += dy;\n              cmd = 'M';\n\n              if (ca.length > 2 && ca[ca.length - 1].command === 'z') {\n                for (var idx = ca.length - 2; idx >= 0; idx--) {\n                  if (ca[idx].command === 'M') {\n                    cpx = ca[idx].points[0] + dx;\n                    cpy = ca[idx].points[1] + dy;\n                    break;\n                  }\n                }\n              }\n\n              points.push(cpx, cpy);\n              c = 'l';\n              break;\n\n            case 'M':\n              cpx = p.shift();\n              cpy = p.shift();\n              cmd = 'M';\n              points.push(cpx, cpy);\n              c = 'L';\n              break;\n\n            case 'h':\n              cpx += p.shift();\n              cmd = 'L';\n              points.push(cpx, cpy);\n              break;\n\n            case 'H':\n              cpx = p.shift();\n              cmd = 'L';\n              points.push(cpx, cpy);\n              break;\n\n            case 'v':\n              cpy += p.shift();\n              cmd = 'L';\n              points.push(cpx, cpy);\n              break;\n\n            case 'V':\n              cpy = p.shift();\n              cmd = 'L';\n              points.push(cpx, cpy);\n              break;\n\n            case 'C':\n              points.push(p.shift(), p.shift(), p.shift(), p.shift());\n              cpx = p.shift();\n              cpy = p.shift();\n              points.push(cpx, cpy);\n              break;\n\n            case 'c':\n              points.push(cpx + p.shift(), cpy + p.shift(), cpx + p.shift(), cpy + p.shift());\n              cpx += p.shift();\n              cpy += p.shift();\n              cmd = 'C';\n              points.push(cpx, cpy);\n              break;\n\n            case 'S':\n              ctlPtx = cpx;\n              ctlPty = cpy;\n              prevCmd = ca[ca.length - 1];\n\n              if (prevCmd.command === 'C') {\n                ctlPtx = cpx + (cpx - prevCmd.points[2]);\n                ctlPty = cpy + (cpy - prevCmd.points[3]);\n              }\n\n              points.push(ctlPtx, ctlPty, p.shift(), p.shift());\n              cpx = p.shift();\n              cpy = p.shift();\n              cmd = 'C';\n              points.push(cpx, cpy);\n              break;\n\n            case 's':\n              ctlPtx = cpx;\n              ctlPty = cpy;\n              prevCmd = ca[ca.length - 1];\n\n              if (prevCmd.command === 'C') {\n                ctlPtx = cpx + (cpx - prevCmd.points[2]);\n                ctlPty = cpy + (cpy - prevCmd.points[3]);\n              }\n\n              points.push(ctlPtx, ctlPty, cpx + p.shift(), cpy + p.shift());\n              cpx += p.shift();\n              cpy += p.shift();\n              cmd = 'C';\n              points.push(cpx, cpy);\n              break;\n\n            case 'Q':\n              points.push(p.shift(), p.shift());\n              cpx = p.shift();\n              cpy = p.shift();\n              points.push(cpx, cpy);\n              break;\n\n            case 'q':\n              points.push(cpx + p.shift(), cpy + p.shift());\n              cpx += p.shift();\n              cpy += p.shift();\n              cmd = 'Q';\n              points.push(cpx, cpy);\n              break;\n\n            case 'T':\n              ctlPtx = cpx;\n              ctlPty = cpy;\n              prevCmd = ca[ca.length - 1];\n\n              if (prevCmd.command === 'Q') {\n                ctlPtx = cpx + (cpx - prevCmd.points[0]);\n                ctlPty = cpy + (cpy - prevCmd.points[1]);\n              }\n\n              cpx = p.shift();\n              cpy = p.shift();\n              cmd = 'Q';\n              points.push(ctlPtx, ctlPty, cpx, cpy);\n              break;\n\n            case 't':\n              ctlPtx = cpx;\n              ctlPty = cpy;\n              prevCmd = ca[ca.length - 1];\n\n              if (prevCmd.command === 'Q') {\n                ctlPtx = cpx + (cpx - prevCmd.points[0]);\n                ctlPty = cpy + (cpy - prevCmd.points[1]);\n              }\n\n              cpx += p.shift();\n              cpy += p.shift();\n              cmd = 'Q';\n              points.push(ctlPtx, ctlPty, cpx, cpy);\n              break;\n\n            case 'A':\n              rx = p.shift();\n              ry = p.shift();\n              psi = p.shift();\n              fa = p.shift();\n              fs = p.shift();\n              x1 = cpx;\n              y1 = cpy;\n              cpx = p.shift();\n              cpy = p.shift();\n              cmd = 'A';\n              points = this.convertEndpointToCenterParameterization(x1, y1, cpx, cpy, fa, fs, rx, ry, psi);\n              break;\n\n            case 'a':\n              rx = p.shift();\n              ry = p.shift();\n              psi = p.shift();\n              fa = p.shift();\n              fs = p.shift();\n              x1 = cpx;\n              y1 = cpy;\n              cpx += p.shift();\n              cpy += p.shift();\n              cmd = 'A';\n              points = this.convertEndpointToCenterParameterization(x1, y1, cpx, cpy, fa, fs, rx, ry, psi);\n              break;\n          }\n\n          ca.push({\n            command: cmd || c,\n            points: points,\n            start: {\n              x: startX,\n              y: startY\n            },\n            pathLength: this.calcLength(startX, startY, cmd || c, points)\n          });\n        }\n\n        if (c === 'z' || c === 'Z') {\n          ca.push({\n            command: 'z',\n            points: [],\n            start: undefined,\n            pathLength: 0\n          });\n        }\n      }\n\n      return ca;\n    }\n  }, {\n    key: \"calcLength\",\n    value: function calcLength(x, y, cmd, points) {\n      var len, p1, p2, t;\n      var path = Path;\n\n      switch (cmd) {\n        case 'L':\n          return path.getLineLength(x, y, points[0], points[1]);\n\n        case 'C':\n          len = 0.0;\n          p1 = path.getPointOnCubicBezier(0, x, y, points[0], points[1], points[2], points[3], points[4], points[5]);\n\n          for (t = 0.01; t <= 1; t += 0.01) {\n            p2 = path.getPointOnCubicBezier(t, x, y, points[0], points[1], points[2], points[3], points[4], points[5]);\n            len += path.getLineLength(p1.x, p1.y, p2.x, p2.y);\n            p1 = p2;\n          }\n\n          return len;\n\n        case 'Q':\n          len = 0.0;\n          p1 = path.getPointOnQuadraticBezier(0, x, y, points[0], points[1], points[2], points[3]);\n\n          for (t = 0.01; t <= 1; t += 0.01) {\n            p2 = path.getPointOnQuadraticBezier(t, x, y, points[0], points[1], points[2], points[3]);\n            len += path.getLineLength(p1.x, p1.y, p2.x, p2.y);\n            p1 = p2;\n          }\n\n          return len;\n\n        case 'A':\n          len = 0.0;\n          var start = points[4];\n          var dTheta = points[5];\n          var end = points[4] + dTheta;\n          var inc = Math.PI / 180.0;\n\n          if (Math.abs(start - end) < inc) {\n            inc = Math.abs(start - end);\n          }\n\n          p1 = path.getPointOnEllipticalArc(points[0], points[1], points[2], points[3], start, 0);\n\n          if (dTheta < 0) {\n            for (t = start - inc; t > end; t -= inc) {\n              p2 = path.getPointOnEllipticalArc(points[0], points[1], points[2], points[3], t, 0);\n              len += path.getLineLength(p1.x, p1.y, p2.x, p2.y);\n              p1 = p2;\n            }\n          } else {\n            for (t = start + inc; t < end; t += inc) {\n              p2 = path.getPointOnEllipticalArc(points[0], points[1], points[2], points[3], t, 0);\n              len += path.getLineLength(p1.x, p1.y, p2.x, p2.y);\n              p1 = p2;\n            }\n          }\n\n          p2 = path.getPointOnEllipticalArc(points[0], points[1], points[2], points[3], end, 0);\n          len += path.getLineLength(p1.x, p1.y, p2.x, p2.y);\n          return len;\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"convertEndpointToCenterParameterization\",\n    value: function convertEndpointToCenterParameterization(x1, y1, x2, y2, fa, fs, rx, ry, psiDeg) {\n      var psi = psiDeg * (Math.PI / 180.0);\n      var xp = Math.cos(psi) * (x1 - x2) / 2.0 + Math.sin(psi) * (y1 - y2) / 2.0;\n      var yp = -1 * Math.sin(psi) * (x1 - x2) / 2.0 + Math.cos(psi) * (y1 - y2) / 2.0;\n      var lambda = xp * xp / (rx * rx) + yp * yp / (ry * ry);\n\n      if (lambda > 1) {\n        rx *= Math.sqrt(lambda);\n        ry *= Math.sqrt(lambda);\n      }\n\n      var f = Math.sqrt((rx * rx * (ry * ry) - rx * rx * (yp * yp) - ry * ry * (xp * xp)) / (rx * rx * (yp * yp) + ry * ry * (xp * xp)));\n\n      if (fa === fs) {\n        f *= -1;\n      }\n\n      if (isNaN(f)) {\n        f = 0;\n      }\n\n      var cxp = f * rx * yp / ry;\n      var cyp = f * -ry * xp / rx;\n      var cx = (x1 + x2) / 2.0 + Math.cos(psi) * cxp - Math.sin(psi) * cyp;\n      var cy = (y1 + y2) / 2.0 + Math.sin(psi) * cxp + Math.cos(psi) * cyp;\n\n      var vMag = function vMag(v) {\n        return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\n      };\n\n      var vRatio = function vRatio(u, v) {\n        return (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v));\n      };\n\n      var vAngle = function vAngle(u, v) {\n        return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(vRatio(u, v));\n      };\n\n      var theta = vAngle([1, 0], [(xp - cxp) / rx, (yp - cyp) / ry]);\n      var u = [(xp - cxp) / rx, (yp - cyp) / ry];\n      var v = [(-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry];\n      var dTheta = vAngle(u, v);\n\n      if (vRatio(u, v) <= -1) {\n        dTheta = Math.PI;\n      }\n\n      if (vRatio(u, v) >= 1) {\n        dTheta = 0;\n      }\n\n      if (fs === 0 && dTheta > 0) {\n        dTheta = dTheta - 2 * Math.PI;\n      }\n\n      if (fs === 1 && dTheta < 0) {\n        dTheta = dTheta + 2 * Math.PI;\n      }\n\n      return [cx, cy, rx, ry, theta, dTheta, psi, fs];\n    }\n  }]);\n\n  return Path;\n}(Shape);\nPath.prototype.className = 'Path';\nPath.prototype._attrsAffectingSize = ['data'];\n\n_registerNode(Path);\n\nFactory.addGetterSetter(Path, 'data');","map":{"version":3,"sources":["/Users/pbivrell/light/light/node_modules/konva/lib/shapes/Path.js"],"names":["Factory","Shape","_registerNode","Path","config","dataArray","pathLength","parsePathData","data","i","length","on","context","ca","beginPath","isClosed","n","c","command","p","points","lineTo","moveTo","bezierCurveTo","quadraticCurveTo","cx","cy","rx","ry","theta","dTheta","psi","fs","r","scaleX","scaleY","translate","rotate","scale","arc","closePath","hasFill","strokeShape","fillStrokeShape","forEach","start","end","inc","Math","PI","abs","t","point","getPointOnEllipticalArc","push","x","y","getPointOnCubicBezier","concat","minX","maxX","minY","maxY","isNaN","min","max","round","width","height","ii","slice","cp","getPointOnLine","getPointOnQuadraticBezier","x1","y1","x2","y2","sqrt","dist","P1x","P1y","P2x","P2y","fromX","fromY","undefined","m","run","rise","pt","ix","iy","len","getLineLength","u","pRise","pRun","pct","P3x","P3y","P4x","P4y","CB1","CB2","CB3","CB4","QB1","QB2","QB3","cosPsi","cos","sinPsi","sin","cs","cc","replace","RegExp","arr","split","coords","cpx","cpy","re","match","str","charAt","exec","j","jlen","parsed","parseFloat","cmd","startX","startY","prevCmd","ctlPtx","ctlPty","fa","shift","dx","dy","idx","convertEndpointToCenterParameterization","calcLength","p1","p2","path","psiDeg","xp","yp","lambda","f","cxp","cyp","vMag","v","vRatio","vAngle","acos","prototype","className","_attrsAffectingSize","addGetterSetter"],"mappings":";;;;AAAA,SAASA,OAAT,QAAwB,eAAxB;AACA,SAASC,KAAT,QAAsB,aAAtB;AACA,SAASC,aAAT,QAA8B,cAA9B;AACA,WAAaC,IAAb;AAAA;;AAAA;;AACI,gBAAYC,MAAZ,EAAoB;AAAA;;AAAA;;AAChB,8BAAMA,MAAN;AACA,UAAKC,SAAL,GAAiB,EAAjB;AACA,UAAKC,UAAL,GAAkB,CAAlB;AACA,UAAKD,SAAL,GAAiBF,IAAI,CAACI,aAAL,CAAmB,MAAKC,IAAL,EAAnB,CAAjB;AACA,UAAKF,UAAL,GAAkB,CAAlB;;AACA,SAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,MAAKJ,SAAL,CAAeK,MAAnC,EAA2C,EAAED,CAA7C,EAAgD;AAC5C,YAAKH,UAAL,IAAmB,MAAKD,SAAL,CAAeI,CAAf,EAAkBH,UAArC;AACH;;AACD,UAAKK,EAAL,CAAQ,kBAAR,EAA4B,YAAY;AACpC,WAAKN,SAAL,GAAiBF,IAAI,CAACI,aAAL,CAAmB,KAAKC,IAAL,EAAnB,CAAjB;AACA,WAAKF,UAAL,GAAkB,CAAlB;;AACA,WAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKJ,SAAL,CAAeK,MAAnC,EAA2C,EAAED,CAA7C,EAAgD;AAC5C,aAAKH,UAAL,IAAmB,KAAKD,SAAL,CAAeI,CAAf,EAAkBH,UAArC;AACH;AACJ,KAND;;AATgB;AAgBnB;;AAjBL;AAAA;AAAA,WAkBI,oBAAWM,OAAX,EAAoB;AAChB,UAAIC,EAAE,GAAG,KAAKR,SAAd;AACAO,MAAAA,OAAO,CAACE,SAAR;AACA,UAAIC,QAAQ,GAAG,KAAf;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,EAAE,CAACH,MAAvB,EAA+BM,CAAC,EAAhC,EAAoC;AAChC,YAAIC,CAAC,GAAGJ,EAAE,CAACG,CAAD,CAAF,CAAME,OAAd;AACA,YAAIC,CAAC,GAAGN,EAAE,CAACG,CAAD,CAAF,CAAMI,MAAd;;AACA,gBAAQH,CAAR;AACI,eAAK,GAAL;AACIL,YAAAA,OAAO,CAACS,MAAR,CAAeF,CAAC,CAAC,CAAD,CAAhB,EAAqBA,CAAC,CAAC,CAAD,CAAtB;AACA;;AACJ,eAAK,GAAL;AACIP,YAAAA,OAAO,CAACU,MAAR,CAAeH,CAAC,CAAC,CAAD,CAAhB,EAAqBA,CAAC,CAAC,CAAD,CAAtB;AACA;;AACJ,eAAK,GAAL;AACIP,YAAAA,OAAO,CAACW,aAAR,CAAsBJ,CAAC,CAAC,CAAD,CAAvB,EAA4BA,CAAC,CAAC,CAAD,CAA7B,EAAkCA,CAAC,CAAC,CAAD,CAAnC,EAAwCA,CAAC,CAAC,CAAD,CAAzC,EAA8CA,CAAC,CAAC,CAAD,CAA/C,EAAoDA,CAAC,CAAC,CAAD,CAArD;AACA;;AACJ,eAAK,GAAL;AACIP,YAAAA,OAAO,CAACY,gBAAR,CAAyBL,CAAC,CAAC,CAAD,CAA1B,EAA+BA,CAAC,CAAC,CAAD,CAAhC,EAAqCA,CAAC,CAAC,CAAD,CAAtC,EAA2CA,CAAC,CAAC,CAAD,CAA5C;AACA;;AACJ,eAAK,GAAL;AACI,gBAAIM,EAAE,GAAGN,CAAC,CAAC,CAAD,CAAV;AAAA,gBAAeO,EAAE,GAAGP,CAAC,CAAC,CAAD,CAArB;AAAA,gBAA0BQ,EAAE,GAAGR,CAAC,CAAC,CAAD,CAAhC;AAAA,gBAAqCS,EAAE,GAAGT,CAAC,CAAC,CAAD,CAA3C;AAAA,gBAAgDU,KAAK,GAAGV,CAAC,CAAC,CAAD,CAAzD;AAAA,gBAA8DW,MAAM,GAAGX,CAAC,CAAC,CAAD,CAAxE;AAAA,gBAA6EY,GAAG,GAAGZ,CAAC,CAAC,CAAD,CAApF;AAAA,gBAAyFa,EAAE,GAAGb,CAAC,CAAC,CAAD,CAA/F;AACA,gBAAIc,CAAC,GAAGN,EAAE,GAAGC,EAAL,GAAUD,EAAV,GAAeC,EAAvB;AACA,gBAAIM,MAAM,GAAGP,EAAE,GAAGC,EAAL,GAAU,CAAV,GAAcD,EAAE,GAAGC,EAAhC;AACA,gBAAIO,MAAM,GAAGR,EAAE,GAAGC,EAAL,GAAUA,EAAE,GAAGD,EAAf,GAAoB,CAAjC;AACAf,YAAAA,OAAO,CAACwB,SAAR,CAAkBX,EAAlB,EAAsBC,EAAtB;AACAd,YAAAA,OAAO,CAACyB,MAAR,CAAeN,GAAf;AACAnB,YAAAA,OAAO,CAAC0B,KAAR,CAAcJ,MAAd,EAAsBC,MAAtB;AACAvB,YAAAA,OAAO,CAAC2B,GAAR,CAAY,CAAZ,EAAe,CAAf,EAAkBN,CAAlB,EAAqBJ,KAArB,EAA4BA,KAAK,GAAGC,MAApC,EAA4C,IAAIE,EAAhD;AACApB,YAAAA,OAAO,CAAC0B,KAAR,CAAc,IAAIJ,MAAlB,EAA0B,IAAIC,MAA9B;AACAvB,YAAAA,OAAO,CAACyB,MAAR,CAAe,CAACN,GAAhB;AACAnB,YAAAA,OAAO,CAACwB,SAAR,CAAkB,CAACX,EAAnB,EAAuB,CAACC,EAAxB;AACA;;AACJ,eAAK,GAAL;AACIX,YAAAA,QAAQ,GAAG,IAAX;AACAH,YAAAA,OAAO,CAAC4B,SAAR;AACA;AA7BR;AA+BH;;AACD,UAAI,CAACzB,QAAD,IAAa,CAAC,KAAK0B,OAAL,EAAlB,EAAkC;AAC9B7B,QAAAA,OAAO,CAAC8B,WAAR,CAAoB,IAApB;AACH,OAFD,MAGK;AACD9B,QAAAA,OAAO,CAAC+B,eAAR,CAAwB,IAAxB;AACH;AACJ;AA/DL;AAAA;AAAA,WAgEI,uBAAc;AACV,UAAIvB,MAAM,GAAG,EAAb;AACA,WAAKf,SAAL,CAAeuC,OAAf,CAAuB,UAAUpC,IAAV,EAAgB;AACnC,YAAIA,IAAI,CAACU,OAAL,KAAiB,GAArB,EAA0B;AACtB,cAAI2B,KAAK,GAAGrC,IAAI,CAACY,MAAL,CAAY,CAAZ,CAAZ;AACA,cAAIU,MAAM,GAAGtB,IAAI,CAACY,MAAL,CAAY,CAAZ,CAAb;AACA,cAAI0B,GAAG,GAAGtC,IAAI,CAACY,MAAL,CAAY,CAAZ,IAAiBU,MAA3B;AACA,cAAIiB,GAAG,GAAGC,IAAI,CAACC,EAAL,GAAU,KAApB;;AACA,cAAID,IAAI,CAACE,GAAL,CAASL,KAAK,GAAGC,GAAjB,IAAwBC,GAA5B,EAAiC;AAC7BA,YAAAA,GAAG,GAAGC,IAAI,CAACE,GAAL,CAASL,KAAK,GAAGC,GAAjB,CAAN;AACH;;AACD,cAAIhB,MAAM,GAAG,CAAb,EAAgB;AACZ,iBAAK,IAAIqB,CAAC,GAAGN,KAAK,GAAGE,GAArB,EAA0BI,CAAC,GAAGL,GAA9B,EAAmCK,CAAC,IAAIJ,GAAxC,EAA6C;AACzC,kBAAMK,KAAK,GAAGjD,IAAI,CAACkD,uBAAL,CAA6B7C,IAAI,CAACY,MAAL,CAAY,CAAZ,CAA7B,EAA6CZ,IAAI,CAACY,MAAL,CAAY,CAAZ,CAA7C,EAA6DZ,IAAI,CAACY,MAAL,CAAY,CAAZ,CAA7D,EAA6EZ,IAAI,CAACY,MAAL,CAAY,CAAZ,CAA7E,EAA6F+B,CAA7F,EAAgG,CAAhG,CAAd;AACA/B,cAAAA,MAAM,CAACkC,IAAP,CAAYF,KAAK,CAACG,CAAlB,EAAqBH,KAAK,CAACI,CAA3B;AACH;AACJ,WALD,MAMK;AACD,iBAAK,IAAIL,EAAC,GAAGN,KAAK,GAAGE,GAArB,EAA0BI,EAAC,GAAGL,GAA9B,EAAmCK,EAAC,IAAIJ,GAAxC,EAA6C;AACzC,kBAAMK,MAAK,GAAGjD,IAAI,CAACkD,uBAAL,CAA6B7C,IAAI,CAACY,MAAL,CAAY,CAAZ,CAA7B,EAA6CZ,IAAI,CAACY,MAAL,CAAY,CAAZ,CAA7C,EAA6DZ,IAAI,CAACY,MAAL,CAAY,CAAZ,CAA7D,EAA6EZ,IAAI,CAACY,MAAL,CAAY,CAAZ,CAA7E,EAA6F+B,EAA7F,EAAgG,CAAhG,CAAd;;AACA/B,cAAAA,MAAM,CAACkC,IAAP,CAAYF,MAAK,CAACG,CAAlB,EAAqBH,MAAK,CAACI,CAA3B;AACH;AACJ;AACJ,SApBD,MAqBK,IAAIhD,IAAI,CAACU,OAAL,KAAiB,GAArB,EAA0B;AAC3B,eAAK,IAAIiC,GAAC,GAAG,GAAb,EAAkBA,GAAC,IAAI,CAAvB,EAA0BA,GAAC,IAAI,IAA/B,EAAqC;AACjC,gBAAMC,OAAK,GAAGjD,IAAI,CAACsD,qBAAL,CAA2BN,GAA3B,EAA8B3C,IAAI,CAACqC,KAAL,CAAWU,CAAzC,EAA4C/C,IAAI,CAACqC,KAAL,CAAWW,CAAvD,EAA0DhD,IAAI,CAACY,MAAL,CAAY,CAAZ,CAA1D,EAA0EZ,IAAI,CAACY,MAAL,CAAY,CAAZ,CAA1E,EAA0FZ,IAAI,CAACY,MAAL,CAAY,CAAZ,CAA1F,EAA0GZ,IAAI,CAACY,MAAL,CAAY,CAAZ,CAA1G,EAA0HZ,IAAI,CAACY,MAAL,CAAY,CAAZ,CAA1H,EAA0IZ,IAAI,CAACY,MAAL,CAAY,CAAZ,CAA1I,CAAd;;AACAA,YAAAA,MAAM,CAACkC,IAAP,CAAYF,OAAK,CAACG,CAAlB,EAAqBH,OAAK,CAACI,CAA3B;AACH;AACJ,SALI,MAMA;AACDpC,UAAAA,MAAM,GAAGA,MAAM,CAACsC,MAAP,CAAclD,IAAI,CAACY,MAAnB,CAAT;AACH;AACJ,OA/BD;AAgCA,UAAIuC,IAAI,GAAGvC,MAAM,CAAC,CAAD,CAAjB;AACA,UAAIwC,IAAI,GAAGxC,MAAM,CAAC,CAAD,CAAjB;AACA,UAAIyC,IAAI,GAAGzC,MAAM,CAAC,CAAD,CAAjB;AACA,UAAI0C,IAAI,GAAG1C,MAAM,CAAC,CAAD,CAAjB;AACA,UAAImC,CAAJ,EAAOC,CAAP;;AACA,WAAK,IAAI/C,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGW,MAAM,CAACV,MAAP,GAAgB,CAApC,EAAuCD,CAAC,EAAxC,EAA4C;AACxC8C,QAAAA,CAAC,GAAGnC,MAAM,CAACX,CAAC,GAAG,CAAL,CAAV;AACA+C,QAAAA,CAAC,GAAGpC,MAAM,CAACX,CAAC,GAAG,CAAJ,GAAQ,CAAT,CAAV;;AACA,YAAI,CAACsD,KAAK,CAACR,CAAD,CAAV,EAAe;AACXI,UAAAA,IAAI,GAAGX,IAAI,CAACgB,GAAL,CAASL,IAAT,EAAeJ,CAAf,CAAP;AACAK,UAAAA,IAAI,GAAGZ,IAAI,CAACiB,GAAL,CAASL,IAAT,EAAeL,CAAf,CAAP;AACH;;AACD,YAAI,CAACQ,KAAK,CAACP,CAAD,CAAV,EAAe;AACXK,UAAAA,IAAI,GAAGb,IAAI,CAACgB,GAAL,CAASH,IAAT,EAAeL,CAAf,CAAP;AACAM,UAAAA,IAAI,GAAGd,IAAI,CAACiB,GAAL,CAASH,IAAT,EAAeN,CAAf,CAAP;AACH;AACJ;;AACD,aAAO;AACHD,QAAAA,CAAC,EAAEP,IAAI,CAACkB,KAAL,CAAWP,IAAX,CADA;AAEHH,QAAAA,CAAC,EAAER,IAAI,CAACkB,KAAL,CAAWL,IAAX,CAFA;AAGHM,QAAAA,KAAK,EAAEnB,IAAI,CAACkB,KAAL,CAAWN,IAAI,GAAGD,IAAlB,CAHJ;AAIHS,QAAAA,MAAM,EAAEpB,IAAI,CAACkB,KAAL,CAAWJ,IAAI,GAAGD,IAAlB;AAJL,OAAP;AAMH;AAzHL;AAAA;AAAA,WA0HI,qBAAY;AACR,aAAO,KAAKvD,UAAZ;AACH;AA5HL;AAAA;AAAA,WA6HI,0BAAiBI,MAAjB,EAAyB;AACrB,UAAI0C,KAAJ;AAAA,UAAW3C,CAAC,GAAG,CAAf;AAAA,UAAkB4D,EAAE,GAAG,KAAKhE,SAAL,CAAeK,MAAtC;;AACA,UAAI,CAAC2D,EAAL,EAAS;AACL,eAAO,IAAP;AACH;;AACD,aAAO5D,CAAC,GAAG4D,EAAJ,IAAU3D,MAAM,GAAG,KAAKL,SAAL,CAAeI,CAAf,EAAkBH,UAA5C,EAAwD;AACpDI,QAAAA,MAAM,IAAI,KAAKL,SAAL,CAAeI,CAAf,EAAkBH,UAA5B;AACA,UAAEG,CAAF;AACH;;AACD,UAAIA,CAAC,KAAK4D,EAAV,EAAc;AACVjB,QAAAA,KAAK,GAAG,KAAK/C,SAAL,CAAeI,CAAC,GAAG,CAAnB,EAAsBW,MAAtB,CAA6BkD,KAA7B,CAAmC,CAAC,CAApC,CAAR;AACA,eAAO;AACHf,UAAAA,CAAC,EAAEH,KAAK,CAAC,CAAD,CADL;AAEHI,UAAAA,CAAC,EAAEJ,KAAK,CAAC,CAAD;AAFL,SAAP;AAIH;;AACD,UAAI1C,MAAM,GAAG,IAAb,EAAmB;AACf0C,QAAAA,KAAK,GAAG,KAAK/C,SAAL,CAAeI,CAAf,EAAkBW,MAAlB,CAAyBkD,KAAzB,CAA+B,CAA/B,EAAkC,CAAlC,CAAR;AACA,eAAO;AACHf,UAAAA,CAAC,EAAEH,KAAK,CAAC,CAAD,CADL;AAEHI,UAAAA,CAAC,EAAEJ,KAAK,CAAC,CAAD;AAFL,SAAP;AAIH;;AACD,UAAImB,EAAE,GAAG,KAAKlE,SAAL,CAAeI,CAAf,CAAT;AACA,UAAIU,CAAC,GAAGoD,EAAE,CAACnD,MAAX;;AACA,cAAQmD,EAAE,CAACrD,OAAX;AACI,aAAK,GAAL;AACI,iBAAOf,IAAI,CAACqE,cAAL,CAAoB9D,MAApB,EAA4B6D,EAAE,CAAC1B,KAAH,CAASU,CAArC,EAAwCgB,EAAE,CAAC1B,KAAH,CAASW,CAAjD,EAAoDrC,CAAC,CAAC,CAAD,CAArD,EAA0DA,CAAC,CAAC,CAAD,CAA3D,CAAP;;AACJ,aAAK,GAAL;AACI,iBAAOhB,IAAI,CAACsD,qBAAL,CAA2B/C,MAAM,GAAG6D,EAAE,CAACjE,UAAvC,EAAmDiE,EAAE,CAAC1B,KAAH,CAASU,CAA5D,EAA+DgB,EAAE,CAAC1B,KAAH,CAASW,CAAxE,EAA2ErC,CAAC,CAAC,CAAD,CAA5E,EAAiFA,CAAC,CAAC,CAAD,CAAlF,EAAuFA,CAAC,CAAC,CAAD,CAAxF,EAA6FA,CAAC,CAAC,CAAD,CAA9F,EAAmGA,CAAC,CAAC,CAAD,CAApG,EAAyGA,CAAC,CAAC,CAAD,CAA1G,CAAP;;AACJ,aAAK,GAAL;AACI,iBAAOhB,IAAI,CAACsE,yBAAL,CAA+B/D,MAAM,GAAG6D,EAAE,CAACjE,UAA3C,EAAuDiE,EAAE,CAAC1B,KAAH,CAASU,CAAhE,EAAmEgB,EAAE,CAAC1B,KAAH,CAASW,CAA5E,EAA+ErC,CAAC,CAAC,CAAD,CAAhF,EAAqFA,CAAC,CAAC,CAAD,CAAtF,EAA2FA,CAAC,CAAC,CAAD,CAA5F,EAAiGA,CAAC,CAAC,CAAD,CAAlG,CAAP;;AACJ,aAAK,GAAL;AACI,cAAIM,EAAE,GAAGN,CAAC,CAAC,CAAD,CAAV;AAAA,cAAeO,EAAE,GAAGP,CAAC,CAAC,CAAD,CAArB;AAAA,cAA0BQ,EAAE,GAAGR,CAAC,CAAC,CAAD,CAAhC;AAAA,cAAqCS,EAAE,GAAGT,CAAC,CAAC,CAAD,CAA3C;AAAA,cAAgDU,KAAK,GAAGV,CAAC,CAAC,CAAD,CAAzD;AAAA,cAA8DW,MAAM,GAAGX,CAAC,CAAC,CAAD,CAAxE;AAAA,cAA6EY,GAAG,GAAGZ,CAAC,CAAC,CAAD,CAApF;AACAU,UAAAA,KAAK,IAAKC,MAAM,GAAGpB,MAAV,GAAoB6D,EAAE,CAACjE,UAAhC;AACA,iBAAOH,IAAI,CAACkD,uBAAL,CAA6B5B,EAA7B,EAAiCC,EAAjC,EAAqCC,EAArC,EAAyCC,EAAzC,EAA6CC,KAA7C,EAAoDE,GAApD,CAAP;AAVR;;AAYA,aAAO,IAAP;AACH;AAnKL;AAAA;AAAA,WAoKI,uBAAqB2C,EAArB,EAAyBC,EAAzB,EAA6BC,EAA7B,EAAiCC,EAAjC,EAAqC;AACjC,aAAO7B,IAAI,CAAC8B,IAAL,CAAU,CAACF,EAAE,GAAGF,EAAN,KAAaE,EAAE,GAAGF,EAAlB,IAAwB,CAACG,EAAE,GAAGF,EAAN,KAAaE,EAAE,GAAGF,EAAlB,CAAlC,CAAP;AACH;AAtKL;AAAA;AAAA,WAuKI,wBAAsBI,IAAtB,EAA4BC,GAA5B,EAAiCC,GAAjC,EAAsCC,GAAtC,EAA2CC,GAA3C,EAAgDC,KAAhD,EAAuDC,KAAvD,EAA8D;AAC1D,UAAID,KAAK,KAAKE,SAAd,EAAyB;AACrBF,QAAAA,KAAK,GAAGJ,GAAR;AACH;;AACD,UAAIK,KAAK,KAAKC,SAAd,EAAyB;AACrBD,QAAAA,KAAK,GAAGJ,GAAR;AACH;;AACD,UAAIM,CAAC,GAAG,CAACJ,GAAG,GAAGF,GAAP,KAAeC,GAAG,GAAGF,GAAN,GAAY,UAA3B,CAAR;AACA,UAAIQ,GAAG,GAAGxC,IAAI,CAAC8B,IAAL,CAAWC,IAAI,GAAGA,IAAR,IAAiB,IAAIQ,CAAC,GAAGA,CAAzB,CAAV,CAAV;;AACA,UAAIL,GAAG,GAAGF,GAAV,EAAe;AACXQ,QAAAA,GAAG,IAAI,CAAC,CAAR;AACH;;AACD,UAAIC,IAAI,GAAGF,CAAC,GAAGC,GAAf;AACA,UAAIE,EAAJ;;AACA,UAAIR,GAAG,KAAKF,GAAZ,EAAiB;AACbU,QAAAA,EAAE,GAAG;AACDnC,UAAAA,CAAC,EAAE6B,KADF;AAED5B,UAAAA,CAAC,EAAE6B,KAAK,GAAGI;AAFV,SAAL;AAIH,OALD,MAMK,IAAI,CAACJ,KAAK,GAAGJ,GAAT,KAAiBG,KAAK,GAAGJ,GAAR,GAAc,UAA/B,MAA+CO,CAAnD,EAAsD;AACvDG,QAAAA,EAAE,GAAG;AACDnC,UAAAA,CAAC,EAAE6B,KAAK,GAAGI,GADV;AAEDhC,UAAAA,CAAC,EAAE6B,KAAK,GAAGI;AAFV,SAAL;AAIH,OALI,MAMA;AACD,YAAIE,EAAJ,EAAQC,EAAR;AACA,YAAIC,GAAG,GAAG,KAAKC,aAAL,CAAmBd,GAAnB,EAAwBC,GAAxB,EAA6BC,GAA7B,EAAkCC,GAAlC,CAAV;AACA,YAAIY,CAAC,GAAG,CAACX,KAAK,GAAGJ,GAAT,KAAiBE,GAAG,GAAGF,GAAvB,IAA8B,CAACK,KAAK,GAAGJ,GAAT,KAAiBE,GAAG,GAAGF,GAAvB,CAAtC;AACAc,QAAAA,CAAC,GAAGA,CAAC,IAAIF,GAAG,GAAGA,GAAV,CAAL;AACAF,QAAAA,EAAE,GAAGX,GAAG,GAAGe,CAAC,IAAIb,GAAG,GAAGF,GAAV,CAAZ;AACAY,QAAAA,EAAE,GAAGX,GAAG,GAAGc,CAAC,IAAIZ,GAAG,GAAGF,GAAV,CAAZ;AACA,YAAIe,KAAK,GAAG,KAAKF,aAAL,CAAmBV,KAAnB,EAA0BC,KAA1B,EAAiCM,EAAjC,EAAqCC,EAArC,CAAZ;AACA,YAAIK,IAAI,GAAGjD,IAAI,CAAC8B,IAAL,CAAUC,IAAI,GAAGA,IAAP,GAAciB,KAAK,GAAGA,KAAhC,CAAX;AACAR,QAAAA,GAAG,GAAGxC,IAAI,CAAC8B,IAAL,CAAWmB,IAAI,GAAGA,IAAR,IAAiB,IAAIV,CAAC,GAAGA,CAAzB,CAAV,CAAN;;AACA,YAAIL,GAAG,GAAGF,GAAV,EAAe;AACXQ,UAAAA,GAAG,IAAI,CAAC,CAAR;AACH;;AACDC,QAAAA,IAAI,GAAGF,CAAC,GAAGC,GAAX;AACAE,QAAAA,EAAE,GAAG;AACDnC,UAAAA,CAAC,EAAEoC,EAAE,GAAGH,GADP;AAEDhC,UAAAA,CAAC,EAAEoC,EAAE,GAAGH;AAFP,SAAL;AAIH;;AACD,aAAOC,EAAP;AACH;AArNL;AAAA;AAAA,WAsNI,+BAA6BQ,GAA7B,EAAkClB,GAAlC,EAAuCC,GAAvC,EAA4CC,GAA5C,EAAiDC,GAAjD,EAAsDgB,GAAtD,EAA2DC,GAA3D,EAAgEC,GAAhE,EAAqEC,GAArE,EAA0E;AACtE,eAASC,GAAT,CAAapD,CAAb,EAAgB;AACZ,eAAOA,CAAC,GAAGA,CAAJ,GAAQA,CAAf;AACH;;AACD,eAASqD,GAAT,CAAarD,CAAb,EAAgB;AACZ,eAAO,IAAIA,CAAJ,GAAQA,CAAR,IAAa,IAAIA,CAAjB,CAAP;AACH;;AACD,eAASsD,GAAT,CAAatD,CAAb,EAAgB;AACZ,eAAO,IAAIA,CAAJ,IAAS,IAAIA,CAAb,KAAmB,IAAIA,CAAvB,CAAP;AACH;;AACD,eAASuD,GAAT,CAAavD,CAAb,EAAgB;AACZ,eAAO,CAAC,IAAIA,CAAL,KAAW,IAAIA,CAAf,KAAqB,IAAIA,CAAzB,CAAP;AACH;;AACD,UAAII,CAAC,GAAG8C,GAAG,GAAGE,GAAG,CAACL,GAAD,CAAT,GAAiBC,GAAG,GAAGK,GAAG,CAACN,GAAD,CAA1B,GAAkChB,GAAG,GAAGuB,GAAG,CAACP,GAAD,CAA3C,GAAmDlB,GAAG,GAAG0B,GAAG,CAACR,GAAD,CAApE;AACA,UAAI1C,CAAC,GAAG8C,GAAG,GAAGC,GAAG,CAACL,GAAD,CAAT,GAAiBE,GAAG,GAAGI,GAAG,CAACN,GAAD,CAA1B,GAAkCf,GAAG,GAAGsB,GAAG,CAACP,GAAD,CAA3C,GAAmDjB,GAAG,GAAGyB,GAAG,CAACR,GAAD,CAApE;AACA,aAAO;AACH3C,QAAAA,CAAC,EAAEA,CADA;AAEHC,QAAAA,CAAC,EAAEA;AAFA,OAAP;AAIH;AAzOL;AAAA;AAAA,WA0OI,mCAAiC0C,GAAjC,EAAsClB,GAAtC,EAA2CC,GAA3C,EAAgDC,GAAhD,EAAqDC,GAArD,EAA0DgB,GAA1D,EAA+DC,GAA/D,EAAoE;AAChE,eAASO,GAAT,CAAaxD,CAAb,EAAgB;AACZ,eAAOA,CAAC,GAAGA,CAAX;AACH;;AACD,eAASyD,GAAT,CAAazD,CAAb,EAAgB;AACZ,eAAO,IAAIA,CAAJ,IAAS,IAAIA,CAAb,CAAP;AACH;;AACD,eAAS0D,GAAT,CAAa1D,CAAb,EAAgB;AACZ,eAAO,CAAC,IAAIA,CAAL,KAAW,IAAIA,CAAf,CAAP;AACH;;AACD,UAAII,CAAC,GAAG4C,GAAG,GAAGQ,GAAG,CAACT,GAAD,CAAT,GAAiBhB,GAAG,GAAG0B,GAAG,CAACV,GAAD,CAA1B,GAAkClB,GAAG,GAAG6B,GAAG,CAACX,GAAD,CAAnD;AACA,UAAI1C,CAAC,GAAG4C,GAAG,GAAGO,GAAG,CAACT,GAAD,CAAT,GAAiBf,GAAG,GAAGyB,GAAG,CAACV,GAAD,CAA1B,GAAkCjB,GAAG,GAAG4B,GAAG,CAACX,GAAD,CAAnD;AACA,aAAO;AACH3C,QAAAA,CAAC,EAAEA,CADA;AAEHC,QAAAA,CAAC,EAAEA;AAFA,OAAP;AAIH;AA1PL;AAAA;AAAA,WA2PI,iCAA+B/B,EAA/B,EAAmCC,EAAnC,EAAuCC,EAAvC,EAA2CC,EAA3C,EAA+CC,KAA/C,EAAsDE,GAAtD,EAA2D;AACvD,UAAI+E,MAAM,GAAG9D,IAAI,CAAC+D,GAAL,CAAShF,GAAT,CAAb;AAAA,UAA4BiF,MAAM,GAAGhE,IAAI,CAACiE,GAAL,CAASlF,GAAT,CAArC;AACA,UAAI2D,EAAE,GAAG;AACLnC,QAAAA,CAAC,EAAE5B,EAAE,GAAGqB,IAAI,CAAC+D,GAAL,CAASlF,KAAT,CADH;AAEL2B,QAAAA,CAAC,EAAE5B,EAAE,GAAGoB,IAAI,CAACiE,GAAL,CAASpF,KAAT;AAFH,OAAT;AAIA,aAAO;AACH0B,QAAAA,CAAC,EAAE9B,EAAE,IAAIiE,EAAE,CAACnC,CAAH,GAAOuD,MAAP,GAAgBpB,EAAE,CAAClC,CAAH,GAAOwD,MAA3B,CADF;AAEHxD,QAAAA,CAAC,EAAE9B,EAAE,IAAIgE,EAAE,CAACnC,CAAH,GAAOyD,MAAP,GAAgBtB,EAAE,CAAClC,CAAH,GAAOsD,MAA3B;AAFF,OAAP;AAIH;AArQL;AAAA;AAAA,WAsQI,uBAAqBtG,IAArB,EAA2B;AACvB,UAAI,CAACA,IAAL,EAAW;AACP,eAAO,EAAP;AACH;;AACD,UAAI0G,EAAE,GAAG1G,IAAT;AACA,UAAI2G,EAAE,GAAG,CACL,GADK,EAEL,GAFK,EAGL,GAHK,EAIL,GAJK,EAKL,GALK,EAML,GANK,EAOL,GAPK,EAQL,GARK,EASL,GATK,EAUL,GAVK,EAWL,GAXK,EAYL,GAZK,EAaL,GAbK,EAcL,GAdK,EAeL,GAfK,EAgBL,GAhBK,EAiBL,GAjBK,EAkBL,GAlBK,EAmBL,GAnBK,EAoBL,GApBK,CAAT;AAsBAD,MAAAA,EAAE,GAAGA,EAAE,CAACE,OAAH,CAAW,IAAIC,MAAJ,CAAW,GAAX,EAAgB,GAAhB,CAAX,EAAiC,GAAjC,CAAL;;AACA,WAAK,IAAIrG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGmG,EAAE,CAACzG,MAAvB,EAA+BM,CAAC,EAAhC,EAAoC;AAChCkG,QAAAA,EAAE,GAAGA,EAAE,CAACE,OAAH,CAAW,IAAIC,MAAJ,CAAWF,EAAE,CAACnG,CAAD,CAAb,EAAkB,GAAlB,CAAX,EAAmC,MAAMmG,EAAE,CAACnG,CAAD,CAA3C,CAAL;AACH;;AACD,UAAIsG,GAAG,GAAGJ,EAAE,CAACK,KAAH,CAAS,GAAT,CAAV;AACA,UAAI1G,EAAE,GAAG,EAAT;AACA,UAAI2G,MAAM,GAAG,EAAb;AACA,UAAIC,GAAG,GAAG,CAAV;AACA,UAAIC,GAAG,GAAG,CAAV;AACA,UAAIC,EAAE,GAAG,qDAAT;AACA,UAAIC,KAAJ;;AACA,WAAK5G,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGsG,GAAG,CAAC5G,MAApB,EAA4BM,CAAC,EAA7B,EAAiC;AAC7B,YAAI6G,GAAG,GAAGP,GAAG,CAACtG,CAAD,CAAb;AACA,YAAIC,CAAC,GAAG4G,GAAG,CAACC,MAAJ,CAAW,CAAX,CAAR;AACAD,QAAAA,GAAG,GAAGA,GAAG,CAACvD,KAAJ,CAAU,CAAV,CAAN;AACAkD,QAAAA,MAAM,CAAC9G,MAAP,GAAgB,CAAhB;;AACA,eAAQkH,KAAK,GAAGD,EAAE,CAACI,IAAH,CAAQF,GAAR,CAAhB,EAA+B;AAC3BL,UAAAA,MAAM,CAAClE,IAAP,CAAYsE,KAAK,CAAC,CAAD,CAAjB;AACH;;AACD,YAAIzG,CAAC,GAAG,EAAR;;AACA,aAAK,IAAI6G,CAAC,GAAG,CAAR,EAAWC,IAAI,GAAGT,MAAM,CAAC9G,MAA9B,EAAsCsH,CAAC,GAAGC,IAA1C,EAAgDD,CAAC,EAAjD,EAAqD;AACjD,cAAIR,MAAM,CAACQ,CAAD,CAAN,KAAc,IAAlB,EAAwB;AACpB7G,YAAAA,CAAC,CAACmC,IAAF,CAAO,CAAP,EAAU,CAAV;AACA;AACH;;AACD,cAAI4E,MAAM,GAAGC,UAAU,CAACX,MAAM,CAACQ,CAAD,CAAP,CAAvB;;AACA,cAAI,CAACjE,KAAK,CAACmE,MAAD,CAAV,EAAoB;AAChB/G,YAAAA,CAAC,CAACmC,IAAF,CAAO4E,MAAP;AACH,WAFD,MAGK;AACD/G,YAAAA,CAAC,CAACmC,IAAF,CAAO,CAAP;AACH;AACJ;;AACD,eAAOnC,CAAC,CAACT,MAAF,GAAW,CAAlB,EAAqB;AACjB,cAAIqD,KAAK,CAAC5C,CAAC,CAAC,CAAD,CAAF,CAAT,EAAiB;AACb;AACH;;AACD,cAAIiH,GAAG,GAAG,IAAV;AACA,cAAIhH,MAAM,GAAG,EAAb;AACA,cAAIiH,MAAM,GAAGZ,GAAb;AAAA,cAAkBa,MAAM,GAAGZ,GAA3B;AACA,cAAIa,OAAJ,EAAaC,MAAb,EAAqBC,MAArB;AACA,cAAI9G,EAAJ,EAAQC,EAAR,EAAYG,GAAZ,EAAiB2G,EAAjB,EAAqB1G,EAArB,EAAyB0C,EAAzB,EAA6BC,EAA7B;;AACA,kBAAQ1D,CAAR;AACI,iBAAK,GAAL;AACIwG,cAAAA,GAAG,IAAItG,CAAC,CAACwH,KAAF,EAAP;AACAjB,cAAAA,GAAG,IAAIvG,CAAC,CAACwH,KAAF,EAAP;AACAP,cAAAA,GAAG,GAAG,GAAN;AACAhH,cAAAA,MAAM,CAACkC,IAAP,CAAYmE,GAAZ,EAAiBC,GAAjB;AACA;;AACJ,iBAAK,GAAL;AACID,cAAAA,GAAG,GAAGtG,CAAC,CAACwH,KAAF,EAAN;AACAjB,cAAAA,GAAG,GAAGvG,CAAC,CAACwH,KAAF,EAAN;AACAvH,cAAAA,MAAM,CAACkC,IAAP,CAAYmE,GAAZ,EAAiBC,GAAjB;AACA;;AACJ,iBAAK,GAAL;AACI,kBAAIkB,EAAE,GAAGzH,CAAC,CAACwH,KAAF,EAAT;AACA,kBAAIE,EAAE,GAAG1H,CAAC,CAACwH,KAAF,EAAT;AACAlB,cAAAA,GAAG,IAAImB,EAAP;AACAlB,cAAAA,GAAG,IAAImB,EAAP;AACAT,cAAAA,GAAG,GAAG,GAAN;;AACA,kBAAIvH,EAAE,CAACH,MAAH,GAAY,CAAZ,IAAiBG,EAAE,CAACA,EAAE,CAACH,MAAH,GAAY,CAAb,CAAF,CAAkBQ,OAAlB,KAA8B,GAAnD,EAAwD;AACpD,qBAAK,IAAI4H,GAAG,GAAGjI,EAAE,CAACH,MAAH,GAAY,CAA3B,EAA8BoI,GAAG,IAAI,CAArC,EAAwCA,GAAG,EAA3C,EAA+C;AAC3C,sBAAIjI,EAAE,CAACiI,GAAD,CAAF,CAAQ5H,OAAR,KAAoB,GAAxB,EAA6B;AACzBuG,oBAAAA,GAAG,GAAG5G,EAAE,CAACiI,GAAD,CAAF,CAAQ1H,MAAR,CAAe,CAAf,IAAoBwH,EAA1B;AACAlB,oBAAAA,GAAG,GAAG7G,EAAE,CAACiI,GAAD,CAAF,CAAQ1H,MAAR,CAAe,CAAf,IAAoByH,EAA1B;AACA;AACH;AACJ;AACJ;;AACDzH,cAAAA,MAAM,CAACkC,IAAP,CAAYmE,GAAZ,EAAiBC,GAAjB;AACAzG,cAAAA,CAAC,GAAG,GAAJ;AACA;;AACJ,iBAAK,GAAL;AACIwG,cAAAA,GAAG,GAAGtG,CAAC,CAACwH,KAAF,EAAN;AACAjB,cAAAA,GAAG,GAAGvG,CAAC,CAACwH,KAAF,EAAN;AACAP,cAAAA,GAAG,GAAG,GAAN;AACAhH,cAAAA,MAAM,CAACkC,IAAP,CAAYmE,GAAZ,EAAiBC,GAAjB;AACAzG,cAAAA,CAAC,GAAG,GAAJ;AACA;;AACJ,iBAAK,GAAL;AACIwG,cAAAA,GAAG,IAAItG,CAAC,CAACwH,KAAF,EAAP;AACAP,cAAAA,GAAG,GAAG,GAAN;AACAhH,cAAAA,MAAM,CAACkC,IAAP,CAAYmE,GAAZ,EAAiBC,GAAjB;AACA;;AACJ,iBAAK,GAAL;AACID,cAAAA,GAAG,GAAGtG,CAAC,CAACwH,KAAF,EAAN;AACAP,cAAAA,GAAG,GAAG,GAAN;AACAhH,cAAAA,MAAM,CAACkC,IAAP,CAAYmE,GAAZ,EAAiBC,GAAjB;AACA;;AACJ,iBAAK,GAAL;AACIA,cAAAA,GAAG,IAAIvG,CAAC,CAACwH,KAAF,EAAP;AACAP,cAAAA,GAAG,GAAG,GAAN;AACAhH,cAAAA,MAAM,CAACkC,IAAP,CAAYmE,GAAZ,EAAiBC,GAAjB;AACA;;AACJ,iBAAK,GAAL;AACIA,cAAAA,GAAG,GAAGvG,CAAC,CAACwH,KAAF,EAAN;AACAP,cAAAA,GAAG,GAAG,GAAN;AACAhH,cAAAA,MAAM,CAACkC,IAAP,CAAYmE,GAAZ,EAAiBC,GAAjB;AACA;;AACJ,iBAAK,GAAL;AACItG,cAAAA,MAAM,CAACkC,IAAP,CAAYnC,CAAC,CAACwH,KAAF,EAAZ,EAAuBxH,CAAC,CAACwH,KAAF,EAAvB,EAAkCxH,CAAC,CAACwH,KAAF,EAAlC,EAA6CxH,CAAC,CAACwH,KAAF,EAA7C;AACAlB,cAAAA,GAAG,GAAGtG,CAAC,CAACwH,KAAF,EAAN;AACAjB,cAAAA,GAAG,GAAGvG,CAAC,CAACwH,KAAF,EAAN;AACAvH,cAAAA,MAAM,CAACkC,IAAP,CAAYmE,GAAZ,EAAiBC,GAAjB;AACA;;AACJ,iBAAK,GAAL;AACItG,cAAAA,MAAM,CAACkC,IAAP,CAAYmE,GAAG,GAAGtG,CAAC,CAACwH,KAAF,EAAlB,EAA6BjB,GAAG,GAAGvG,CAAC,CAACwH,KAAF,EAAnC,EAA8ClB,GAAG,GAAGtG,CAAC,CAACwH,KAAF,EAApD,EAA+DjB,GAAG,GAAGvG,CAAC,CAACwH,KAAF,EAArE;AACAlB,cAAAA,GAAG,IAAItG,CAAC,CAACwH,KAAF,EAAP;AACAjB,cAAAA,GAAG,IAAIvG,CAAC,CAACwH,KAAF,EAAP;AACAP,cAAAA,GAAG,GAAG,GAAN;AACAhH,cAAAA,MAAM,CAACkC,IAAP,CAAYmE,GAAZ,EAAiBC,GAAjB;AACA;;AACJ,iBAAK,GAAL;AACIc,cAAAA,MAAM,GAAGf,GAAT;AACAgB,cAAAA,MAAM,GAAGf,GAAT;AACAa,cAAAA,OAAO,GAAG1H,EAAE,CAACA,EAAE,CAACH,MAAH,GAAY,CAAb,CAAZ;;AACA,kBAAI6H,OAAO,CAACrH,OAAR,KAAoB,GAAxB,EAA6B;AACzBsH,gBAAAA,MAAM,GAAGf,GAAG,IAAIA,GAAG,GAAGc,OAAO,CAACnH,MAAR,CAAe,CAAf,CAAV,CAAZ;AACAqH,gBAAAA,MAAM,GAAGf,GAAG,IAAIA,GAAG,GAAGa,OAAO,CAACnH,MAAR,CAAe,CAAf,CAAV,CAAZ;AACH;;AACDA,cAAAA,MAAM,CAACkC,IAAP,CAAYkF,MAAZ,EAAoBC,MAApB,EAA4BtH,CAAC,CAACwH,KAAF,EAA5B,EAAuCxH,CAAC,CAACwH,KAAF,EAAvC;AACAlB,cAAAA,GAAG,GAAGtG,CAAC,CAACwH,KAAF,EAAN;AACAjB,cAAAA,GAAG,GAAGvG,CAAC,CAACwH,KAAF,EAAN;AACAP,cAAAA,GAAG,GAAG,GAAN;AACAhH,cAAAA,MAAM,CAACkC,IAAP,CAAYmE,GAAZ,EAAiBC,GAAjB;AACA;;AACJ,iBAAK,GAAL;AACIc,cAAAA,MAAM,GAAGf,GAAT;AACAgB,cAAAA,MAAM,GAAGf,GAAT;AACAa,cAAAA,OAAO,GAAG1H,EAAE,CAACA,EAAE,CAACH,MAAH,GAAY,CAAb,CAAZ;;AACA,kBAAI6H,OAAO,CAACrH,OAAR,KAAoB,GAAxB,EAA6B;AACzBsH,gBAAAA,MAAM,GAAGf,GAAG,IAAIA,GAAG,GAAGc,OAAO,CAACnH,MAAR,CAAe,CAAf,CAAV,CAAZ;AACAqH,gBAAAA,MAAM,GAAGf,GAAG,IAAIA,GAAG,GAAGa,OAAO,CAACnH,MAAR,CAAe,CAAf,CAAV,CAAZ;AACH;;AACDA,cAAAA,MAAM,CAACkC,IAAP,CAAYkF,MAAZ,EAAoBC,MAApB,EAA4BhB,GAAG,GAAGtG,CAAC,CAACwH,KAAF,EAAlC,EAA6CjB,GAAG,GAAGvG,CAAC,CAACwH,KAAF,EAAnD;AACAlB,cAAAA,GAAG,IAAItG,CAAC,CAACwH,KAAF,EAAP;AACAjB,cAAAA,GAAG,IAAIvG,CAAC,CAACwH,KAAF,EAAP;AACAP,cAAAA,GAAG,GAAG,GAAN;AACAhH,cAAAA,MAAM,CAACkC,IAAP,CAAYmE,GAAZ,EAAiBC,GAAjB;AACA;;AACJ,iBAAK,GAAL;AACItG,cAAAA,MAAM,CAACkC,IAAP,CAAYnC,CAAC,CAACwH,KAAF,EAAZ,EAAuBxH,CAAC,CAACwH,KAAF,EAAvB;AACAlB,cAAAA,GAAG,GAAGtG,CAAC,CAACwH,KAAF,EAAN;AACAjB,cAAAA,GAAG,GAAGvG,CAAC,CAACwH,KAAF,EAAN;AACAvH,cAAAA,MAAM,CAACkC,IAAP,CAAYmE,GAAZ,EAAiBC,GAAjB;AACA;;AACJ,iBAAK,GAAL;AACItG,cAAAA,MAAM,CAACkC,IAAP,CAAYmE,GAAG,GAAGtG,CAAC,CAACwH,KAAF,EAAlB,EAA6BjB,GAAG,GAAGvG,CAAC,CAACwH,KAAF,EAAnC;AACAlB,cAAAA,GAAG,IAAItG,CAAC,CAACwH,KAAF,EAAP;AACAjB,cAAAA,GAAG,IAAIvG,CAAC,CAACwH,KAAF,EAAP;AACAP,cAAAA,GAAG,GAAG,GAAN;AACAhH,cAAAA,MAAM,CAACkC,IAAP,CAAYmE,GAAZ,EAAiBC,GAAjB;AACA;;AACJ,iBAAK,GAAL;AACIc,cAAAA,MAAM,GAAGf,GAAT;AACAgB,cAAAA,MAAM,GAAGf,GAAT;AACAa,cAAAA,OAAO,GAAG1H,EAAE,CAACA,EAAE,CAACH,MAAH,GAAY,CAAb,CAAZ;;AACA,kBAAI6H,OAAO,CAACrH,OAAR,KAAoB,GAAxB,EAA6B;AACzBsH,gBAAAA,MAAM,GAAGf,GAAG,IAAIA,GAAG,GAAGc,OAAO,CAACnH,MAAR,CAAe,CAAf,CAAV,CAAZ;AACAqH,gBAAAA,MAAM,GAAGf,GAAG,IAAIA,GAAG,GAAGa,OAAO,CAACnH,MAAR,CAAe,CAAf,CAAV,CAAZ;AACH;;AACDqG,cAAAA,GAAG,GAAGtG,CAAC,CAACwH,KAAF,EAAN;AACAjB,cAAAA,GAAG,GAAGvG,CAAC,CAACwH,KAAF,EAAN;AACAP,cAAAA,GAAG,GAAG,GAAN;AACAhH,cAAAA,MAAM,CAACkC,IAAP,CAAYkF,MAAZ,EAAoBC,MAApB,EAA4BhB,GAA5B,EAAiCC,GAAjC;AACA;;AACJ,iBAAK,GAAL;AACIc,cAAAA,MAAM,GAAGf,GAAT;AACAgB,cAAAA,MAAM,GAAGf,GAAT;AACAa,cAAAA,OAAO,GAAG1H,EAAE,CAACA,EAAE,CAACH,MAAH,GAAY,CAAb,CAAZ;;AACA,kBAAI6H,OAAO,CAACrH,OAAR,KAAoB,GAAxB,EAA6B;AACzBsH,gBAAAA,MAAM,GAAGf,GAAG,IAAIA,GAAG,GAAGc,OAAO,CAACnH,MAAR,CAAe,CAAf,CAAV,CAAZ;AACAqH,gBAAAA,MAAM,GAAGf,GAAG,IAAIA,GAAG,GAAGa,OAAO,CAACnH,MAAR,CAAe,CAAf,CAAV,CAAZ;AACH;;AACDqG,cAAAA,GAAG,IAAItG,CAAC,CAACwH,KAAF,EAAP;AACAjB,cAAAA,GAAG,IAAIvG,CAAC,CAACwH,KAAF,EAAP;AACAP,cAAAA,GAAG,GAAG,GAAN;AACAhH,cAAAA,MAAM,CAACkC,IAAP,CAAYkF,MAAZ,EAAoBC,MAApB,EAA4BhB,GAA5B,EAAiCC,GAAjC;AACA;;AACJ,iBAAK,GAAL;AACI/F,cAAAA,EAAE,GAAGR,CAAC,CAACwH,KAAF,EAAL;AACA/G,cAAAA,EAAE,GAAGT,CAAC,CAACwH,KAAF,EAAL;AACA5G,cAAAA,GAAG,GAAGZ,CAAC,CAACwH,KAAF,EAAN;AACAD,cAAAA,EAAE,GAAGvH,CAAC,CAACwH,KAAF,EAAL;AACA3G,cAAAA,EAAE,GAAGb,CAAC,CAACwH,KAAF,EAAL;AACAjE,cAAAA,EAAE,GAAG+C,GAAL;AACA9C,cAAAA,EAAE,GAAG+C,GAAL;AACAD,cAAAA,GAAG,GAAGtG,CAAC,CAACwH,KAAF,EAAN;AACAjB,cAAAA,GAAG,GAAGvG,CAAC,CAACwH,KAAF,EAAN;AACAP,cAAAA,GAAG,GAAG,GAAN;AACAhH,cAAAA,MAAM,GAAG,KAAK2H,uCAAL,CAA6CrE,EAA7C,EAAiDC,EAAjD,EAAqD8C,GAArD,EAA0DC,GAA1D,EAA+DgB,EAA/D,EAAmE1G,EAAnE,EAAuEL,EAAvE,EAA2EC,EAA3E,EAA+EG,GAA/E,CAAT;AACA;;AACJ,iBAAK,GAAL;AACIJ,cAAAA,EAAE,GAAGR,CAAC,CAACwH,KAAF,EAAL;AACA/G,cAAAA,EAAE,GAAGT,CAAC,CAACwH,KAAF,EAAL;AACA5G,cAAAA,GAAG,GAAGZ,CAAC,CAACwH,KAAF,EAAN;AACAD,cAAAA,EAAE,GAAGvH,CAAC,CAACwH,KAAF,EAAL;AACA3G,cAAAA,EAAE,GAAGb,CAAC,CAACwH,KAAF,EAAL;AACAjE,cAAAA,EAAE,GAAG+C,GAAL;AACA9C,cAAAA,EAAE,GAAG+C,GAAL;AACAD,cAAAA,GAAG,IAAItG,CAAC,CAACwH,KAAF,EAAP;AACAjB,cAAAA,GAAG,IAAIvG,CAAC,CAACwH,KAAF,EAAP;AACAP,cAAAA,GAAG,GAAG,GAAN;AACAhH,cAAAA,MAAM,GAAG,KAAK2H,uCAAL,CAA6CrE,EAA7C,EAAiDC,EAAjD,EAAqD8C,GAArD,EAA0DC,GAA1D,EAA+DgB,EAA/D,EAAmE1G,EAAnE,EAAuEL,EAAvE,EAA2EC,EAA3E,EAA+EG,GAA/E,CAAT;AACA;AAlKR;;AAoKAlB,UAAAA,EAAE,CAACyC,IAAH,CAAQ;AACJpC,YAAAA,OAAO,EAAEkH,GAAG,IAAInH,CADZ;AAEJG,YAAAA,MAAM,EAAEA,MAFJ;AAGJyB,YAAAA,KAAK,EAAE;AACHU,cAAAA,CAAC,EAAE8E,MADA;AAEH7E,cAAAA,CAAC,EAAE8E;AAFA,aAHH;AAOJhI,YAAAA,UAAU,EAAE,KAAK0I,UAAL,CAAgBX,MAAhB,EAAwBC,MAAxB,EAAgCF,GAAG,IAAInH,CAAvC,EAA0CG,MAA1C;AAPR,WAAR;AASH;;AACD,YAAIH,CAAC,KAAK,GAAN,IAAaA,CAAC,KAAK,GAAvB,EAA4B;AACxBJ,UAAAA,EAAE,CAACyC,IAAH,CAAQ;AACJpC,YAAAA,OAAO,EAAE,GADL;AAEJE,YAAAA,MAAM,EAAE,EAFJ;AAGJyB,YAAAA,KAAK,EAAEyC,SAHH;AAIJhF,YAAAA,UAAU,EAAE;AAJR,WAAR;AAMH;AACJ;;AACD,aAAOO,EAAP;AACH;AAngBL;AAAA;AAAA,WAogBI,oBAAkB0C,CAAlB,EAAqBC,CAArB,EAAwB4E,GAAxB,EAA6BhH,MAA7B,EAAqC;AACjC,UAAIyE,GAAJ,EAASoD,EAAT,EAAaC,EAAb,EAAiB/F,CAAjB;AACA,UAAIgG,IAAI,GAAGhJ,IAAX;;AACA,cAAQiI,GAAR;AACI,aAAK,GAAL;AACI,iBAAOe,IAAI,CAACrD,aAAL,CAAmBvC,CAAnB,EAAsBC,CAAtB,EAAyBpC,MAAM,CAAC,CAAD,CAA/B,EAAoCA,MAAM,CAAC,CAAD,CAA1C,CAAP;;AACJ,aAAK,GAAL;AACIyE,UAAAA,GAAG,GAAG,GAAN;AACAoD,UAAAA,EAAE,GAAGE,IAAI,CAAC1F,qBAAL,CAA2B,CAA3B,EAA8BF,CAA9B,EAAiCC,CAAjC,EAAoCpC,MAAM,CAAC,CAAD,CAA1C,EAA+CA,MAAM,CAAC,CAAD,CAArD,EAA0DA,MAAM,CAAC,CAAD,CAAhE,EAAqEA,MAAM,CAAC,CAAD,CAA3E,EAAgFA,MAAM,CAAC,CAAD,CAAtF,EAA2FA,MAAM,CAAC,CAAD,CAAjG,CAAL;;AACA,eAAK+B,CAAC,GAAG,IAAT,EAAeA,CAAC,IAAI,CAApB,EAAuBA,CAAC,IAAI,IAA5B,EAAkC;AAC9B+F,YAAAA,EAAE,GAAGC,IAAI,CAAC1F,qBAAL,CAA2BN,CAA3B,EAA8BI,CAA9B,EAAiCC,CAAjC,EAAoCpC,MAAM,CAAC,CAAD,CAA1C,EAA+CA,MAAM,CAAC,CAAD,CAArD,EAA0DA,MAAM,CAAC,CAAD,CAAhE,EAAqEA,MAAM,CAAC,CAAD,CAA3E,EAAgFA,MAAM,CAAC,CAAD,CAAtF,EAA2FA,MAAM,CAAC,CAAD,CAAjG,CAAL;AACAyE,YAAAA,GAAG,IAAIsD,IAAI,CAACrD,aAAL,CAAmBmD,EAAE,CAAC1F,CAAtB,EAAyB0F,EAAE,CAACzF,CAA5B,EAA+B0F,EAAE,CAAC3F,CAAlC,EAAqC2F,EAAE,CAAC1F,CAAxC,CAAP;AACAyF,YAAAA,EAAE,GAAGC,EAAL;AACH;;AACD,iBAAOrD,GAAP;;AACJ,aAAK,GAAL;AACIA,UAAAA,GAAG,GAAG,GAAN;AACAoD,UAAAA,EAAE,GAAGE,IAAI,CAAC1E,yBAAL,CAA+B,CAA/B,EAAkClB,CAAlC,EAAqCC,CAArC,EAAwCpC,MAAM,CAAC,CAAD,CAA9C,EAAmDA,MAAM,CAAC,CAAD,CAAzD,EAA8DA,MAAM,CAAC,CAAD,CAApE,EAAyEA,MAAM,CAAC,CAAD,CAA/E,CAAL;;AACA,eAAK+B,CAAC,GAAG,IAAT,EAAeA,CAAC,IAAI,CAApB,EAAuBA,CAAC,IAAI,IAA5B,EAAkC;AAC9B+F,YAAAA,EAAE,GAAGC,IAAI,CAAC1E,yBAAL,CAA+BtB,CAA/B,EAAkCI,CAAlC,EAAqCC,CAArC,EAAwCpC,MAAM,CAAC,CAAD,CAA9C,EAAmDA,MAAM,CAAC,CAAD,CAAzD,EAA8DA,MAAM,CAAC,CAAD,CAApE,EAAyEA,MAAM,CAAC,CAAD,CAA/E,CAAL;AACAyE,YAAAA,GAAG,IAAIsD,IAAI,CAACrD,aAAL,CAAmBmD,EAAE,CAAC1F,CAAtB,EAAyB0F,EAAE,CAACzF,CAA5B,EAA+B0F,EAAE,CAAC3F,CAAlC,EAAqC2F,EAAE,CAAC1F,CAAxC,CAAP;AACAyF,YAAAA,EAAE,GAAGC,EAAL;AACH;;AACD,iBAAOrD,GAAP;;AACJ,aAAK,GAAL;AACIA,UAAAA,GAAG,GAAG,GAAN;AACA,cAAIhD,KAAK,GAAGzB,MAAM,CAAC,CAAD,CAAlB;AACA,cAAIU,MAAM,GAAGV,MAAM,CAAC,CAAD,CAAnB;AACA,cAAI0B,GAAG,GAAG1B,MAAM,CAAC,CAAD,CAAN,GAAYU,MAAtB;AACA,cAAIiB,GAAG,GAAGC,IAAI,CAACC,EAAL,GAAU,KAApB;;AACA,cAAID,IAAI,CAACE,GAAL,CAASL,KAAK,GAAGC,GAAjB,IAAwBC,GAA5B,EAAiC;AAC7BA,YAAAA,GAAG,GAAGC,IAAI,CAACE,GAAL,CAASL,KAAK,GAAGC,GAAjB,CAAN;AACH;;AACDmG,UAAAA,EAAE,GAAGE,IAAI,CAAC9F,uBAAL,CAA6BjC,MAAM,CAAC,CAAD,CAAnC,EAAwCA,MAAM,CAAC,CAAD,CAA9C,EAAmDA,MAAM,CAAC,CAAD,CAAzD,EAA8DA,MAAM,CAAC,CAAD,CAApE,EAAyEyB,KAAzE,EAAgF,CAAhF,CAAL;;AACA,cAAIf,MAAM,GAAG,CAAb,EAAgB;AACZ,iBAAKqB,CAAC,GAAGN,KAAK,GAAGE,GAAjB,EAAsBI,CAAC,GAAGL,GAA1B,EAA+BK,CAAC,IAAIJ,GAApC,EAAyC;AACrCmG,cAAAA,EAAE,GAAGC,IAAI,CAAC9F,uBAAL,CAA6BjC,MAAM,CAAC,CAAD,CAAnC,EAAwCA,MAAM,CAAC,CAAD,CAA9C,EAAmDA,MAAM,CAAC,CAAD,CAAzD,EAA8DA,MAAM,CAAC,CAAD,CAApE,EAAyE+B,CAAzE,EAA4E,CAA5E,CAAL;AACA0C,cAAAA,GAAG,IAAIsD,IAAI,CAACrD,aAAL,CAAmBmD,EAAE,CAAC1F,CAAtB,EAAyB0F,EAAE,CAACzF,CAA5B,EAA+B0F,EAAE,CAAC3F,CAAlC,EAAqC2F,EAAE,CAAC1F,CAAxC,CAAP;AACAyF,cAAAA,EAAE,GAAGC,EAAL;AACH;AACJ,WAND,MAOK;AACD,iBAAK/F,CAAC,GAAGN,KAAK,GAAGE,GAAjB,EAAsBI,CAAC,GAAGL,GAA1B,EAA+BK,CAAC,IAAIJ,GAApC,EAAyC;AACrCmG,cAAAA,EAAE,GAAGC,IAAI,CAAC9F,uBAAL,CAA6BjC,MAAM,CAAC,CAAD,CAAnC,EAAwCA,MAAM,CAAC,CAAD,CAA9C,EAAmDA,MAAM,CAAC,CAAD,CAAzD,EAA8DA,MAAM,CAAC,CAAD,CAApE,EAAyE+B,CAAzE,EAA4E,CAA5E,CAAL;AACA0C,cAAAA,GAAG,IAAIsD,IAAI,CAACrD,aAAL,CAAmBmD,EAAE,CAAC1F,CAAtB,EAAyB0F,EAAE,CAACzF,CAA5B,EAA+B0F,EAAE,CAAC3F,CAAlC,EAAqC2F,EAAE,CAAC1F,CAAxC,CAAP;AACAyF,cAAAA,EAAE,GAAGC,EAAL;AACH;AACJ;;AACDA,UAAAA,EAAE,GAAGC,IAAI,CAAC9F,uBAAL,CAA6BjC,MAAM,CAAC,CAAD,CAAnC,EAAwCA,MAAM,CAAC,CAAD,CAA9C,EAAmDA,MAAM,CAAC,CAAD,CAAzD,EAA8DA,MAAM,CAAC,CAAD,CAApE,EAAyE0B,GAAzE,EAA8E,CAA9E,CAAL;AACA+C,UAAAA,GAAG,IAAIsD,IAAI,CAACrD,aAAL,CAAmBmD,EAAE,CAAC1F,CAAtB,EAAyB0F,EAAE,CAACzF,CAA5B,EAA+B0F,EAAE,CAAC3F,CAAlC,EAAqC2F,EAAE,CAAC1F,CAAxC,CAAP;AACA,iBAAOqC,GAAP;AA/CR;;AAiDA,aAAO,CAAP;AACH;AAzjBL;AAAA;AAAA,WA0jBI,iDAA+CnB,EAA/C,EAAmDC,EAAnD,EAAuDC,EAAvD,EAA2DC,EAA3D,EAA+D6D,EAA/D,EAAmE1G,EAAnE,EAAuEL,EAAvE,EAA2EC,EAA3E,EAA+EwH,MAA/E,EAAuF;AACnF,UAAIrH,GAAG,GAAGqH,MAAM,IAAIpG,IAAI,CAACC,EAAL,GAAU,KAAd,CAAhB;AACA,UAAIoG,EAAE,GAAIrG,IAAI,CAAC+D,GAAL,CAAShF,GAAT,KAAiB2C,EAAE,GAAGE,EAAtB,CAAD,GAA8B,GAA9B,GAAqC5B,IAAI,CAACiE,GAAL,CAASlF,GAAT,KAAiB4C,EAAE,GAAGE,EAAtB,CAAD,GAA8B,GAA3E;AACA,UAAIyE,EAAE,GAAI,CAAC,CAAD,GAAKtG,IAAI,CAACiE,GAAL,CAASlF,GAAT,CAAL,IAAsB2C,EAAE,GAAGE,EAA3B,CAAD,GAAmC,GAAnC,GACJ5B,IAAI,CAAC+D,GAAL,CAAShF,GAAT,KAAiB4C,EAAE,GAAGE,EAAtB,CAAD,GAA8B,GADlC;AAEA,UAAI0E,MAAM,GAAIF,EAAE,GAAGA,EAAN,IAAa1H,EAAE,GAAGA,EAAlB,IAAyB2H,EAAE,GAAGA,EAAN,IAAa1H,EAAE,GAAGA,EAAlB,CAArC;;AACA,UAAI2H,MAAM,GAAG,CAAb,EAAgB;AACZ5H,QAAAA,EAAE,IAAIqB,IAAI,CAAC8B,IAAL,CAAUyE,MAAV,CAAN;AACA3H,QAAAA,EAAE,IAAIoB,IAAI,CAAC8B,IAAL,CAAUyE,MAAV,CAAN;AACH;;AACD,UAAIC,CAAC,GAAGxG,IAAI,CAAC8B,IAAL,CAAU,CAACnD,EAAE,GAAGA,EAAL,IAAWC,EAAE,GAAGA,EAAhB,IAAsBD,EAAE,GAAGA,EAAL,IAAW2H,EAAE,GAAGA,EAAhB,CAAtB,GAA4C1H,EAAE,GAAGA,EAAL,IAAWyH,EAAE,GAAGA,EAAhB,CAA7C,KACb1H,EAAE,GAAGA,EAAL,IAAW2H,EAAE,GAAGA,EAAhB,IAAsB1H,EAAE,GAAGA,EAAL,IAAWyH,EAAE,GAAGA,EAAhB,CADT,CAAV,CAAR;;AAEA,UAAIX,EAAE,KAAK1G,EAAX,EAAe;AACXwH,QAAAA,CAAC,IAAI,CAAC,CAAN;AACH;;AACD,UAAIzF,KAAK,CAACyF,CAAD,CAAT,EAAc;AACVA,QAAAA,CAAC,GAAG,CAAJ;AACH;;AACD,UAAIC,GAAG,GAAID,CAAC,GAAG7H,EAAJ,GAAS2H,EAAV,GAAgB1H,EAA1B;AACA,UAAI8H,GAAG,GAAIF,CAAC,GAAG,CAAC5H,EAAL,GAAUyH,EAAX,GAAiB1H,EAA3B;AACA,UAAIF,EAAE,GAAG,CAACiD,EAAE,GAAGE,EAAN,IAAY,GAAZ,GAAkB5B,IAAI,CAAC+D,GAAL,CAAShF,GAAT,IAAgB0H,GAAlC,GAAwCzG,IAAI,CAACiE,GAAL,CAASlF,GAAT,IAAgB2H,GAAjE;AACA,UAAIhI,EAAE,GAAG,CAACiD,EAAE,GAAGE,EAAN,IAAY,GAAZ,GAAkB7B,IAAI,CAACiE,GAAL,CAASlF,GAAT,IAAgB0H,GAAlC,GAAwCzG,IAAI,CAAC+D,GAAL,CAAShF,GAAT,IAAgB2H,GAAjE;;AACA,UAAIC,IAAI,GAAG,SAAPA,IAAO,CAAUC,CAAV,EAAa;AACpB,eAAO5G,IAAI,CAAC8B,IAAL,CAAU8E,CAAC,CAAC,CAAD,CAAD,GAAOA,CAAC,CAAC,CAAD,CAAR,GAAcA,CAAC,CAAC,CAAD,CAAD,GAAOA,CAAC,CAAC,CAAD,CAAhC,CAAP;AACH,OAFD;;AAGA,UAAIC,MAAM,GAAG,SAATA,MAAS,CAAU9D,CAAV,EAAa6D,CAAb,EAAgB;AACzB,eAAO,CAAC7D,CAAC,CAAC,CAAD,CAAD,GAAO6D,CAAC,CAAC,CAAD,CAAR,GAAc7D,CAAC,CAAC,CAAD,CAAD,GAAO6D,CAAC,CAAC,CAAD,CAAvB,KAA+BD,IAAI,CAAC5D,CAAD,CAAJ,GAAU4D,IAAI,CAACC,CAAD,CAA7C,CAAP;AACH,OAFD;;AAGA,UAAIE,MAAM,GAAG,SAATA,MAAS,CAAU/D,CAAV,EAAa6D,CAAb,EAAgB;AACzB,eAAO,CAAC7D,CAAC,CAAC,CAAD,CAAD,GAAO6D,CAAC,CAAC,CAAD,CAAR,GAAc7D,CAAC,CAAC,CAAD,CAAD,GAAO6D,CAAC,CAAC,CAAD,CAAtB,GAA4B,CAAC,CAA7B,GAAiC,CAAlC,IAAuC5G,IAAI,CAAC+G,IAAL,CAAUF,MAAM,CAAC9D,CAAD,EAAI6D,CAAJ,CAAhB,CAA9C;AACH,OAFD;;AAGA,UAAI/H,KAAK,GAAGiI,MAAM,CAAC,CAAC,CAAD,EAAI,CAAJ,CAAD,EAAS,CAAC,CAACT,EAAE,GAAGI,GAAN,IAAa9H,EAAd,EAAkB,CAAC2H,EAAE,GAAGI,GAAN,IAAa9H,EAA/B,CAAT,CAAlB;AACA,UAAImE,CAAC,GAAG,CAAC,CAACsD,EAAE,GAAGI,GAAN,IAAa9H,EAAd,EAAkB,CAAC2H,EAAE,GAAGI,GAAN,IAAa9H,EAA/B,CAAR;AACA,UAAIgI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAD,GAAKP,EAAL,GAAUI,GAAX,IAAkB9H,EAAnB,EAAuB,CAAC,CAAC,CAAD,GAAK2H,EAAL,GAAUI,GAAX,IAAkB9H,EAAzC,CAAR;AACA,UAAIE,MAAM,GAAGgI,MAAM,CAAC/D,CAAD,EAAI6D,CAAJ,CAAnB;;AACA,UAAIC,MAAM,CAAC9D,CAAD,EAAI6D,CAAJ,CAAN,IAAgB,CAAC,CAArB,EAAwB;AACpB9H,QAAAA,MAAM,GAAGkB,IAAI,CAACC,EAAd;AACH;;AACD,UAAI4G,MAAM,CAAC9D,CAAD,EAAI6D,CAAJ,CAAN,IAAgB,CAApB,EAAuB;AACnB9H,QAAAA,MAAM,GAAG,CAAT;AACH;;AACD,UAAIE,EAAE,KAAK,CAAP,IAAYF,MAAM,GAAG,CAAzB,EAA4B;AACxBA,QAAAA,MAAM,GAAGA,MAAM,GAAG,IAAIkB,IAAI,CAACC,EAA3B;AACH;;AACD,UAAIjB,EAAE,KAAK,CAAP,IAAYF,MAAM,GAAG,CAAzB,EAA4B;AACxBA,QAAAA,MAAM,GAAGA,MAAM,GAAG,IAAIkB,IAAI,CAACC,EAA3B;AACH;;AACD,aAAO,CAACxB,EAAD,EAAKC,EAAL,EAASC,EAAT,EAAaC,EAAb,EAAiBC,KAAjB,EAAwBC,MAAxB,EAAgCC,GAAhC,EAAqCC,EAArC,CAAP;AACH;AA1mBL;;AAAA;AAAA,EAA0B/B,KAA1B;AA4mBAE,IAAI,CAAC6J,SAAL,CAAeC,SAAf,GAA2B,MAA3B;AACA9J,IAAI,CAAC6J,SAAL,CAAeE,mBAAf,GAAqC,CAAC,MAAD,CAArC;;AACAhK,aAAa,CAACC,IAAD,CAAb;;AACAH,OAAO,CAACmK,eAAR,CAAwBhK,IAAxB,EAA8B,MAA9B","sourcesContent":["import { Factory } from '../Factory.js';\nimport { Shape } from '../Shape.js';\nimport { _registerNode } from '../Global.js';\nexport class Path extends Shape {\n    constructor(config) {\n        super(config);\n        this.dataArray = [];\n        this.pathLength = 0;\n        this.dataArray = Path.parsePathData(this.data());\n        this.pathLength = 0;\n        for (var i = 0; i < this.dataArray.length; ++i) {\n            this.pathLength += this.dataArray[i].pathLength;\n        }\n        this.on('dataChange.konva', function () {\n            this.dataArray = Path.parsePathData(this.data());\n            this.pathLength = 0;\n            for (var i = 0; i < this.dataArray.length; ++i) {\n                this.pathLength += this.dataArray[i].pathLength;\n            }\n        });\n    }\n    _sceneFunc(context) {\n        var ca = this.dataArray;\n        context.beginPath();\n        var isClosed = false;\n        for (var n = 0; n < ca.length; n++) {\n            var c = ca[n].command;\n            var p = ca[n].points;\n            switch (c) {\n                case 'L':\n                    context.lineTo(p[0], p[1]);\n                    break;\n                case 'M':\n                    context.moveTo(p[0], p[1]);\n                    break;\n                case 'C':\n                    context.bezierCurveTo(p[0], p[1], p[2], p[3], p[4], p[5]);\n                    break;\n                case 'Q':\n                    context.quadraticCurveTo(p[0], p[1], p[2], p[3]);\n                    break;\n                case 'A':\n                    var cx = p[0], cy = p[1], rx = p[2], ry = p[3], theta = p[4], dTheta = p[5], psi = p[6], fs = p[7];\n                    var r = rx > ry ? rx : ry;\n                    var scaleX = rx > ry ? 1 : rx / ry;\n                    var scaleY = rx > ry ? ry / rx : 1;\n                    context.translate(cx, cy);\n                    context.rotate(psi);\n                    context.scale(scaleX, scaleY);\n                    context.arc(0, 0, r, theta, theta + dTheta, 1 - fs);\n                    context.scale(1 / scaleX, 1 / scaleY);\n                    context.rotate(-psi);\n                    context.translate(-cx, -cy);\n                    break;\n                case 'z':\n                    isClosed = true;\n                    context.closePath();\n                    break;\n            }\n        }\n        if (!isClosed && !this.hasFill()) {\n            context.strokeShape(this);\n        }\n        else {\n            context.fillStrokeShape(this);\n        }\n    }\n    getSelfRect() {\n        var points = [];\n        this.dataArray.forEach(function (data) {\n            if (data.command === 'A') {\n                var start = data.points[4];\n                var dTheta = data.points[5];\n                var end = data.points[4] + dTheta;\n                var inc = Math.PI / 180.0;\n                if (Math.abs(start - end) < inc) {\n                    inc = Math.abs(start - end);\n                }\n                if (dTheta < 0) {\n                    for (let t = start - inc; t > end; t -= inc) {\n                        const point = Path.getPointOnEllipticalArc(data.points[0], data.points[1], data.points[2], data.points[3], t, 0);\n                        points.push(point.x, point.y);\n                    }\n                }\n                else {\n                    for (let t = start + inc; t < end; t += inc) {\n                        const point = Path.getPointOnEllipticalArc(data.points[0], data.points[1], data.points[2], data.points[3], t, 0);\n                        points.push(point.x, point.y);\n                    }\n                }\n            }\n            else if (data.command === 'C') {\n                for (let t = 0.0; t <= 1; t += 0.01) {\n                    const point = Path.getPointOnCubicBezier(t, data.start.x, data.start.y, data.points[0], data.points[1], data.points[2], data.points[3], data.points[4], data.points[5]);\n                    points.push(point.x, point.y);\n                }\n            }\n            else {\n                points = points.concat(data.points);\n            }\n        });\n        var minX = points[0];\n        var maxX = points[0];\n        var minY = points[1];\n        var maxY = points[1];\n        var x, y;\n        for (var i = 0; i < points.length / 2; i++) {\n            x = points[i * 2];\n            y = points[i * 2 + 1];\n            if (!isNaN(x)) {\n                minX = Math.min(minX, x);\n                maxX = Math.max(maxX, x);\n            }\n            if (!isNaN(y)) {\n                minY = Math.min(minY, y);\n                maxY = Math.max(maxY, y);\n            }\n        }\n        return {\n            x: Math.round(minX),\n            y: Math.round(minY),\n            width: Math.round(maxX - minX),\n            height: Math.round(maxY - minY),\n        };\n    }\n    getLength() {\n        return this.pathLength;\n    }\n    getPointAtLength(length) {\n        var point, i = 0, ii = this.dataArray.length;\n        if (!ii) {\n            return null;\n        }\n        while (i < ii && length > this.dataArray[i].pathLength) {\n            length -= this.dataArray[i].pathLength;\n            ++i;\n        }\n        if (i === ii) {\n            point = this.dataArray[i - 1].points.slice(-2);\n            return {\n                x: point[0],\n                y: point[1],\n            };\n        }\n        if (length < 0.01) {\n            point = this.dataArray[i].points.slice(0, 2);\n            return {\n                x: point[0],\n                y: point[1],\n            };\n        }\n        var cp = this.dataArray[i];\n        var p = cp.points;\n        switch (cp.command) {\n            case 'L':\n                return Path.getPointOnLine(length, cp.start.x, cp.start.y, p[0], p[1]);\n            case 'C':\n                return Path.getPointOnCubicBezier(length / cp.pathLength, cp.start.x, cp.start.y, p[0], p[1], p[2], p[3], p[4], p[5]);\n            case 'Q':\n                return Path.getPointOnQuadraticBezier(length / cp.pathLength, cp.start.x, cp.start.y, p[0], p[1], p[2], p[3]);\n            case 'A':\n                var cx = p[0], cy = p[1], rx = p[2], ry = p[3], theta = p[4], dTheta = p[5], psi = p[6];\n                theta += (dTheta * length) / cp.pathLength;\n                return Path.getPointOnEllipticalArc(cx, cy, rx, ry, theta, psi);\n        }\n        return null;\n    }\n    static getLineLength(x1, y1, x2, y2) {\n        return Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    }\n    static getPointOnLine(dist, P1x, P1y, P2x, P2y, fromX, fromY) {\n        if (fromX === undefined) {\n            fromX = P1x;\n        }\n        if (fromY === undefined) {\n            fromY = P1y;\n        }\n        var m = (P2y - P1y) / (P2x - P1x + 0.00000001);\n        var run = Math.sqrt((dist * dist) / (1 + m * m));\n        if (P2x < P1x) {\n            run *= -1;\n        }\n        var rise = m * run;\n        var pt;\n        if (P2x === P1x) {\n            pt = {\n                x: fromX,\n                y: fromY + rise,\n            };\n        }\n        else if ((fromY - P1y) / (fromX - P1x + 0.00000001) === m) {\n            pt = {\n                x: fromX + run,\n                y: fromY + rise,\n            };\n        }\n        else {\n            var ix, iy;\n            var len = this.getLineLength(P1x, P1y, P2x, P2y);\n            var u = (fromX - P1x) * (P2x - P1x) + (fromY - P1y) * (P2y - P1y);\n            u = u / (len * len);\n            ix = P1x + u * (P2x - P1x);\n            iy = P1y + u * (P2y - P1y);\n            var pRise = this.getLineLength(fromX, fromY, ix, iy);\n            var pRun = Math.sqrt(dist * dist - pRise * pRise);\n            run = Math.sqrt((pRun * pRun) / (1 + m * m));\n            if (P2x < P1x) {\n                run *= -1;\n            }\n            rise = m * run;\n            pt = {\n                x: ix + run,\n                y: iy + rise,\n            };\n        }\n        return pt;\n    }\n    static getPointOnCubicBezier(pct, P1x, P1y, P2x, P2y, P3x, P3y, P4x, P4y) {\n        function CB1(t) {\n            return t * t * t;\n        }\n        function CB2(t) {\n            return 3 * t * t * (1 - t);\n        }\n        function CB3(t) {\n            return 3 * t * (1 - t) * (1 - t);\n        }\n        function CB4(t) {\n            return (1 - t) * (1 - t) * (1 - t);\n        }\n        var x = P4x * CB1(pct) + P3x * CB2(pct) + P2x * CB3(pct) + P1x * CB4(pct);\n        var y = P4y * CB1(pct) + P3y * CB2(pct) + P2y * CB3(pct) + P1y * CB4(pct);\n        return {\n            x: x,\n            y: y,\n        };\n    }\n    static getPointOnQuadraticBezier(pct, P1x, P1y, P2x, P2y, P3x, P3y) {\n        function QB1(t) {\n            return t * t;\n        }\n        function QB2(t) {\n            return 2 * t * (1 - t);\n        }\n        function QB3(t) {\n            return (1 - t) * (1 - t);\n        }\n        var x = P3x * QB1(pct) + P2x * QB2(pct) + P1x * QB3(pct);\n        var y = P3y * QB1(pct) + P2y * QB2(pct) + P1y * QB3(pct);\n        return {\n            x: x,\n            y: y,\n        };\n    }\n    static getPointOnEllipticalArc(cx, cy, rx, ry, theta, psi) {\n        var cosPsi = Math.cos(psi), sinPsi = Math.sin(psi);\n        var pt = {\n            x: rx * Math.cos(theta),\n            y: ry * Math.sin(theta),\n        };\n        return {\n            x: cx + (pt.x * cosPsi - pt.y * sinPsi),\n            y: cy + (pt.x * sinPsi + pt.y * cosPsi),\n        };\n    }\n    static parsePathData(data) {\n        if (!data) {\n            return [];\n        }\n        var cs = data;\n        var cc = [\n            'm',\n            'M',\n            'l',\n            'L',\n            'v',\n            'V',\n            'h',\n            'H',\n            'z',\n            'Z',\n            'c',\n            'C',\n            'q',\n            'Q',\n            't',\n            'T',\n            's',\n            'S',\n            'a',\n            'A',\n        ];\n        cs = cs.replace(new RegExp(' ', 'g'), ',');\n        for (var n = 0; n < cc.length; n++) {\n            cs = cs.replace(new RegExp(cc[n], 'g'), '|' + cc[n]);\n        }\n        var arr = cs.split('|');\n        var ca = [];\n        var coords = [];\n        var cpx = 0;\n        var cpy = 0;\n        var re = /([-+]?((\\d+\\.\\d+)|((\\d+)|(\\.\\d+)))(?:e[-+]?\\d+)?)/gi;\n        var match;\n        for (n = 1; n < arr.length; n++) {\n            var str = arr[n];\n            var c = str.charAt(0);\n            str = str.slice(1);\n            coords.length = 0;\n            while ((match = re.exec(str))) {\n                coords.push(match[0]);\n            }\n            var p = [];\n            for (var j = 0, jlen = coords.length; j < jlen; j++) {\n                if (coords[j] === '00') {\n                    p.push(0, 0);\n                    continue;\n                }\n                var parsed = parseFloat(coords[j]);\n                if (!isNaN(parsed)) {\n                    p.push(parsed);\n                }\n                else {\n                    p.push(0);\n                }\n            }\n            while (p.length > 0) {\n                if (isNaN(p[0])) {\n                    break;\n                }\n                var cmd = null;\n                var points = [];\n                var startX = cpx, startY = cpy;\n                var prevCmd, ctlPtx, ctlPty;\n                var rx, ry, psi, fa, fs, x1, y1;\n                switch (c) {\n                    case 'l':\n                        cpx += p.shift();\n                        cpy += p.shift();\n                        cmd = 'L';\n                        points.push(cpx, cpy);\n                        break;\n                    case 'L':\n                        cpx = p.shift();\n                        cpy = p.shift();\n                        points.push(cpx, cpy);\n                        break;\n                    case 'm':\n                        var dx = p.shift();\n                        var dy = p.shift();\n                        cpx += dx;\n                        cpy += dy;\n                        cmd = 'M';\n                        if (ca.length > 2 && ca[ca.length - 1].command === 'z') {\n                            for (var idx = ca.length - 2; idx >= 0; idx--) {\n                                if (ca[idx].command === 'M') {\n                                    cpx = ca[idx].points[0] + dx;\n                                    cpy = ca[idx].points[1] + dy;\n                                    break;\n                                }\n                            }\n                        }\n                        points.push(cpx, cpy);\n                        c = 'l';\n                        break;\n                    case 'M':\n                        cpx = p.shift();\n                        cpy = p.shift();\n                        cmd = 'M';\n                        points.push(cpx, cpy);\n                        c = 'L';\n                        break;\n                    case 'h':\n                        cpx += p.shift();\n                        cmd = 'L';\n                        points.push(cpx, cpy);\n                        break;\n                    case 'H':\n                        cpx = p.shift();\n                        cmd = 'L';\n                        points.push(cpx, cpy);\n                        break;\n                    case 'v':\n                        cpy += p.shift();\n                        cmd = 'L';\n                        points.push(cpx, cpy);\n                        break;\n                    case 'V':\n                        cpy = p.shift();\n                        cmd = 'L';\n                        points.push(cpx, cpy);\n                        break;\n                    case 'C':\n                        points.push(p.shift(), p.shift(), p.shift(), p.shift());\n                        cpx = p.shift();\n                        cpy = p.shift();\n                        points.push(cpx, cpy);\n                        break;\n                    case 'c':\n                        points.push(cpx + p.shift(), cpy + p.shift(), cpx + p.shift(), cpy + p.shift());\n                        cpx += p.shift();\n                        cpy += p.shift();\n                        cmd = 'C';\n                        points.push(cpx, cpy);\n                        break;\n                    case 'S':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        prevCmd = ca[ca.length - 1];\n                        if (prevCmd.command === 'C') {\n                            ctlPtx = cpx + (cpx - prevCmd.points[2]);\n                            ctlPty = cpy + (cpy - prevCmd.points[3]);\n                        }\n                        points.push(ctlPtx, ctlPty, p.shift(), p.shift());\n                        cpx = p.shift();\n                        cpy = p.shift();\n                        cmd = 'C';\n                        points.push(cpx, cpy);\n                        break;\n                    case 's':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        prevCmd = ca[ca.length - 1];\n                        if (prevCmd.command === 'C') {\n                            ctlPtx = cpx + (cpx - prevCmd.points[2]);\n                            ctlPty = cpy + (cpy - prevCmd.points[3]);\n                        }\n                        points.push(ctlPtx, ctlPty, cpx + p.shift(), cpy + p.shift());\n                        cpx += p.shift();\n                        cpy += p.shift();\n                        cmd = 'C';\n                        points.push(cpx, cpy);\n                        break;\n                    case 'Q':\n                        points.push(p.shift(), p.shift());\n                        cpx = p.shift();\n                        cpy = p.shift();\n                        points.push(cpx, cpy);\n                        break;\n                    case 'q':\n                        points.push(cpx + p.shift(), cpy + p.shift());\n                        cpx += p.shift();\n                        cpy += p.shift();\n                        cmd = 'Q';\n                        points.push(cpx, cpy);\n                        break;\n                    case 'T':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        prevCmd = ca[ca.length - 1];\n                        if (prevCmd.command === 'Q') {\n                            ctlPtx = cpx + (cpx - prevCmd.points[0]);\n                            ctlPty = cpy + (cpy - prevCmd.points[1]);\n                        }\n                        cpx = p.shift();\n                        cpy = p.shift();\n                        cmd = 'Q';\n                        points.push(ctlPtx, ctlPty, cpx, cpy);\n                        break;\n                    case 't':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        prevCmd = ca[ca.length - 1];\n                        if (prevCmd.command === 'Q') {\n                            ctlPtx = cpx + (cpx - prevCmd.points[0]);\n                            ctlPty = cpy + (cpy - prevCmd.points[1]);\n                        }\n                        cpx += p.shift();\n                        cpy += p.shift();\n                        cmd = 'Q';\n                        points.push(ctlPtx, ctlPty, cpx, cpy);\n                        break;\n                    case 'A':\n                        rx = p.shift();\n                        ry = p.shift();\n                        psi = p.shift();\n                        fa = p.shift();\n                        fs = p.shift();\n                        x1 = cpx;\n                        y1 = cpy;\n                        cpx = p.shift();\n                        cpy = p.shift();\n                        cmd = 'A';\n                        points = this.convertEndpointToCenterParameterization(x1, y1, cpx, cpy, fa, fs, rx, ry, psi);\n                        break;\n                    case 'a':\n                        rx = p.shift();\n                        ry = p.shift();\n                        psi = p.shift();\n                        fa = p.shift();\n                        fs = p.shift();\n                        x1 = cpx;\n                        y1 = cpy;\n                        cpx += p.shift();\n                        cpy += p.shift();\n                        cmd = 'A';\n                        points = this.convertEndpointToCenterParameterization(x1, y1, cpx, cpy, fa, fs, rx, ry, psi);\n                        break;\n                }\n                ca.push({\n                    command: cmd || c,\n                    points: points,\n                    start: {\n                        x: startX,\n                        y: startY,\n                    },\n                    pathLength: this.calcLength(startX, startY, cmd || c, points),\n                });\n            }\n            if (c === 'z' || c === 'Z') {\n                ca.push({\n                    command: 'z',\n                    points: [],\n                    start: undefined,\n                    pathLength: 0,\n                });\n            }\n        }\n        return ca;\n    }\n    static calcLength(x, y, cmd, points) {\n        var len, p1, p2, t;\n        var path = Path;\n        switch (cmd) {\n            case 'L':\n                return path.getLineLength(x, y, points[0], points[1]);\n            case 'C':\n                len = 0.0;\n                p1 = path.getPointOnCubicBezier(0, x, y, points[0], points[1], points[2], points[3], points[4], points[5]);\n                for (t = 0.01; t <= 1; t += 0.01) {\n                    p2 = path.getPointOnCubicBezier(t, x, y, points[0], points[1], points[2], points[3], points[4], points[5]);\n                    len += path.getLineLength(p1.x, p1.y, p2.x, p2.y);\n                    p1 = p2;\n                }\n                return len;\n            case 'Q':\n                len = 0.0;\n                p1 = path.getPointOnQuadraticBezier(0, x, y, points[0], points[1], points[2], points[3]);\n                for (t = 0.01; t <= 1; t += 0.01) {\n                    p2 = path.getPointOnQuadraticBezier(t, x, y, points[0], points[1], points[2], points[3]);\n                    len += path.getLineLength(p1.x, p1.y, p2.x, p2.y);\n                    p1 = p2;\n                }\n                return len;\n            case 'A':\n                len = 0.0;\n                var start = points[4];\n                var dTheta = points[5];\n                var end = points[4] + dTheta;\n                var inc = Math.PI / 180.0;\n                if (Math.abs(start - end) < inc) {\n                    inc = Math.abs(start - end);\n                }\n                p1 = path.getPointOnEllipticalArc(points[0], points[1], points[2], points[3], start, 0);\n                if (dTheta < 0) {\n                    for (t = start - inc; t > end; t -= inc) {\n                        p2 = path.getPointOnEllipticalArc(points[0], points[1], points[2], points[3], t, 0);\n                        len += path.getLineLength(p1.x, p1.y, p2.x, p2.y);\n                        p1 = p2;\n                    }\n                }\n                else {\n                    for (t = start + inc; t < end; t += inc) {\n                        p2 = path.getPointOnEllipticalArc(points[0], points[1], points[2], points[3], t, 0);\n                        len += path.getLineLength(p1.x, p1.y, p2.x, p2.y);\n                        p1 = p2;\n                    }\n                }\n                p2 = path.getPointOnEllipticalArc(points[0], points[1], points[2], points[3], end, 0);\n                len += path.getLineLength(p1.x, p1.y, p2.x, p2.y);\n                return len;\n        }\n        return 0;\n    }\n    static convertEndpointToCenterParameterization(x1, y1, x2, y2, fa, fs, rx, ry, psiDeg) {\n        var psi = psiDeg * (Math.PI / 180.0);\n        var xp = (Math.cos(psi) * (x1 - x2)) / 2.0 + (Math.sin(psi) * (y1 - y2)) / 2.0;\n        var yp = (-1 * Math.sin(psi) * (x1 - x2)) / 2.0 +\n            (Math.cos(psi) * (y1 - y2)) / 2.0;\n        var lambda = (xp * xp) / (rx * rx) + (yp * yp) / (ry * ry);\n        if (lambda > 1) {\n            rx *= Math.sqrt(lambda);\n            ry *= Math.sqrt(lambda);\n        }\n        var f = Math.sqrt((rx * rx * (ry * ry) - rx * rx * (yp * yp) - ry * ry * (xp * xp)) /\n            (rx * rx * (yp * yp) + ry * ry * (xp * xp)));\n        if (fa === fs) {\n            f *= -1;\n        }\n        if (isNaN(f)) {\n            f = 0;\n        }\n        var cxp = (f * rx * yp) / ry;\n        var cyp = (f * -ry * xp) / rx;\n        var cx = (x1 + x2) / 2.0 + Math.cos(psi) * cxp - Math.sin(psi) * cyp;\n        var cy = (y1 + y2) / 2.0 + Math.sin(psi) * cxp + Math.cos(psi) * cyp;\n        var vMag = function (v) {\n            return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\n        };\n        var vRatio = function (u, v) {\n            return (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v));\n        };\n        var vAngle = function (u, v) {\n            return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(vRatio(u, v));\n        };\n        var theta = vAngle([1, 0], [(xp - cxp) / rx, (yp - cyp) / ry]);\n        var u = [(xp - cxp) / rx, (yp - cyp) / ry];\n        var v = [(-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry];\n        var dTheta = vAngle(u, v);\n        if (vRatio(u, v) <= -1) {\n            dTheta = Math.PI;\n        }\n        if (vRatio(u, v) >= 1) {\n            dTheta = 0;\n        }\n        if (fs === 0 && dTheta > 0) {\n            dTheta = dTheta - 2 * Math.PI;\n        }\n        if (fs === 1 && dTheta < 0) {\n            dTheta = dTheta + 2 * Math.PI;\n        }\n        return [cx, cy, rx, ry, theta, dTheta, psi, fs];\n    }\n}\nPath.prototype.className = 'Path';\nPath.prototype._attrsAffectingSize = ['data'];\n_registerNode(Path);\nFactory.addGetterSetter(Path, 'data');\n"]},"metadata":{},"sourceType":"module"}