{"ast":null,"code":"var _jsxFileName = \"/Users/pbivrell/light/light/src/containers/programming.js\";\nimport '../App.css';\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { Stage, Layer, Rect, Text, Circle, Line } from 'react-konva';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Programming() {\n  const lights = [{\n    color: \"rgb(0,255,0)\"\n  }, {\n    color: \"rgb(0,255,0)\"\n  }, {\n    color: \"rgb(0,255,0)\"\n  }, {\n    color: \"rgb(0,255,0)\"\n  }, {\n    color: \"rgb(0,255,0)\"\n  }, {\n    color: \"rgb(0,255,0)\"\n  }, {\n    color: \"rgb(0,255,0)\"\n  }];\n  const rows = 5;\n  const radius = 50;\n  const xOffset = 120;\n  const yOffset = 120;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(Stage, {\n        width: window.innerWidth,\n        height: window.innerHeight,\n        children: /*#__PURE__*/_jsxDEV(Layer, {\n          children: lights.map(function (elem, idx) {\n            console.log(idx, rows, Math.floor(idx / rows));\n            return /*#__PURE__*/_jsxDEV(Circle, {\n              x: xOffset + xOffset * (idx % rows),\n              y: yOffset + yOffset * Math.floor(idx / rows),\n              radius: radius,\n              fill: \"green\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 22\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 4\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 3\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 2\n  }, this);\n}\n\n_c = Programming;\nexport default Programming;\n\nvar _c;\n\n$RefreshReg$(_c, \"Programming\");","map":{"version":3,"sources":["/Users/pbivrell/light/light/src/containers/programming.js"],"names":["React","useState","axios","Stage","Layer","Rect","Text","Circle","Line","Programming","lights","color","rows","radius","xOffset","yOffset","window","innerWidth","innerHeight","map","elem","idx","console","log","Math","floor"],"mappings":";AAAA,OAAO,YAAP;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,KAAhB,EAAuBC,IAAvB,EAA6BC,IAA7B,EAAmCC,MAAnC,EAA2CC,IAA3C,QAAuD,aAAvD;;;AAGA,SAASC,WAAT,GAAwB;AAEvB,QAAMC,MAAM,GAAG,CAAC;AAACC,IAAAA,KAAK,EAAE;AAAR,GAAD,EAAyB;AAACA,IAAAA,KAAK,EAAE;AAAR,GAAzB,EAAiD;AAACA,IAAAA,KAAK,EAAE;AAAR,GAAjD,EAAyE;AAACA,IAAAA,KAAK,EAAE;AAAR,GAAzE,EAAiG;AAACA,IAAAA,KAAK,EAAE;AAAR,GAAjG,EAAyH;AAACA,IAAAA,KAAK,EAAE;AAAR,GAAzH,EAAiJ;AAACA,IAAAA,KAAK,EAAE;AAAR,GAAjJ,CAAf;AACA,QAAMC,IAAI,GAAG,CAAb;AACA,QAAMC,MAAM,GAAG,EAAf;AACA,QAAMC,OAAO,GAAG,GAAhB;AACA,QAAMC,OAAO,GAAG,GAAhB;AAEA,sBACA;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACC;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA,6BACC,QAAC,KAAD;AAAO,QAAA,KAAK,EAAEC,MAAM,CAACC,UAArB;AAAiC,QAAA,MAAM,EAAED,MAAM,CAACE,WAAhD;AAAA,+BACO,QAAC,KAAD;AAAA,oBAEJR,MAAM,CAACS,GAAP,CAAY,UAASC,IAAT,EAAeC,GAAf,EAAoB;AAC/BC,YAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ,EAAiBT,IAAjB,EAAuBY,IAAI,CAACC,KAAL,CAAWJ,GAAG,GAAGT,IAAjB,CAAvB;AACO,gCAAO,QAAC,MAAD;AAAQ,cAAA,CAAC,EAAEE,OAAO,GAAIA,OAAO,IAAIO,GAAG,GAAGT,IAAV,CAA7B;AAA+C,cAAA,CAAC,EAAEG,OAAO,GAAIA,OAAO,GAAGS,IAAI,CAACC,KAAL,CAAWJ,GAAG,GAAGT,IAAjB,CAAvE;AAAgG,cAAA,MAAM,EAAEC,MAAxG;AAAgH,cAAA,IAAI,EAAC;AAArH;AAAA;AAAA;AAAA;AAAA,oBAAP;AACP,WAHD;AAFI;AAAA;AAAA;AAAA;AAAA;AADP;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADA;AAgBA;;KAxBQJ,W;AA2BT,eAAeA,WAAf","sourcesContent":["import '../App.css';\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { Stage, Layer, Rect, Text, Circle, Line } from 'react-konva';\n\n\nfunction Programming () {\n\n\tconst lights = [{color: \"rgb(0,255,0)\"},{color: \"rgb(0,255,0)\"},{color: \"rgb(0,255,0)\"},{color: \"rgb(0,255,0)\"},{color: \"rgb(0,255,0)\"},{color: \"rgb(0,255,0)\"},{color: \"rgb(0,255,0)\"},];\n\tconst rows = 5;\n\tconst radius = 50;\n\tconst xOffset = 120;\n\tconst yOffset = 120;\n\n\treturn (\n\t<div className=\"App\">\n\t\t<header className=\"App-header\">\n\t\t\t<Stage width={window.innerWidth} height={window.innerHeight}>\n      \t\t\t\t<Layer>\n\t\t\t\t\t{\n\t\t\t\t\t\tlights.map( function(elem, idx) {\n\t\t\t\t\t\t\tconsole.log(idx, rows, Math.floor(idx / rows));\n        \t\t\t\t\t\treturn <Circle x={xOffset + (xOffset * (idx % rows))} y={yOffset + (yOffset * Math.floor(idx / rows))} radius={radius} fill=\"green\" />\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n      \t\t\t\t</Layer>\n    \t\t\t</Stage>\n\t\t</header>\n\t</div>\n  \t);\n}\n\n\nexport default Programming;\n"]},"metadata":{},"sourceType":"module"}