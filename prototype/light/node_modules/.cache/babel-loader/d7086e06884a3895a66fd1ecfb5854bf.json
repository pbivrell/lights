{"ast":null,"code":"var _jsxFileName = \"/Users/pbivrell/light/light/src/containers/programming.js\",\n    _s = $RefreshSig$();\n\nimport '../App.css';\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Stage, Layer, Rect, Text, Circle, Line } from 'react-konva';\nimport Bulb from \"../components/Bulb.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Programming() {\n  _s();\n\n  const seq = \"000000011111010000000001000000000000000000000000000000000000000000000001000000001000000000000000000000000000000000000000000000000000000100000000100000000000000000000001000000000000000000000000000000010000000010000000000000000000001000000000000000000000000000000001000000001000000000000000000000110000000000000000000000000000000100000000100000000000000000000100000000000000000000000000000000011111010000000001000000000000000000000000000000000000000000000001100000001000000000000000000000000000000000000000000000000000000110000000100000000000000000000001000000000000000000000000000000011000000010000000000000000000001000000000000000000000000000000001100000001000000000000000000000110000000000000000000000000000000110000000100000000000000000000100000000000000000000000000\";\n\n  function processSequence() {\n    var bytes = new Uint8Array(seq.length);\n\n    for (var i = 0; i < seq.length; i += 8) {\n      console.log(seq.slice(i, i + 8), parseInt(seq.slice(i, i + 8), 2));\n      bytes[i] = parseInt(seq.slice(i, i + 8), 2);\n    }\n\n    for (var i = 0; i < bytes.length; i += 8) {\n      if (bytes[i] === 0x1) {\n        console.log(\"color\");\n        console.log(\"r\", bytes[i + 1]);\n        console.log(\"g\", bytes[i + 2]);\n        console.log(\"b\", bytes[i + 3]);\n        console.log(\"index\", bytes[i + 4], bytes[i + 5]);\n      } else {\n        console.log(\"delay\");\n      }\n    }\n  }\n\n  useEffect(() => {\n    processSequence();\n  }, []);\n  const lights = [{\n    color: \"rgb(0,255,0)\"\n  }, {\n    color: \"rgb(0,255,0)\"\n  }, {\n    color: \"rgb(0,255,0)\"\n  }, {\n    color: \"rgb(0,255,0)\"\n  }, {\n    color: \"rgb(0,255,0)\"\n  }, {\n    color: \"rgb(0,255,0)\",\n    delay: 500\n  }, {\n    color: \"rgb(0,255,0)\"\n  }];\n  const rows = Math.floor((window.innerWidth - 200) / 170);\n  const radius = 50;\n  const xOffset = 120;\n  const yOffset = 120;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(Stage, {\n        width: window.innerWidth,\n        height: window.innerHeight,\n        children: /*#__PURE__*/_jsxDEV(Layer, {\n          children: lights.map(function (elem, idx) {\n            return /*#__PURE__*/_jsxDEV(Bulb, {\n              x: xOffset + xOffset * (idx % rows),\n              y: yOffset + yOffset * Math.floor(idx / rows),\n              delay: elem.delay,\n              color: elem.color,\n              radius: radius\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 15\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 4\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 3\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 2\n  }, this);\n}\n\n_s(Programming, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Programming;\nexport default Programming;\n\nvar _c;\n\n$RefreshReg$(_c, \"Programming\");","map":{"version":3,"sources":["/Users/pbivrell/light/light/src/containers/programming.js"],"names":["React","useState","useEffect","axios","Stage","Layer","Rect","Text","Circle","Line","Bulb","Programming","seq","processSequence","bytes","Uint8Array","length","i","console","log","slice","parseInt","lights","color","delay","rows","Math","floor","window","innerWidth","radius","xOffset","yOffset","innerHeight","map","elem","idx"],"mappings":"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","sourcesContent":["import '../App.css';\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Stage, Layer, Rect, Text, Circle, Line } from 'react-konva';\nimport Bulb from \"../components/Bulb.js\"\n\nfunction Programming () {\n\n\tconst seq = \"000000011111010000000001000000000000000000000000000000000000000000000001000000001000000000000000000000000000000000000000000000000000000100000000100000000000000000000001000000000000000000000000000000010000000010000000000000000000001000000000000000000000000000000001000000001000000000000000000000110000000000000000000000000000000100000000100000000000000000000100000000000000000000000000000000011111010000000001000000000000000000000000000000000000000000000001100000001000000000000000000000000000000000000000000000000000000110000000100000000000000000000001000000000000000000000000000000011000000010000000000000000000001000000000000000000000000000000001100000001000000000000000000000110000000000000000000000000000000110000000100000000000000000000100000000000000000000000000\";\n\n\tfunction processSequence() {\n\t\tvar bytes = new Uint8Array(seq.length);\n\t\tfor (var i=0; i<seq.length; i+=8) {\n\t\t\tconsole.log(seq.slice(i, i + 8), parseInt(seq.slice(i, i + 8), 2));\n    \t\t\tbytes[i] = parseInt(seq.slice(i,i+8), 2);\n\t\t}\n\t\t\n\t\tfor (var i=0; i<bytes.length; i+=8) {\n\t\t\tif (bytes[i] === 0x1) {\n\t\t\t\tconsole.log(\"color\");\n\t\t\t\tconsole.log(\"r\", bytes[i+1]);\n\t\t\t\tconsole.log(\"g\", bytes[i+2]);\n\t\t\t\tconsole.log(\"b\", bytes[i+3]);\n\t\t\t\tconsole.log(\"index\", bytes[i+4], bytes[i+5]);\n\t\t\t}else {\n\t\t\t\tconsole.log(\"delay\");\n\t\t\t}\n\t\t}\n\t}\n\n\tuseEffect(() => {\n\t\tprocessSequence();\t\n\t}, []);\n\n\tconst lights = [{color: \"rgb(0,255,0)\"},{color: \"rgb(0,255,0)\"},{color: \"rgb(0,255,0)\"},{color: \"rgb(0,255,0)\"},{color: \"rgb(0,255,0)\"},{color: \"rgb(0,255,0)\", delay: 500},{color: \"rgb(0,255,0)\"},];\n\tconst rows = Math.floor((window.innerWidth - 200) / 170);\n\tconst radius = 50;\n\tconst xOffset = 120;\n\tconst yOffset = 120;\n\n\treturn (\n\t<div className=\"App\">\n\t\t<header className=\"App-header\">\n\t\t\t<Stage width={window.innerWidth} height={window.innerHeight}>\n      \t\t\t\t<Layer>\n\t\t\t\t\t{\n\t\t\t\t\t\tlights.map( function(elem, idx) {\n\t\t\t\t\t\t\treturn <Bulb x={xOffset + (xOffset * (idx % rows))} y={yOffset + (yOffset * Math.floor(idx / rows))} delay={elem.delay} color={elem.color} radius={radius}/>\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n      \t\t\t\t</Layer>\n    \t\t\t</Stage>\n\t\t</header>\n\t</div>\n  \t);\n}\n\n\nexport default Programming;\n"]},"metadata":{},"sourceType":"module"}