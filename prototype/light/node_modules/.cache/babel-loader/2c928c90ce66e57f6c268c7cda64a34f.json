{"ast":null,"code":"var _jsxFileName = \"/Users/pbivrell/light/light/src/containers/programming.js\",\n    _s = $RefreshSig$();\n\nimport '../App.css';\nimport React, { useState, useEffect } from \"react\";\nimport { Stage, Layer } from 'react-konva';\nimport Bulb from \"../components/Bulb.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Programming() {\n  _s();\n\n  function handleFiles(e) {\n    var fr = new FileReader();\n\n    fr.onload = function () {\n      processSequence(fr.result);\n    };\n\n    if (e.target.files.length > 0) {\n      fr.readAsArrayBuffer(e.target.files[0]);\n    }\n  }\n\n  function processSequence(seq) {\n    console.log(seq);\n    var bytes = new Uint8Array(seq);\n    console.log(bytes);\n    let nextColors = [];\n    let delay = 0;\n\n    for (let i = 0; i < bytes.length; i += 8) {\n      if (bytes[i] === 0x3 && i === 0) {\n        let count = bytes[i + 2] << 8 | bytes[i + 1];\n        console.log(\"Count\", count);\n\n        for (let j = 0; j < count; j++) {\n          nextColors.push({\n            color: `rgb(0,0,0)`\n          });\n        }\n      } else if (bytes[i] === 0x1) {\n        let r = bytes[i + 1];\n        let g = bytes[i + 2];\n        let b = bytes[i + 3];\n        let index = bytes[i + 5] << 8 | bytes[i + 4];\n        console.log(\"color\", r, g, b, index);\n        nextColors[index] = {\n          color: `rgb(${r},${g},${b})`\n        };\n      } else if (bytes[i] === 0x2) {\n        delay += bytes[i + 4] << 24 | bytes[i + 3] << 16 | bytes[i + 2] << 8 | bytes[i + 1];\n        console.log(\"delay\", delay);\n        setTimeout(lights => {\n          console.log(\"Changed lights\");\n          setLights(lights);\n        }, delay, [...nextColors]);\n      }\n    }\n\n    setTimeout(() => {\n      processSequence(seq);\n    }, delay);\n  }\n\n  const [lights, setLights] = useState([]);\n  const rows = Math.floor((window.innerWidth - 200) / 170);\n  const radius = 50;\n  const xOffset = 120;\n  const yOffset = 120;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      name: \"file\",\n      onChange: handleFiles\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(Stage, {\n        width: window.innerWidth,\n        height: window.innerHeight,\n        children: /*#__PURE__*/_jsxDEV(Layer, {\n          children: lights.map(function (elem, idx) {\n            console.log(elem, idx);\n            return /*#__PURE__*/_jsxDEV(Bulb, {\n              x: xOffset + xOffset * (idx % rows),\n              y: yOffset + yOffset * Math.floor(idx / rows),\n              color: elem.color,\n              radius: radius\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 4\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 2\n  }, this);\n}\n\n_s(Programming, \"FUoGTq6CK1aMKNPCHLFopq9S+as=\");\n\n_c = Programming;\nexport default Programming;\n\nvar _c;\n\n$RefreshReg$(_c, \"Programming\");","map":{"version":3,"sources":["/Users/pbivrell/light/light/src/containers/programming.js"],"names":["React","useState","useEffect","Stage","Layer","Bulb","Programming","handleFiles","e","fr","FileReader","onload","processSequence","result","target","files","length","readAsArrayBuffer","seq","console","log","bytes","Uint8Array","nextColors","delay","i","count","j","push","color","r","g","b","index","setTimeout","lights","setLights","rows","Math","floor","window","innerWidth","radius","xOffset","yOffset","innerHeight","map","elem","idx"],"mappings":"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","sourcesContent":["import '../App.css';\nimport React, { useState, useEffect } from \"react\";\nimport { Stage, Layer } from 'react-konva';\nimport Bulb from \"../components/Bulb.js\"\n\nfunction Programming () {\n\n\tfunction handleFiles(e) {\n\t\tvar fr=new FileReader();\n\t\tfr.onload=function(){\n\t\t\tprocessSequence(fr.result);\n\t\t}\n\t\t\n\t\tif (e.target.files.length > 0) {\n\t\t\tfr.readAsArrayBuffer(e.target.files[0]);\n\t\t}\n\t}\n\n\n\tfunction processSequence(seq) {\n\t\t\n\t\tconsole.log(seq);\n\n\t\tvar bytes = new Uint8Array(seq);\n\n\t\tconsole.log(bytes);\n\n\t\tlet nextColors = [];\n\t\t\n\t\tlet delay = 0;\n\t\t\t\n\t\tfor (let i=0; i<bytes.length; i+=8) {\n\t\t\tif (bytes[i] === 0x3 && i === 0) {\n\t\t\t\tlet count = (bytes[i+2] << 8) | bytes[i+1];\n\t\t\t\tconsole.log(\"Count\", count);\n\t\t\t\tfor (let j = 0; j < count; j++) {\n\t\t\t\t\tnextColors.push({color: `rgb(0,0,0)`})\n\t\t\t\t}\n\t\t\t\t\n\t\t\t} else if (bytes[i] === 0x1) {\n\t\t\t\tlet r = bytes[i+1];\n\t\t\t\tlet g = bytes[i+2];\n\t\t\t\tlet b =  bytes[i+3];\n\t\t\t\tlet index = (bytes[i+5] << 8) | bytes[i+4];\n\t\t\t\tconsole.log(\"color\", r,g,b, index);\n\t\t\t\tnextColors[index] = ({color: `rgb(${r},${g},${b})`})\n\t\t\t}else if (bytes[i] === 0x2) {\n\t\t\t\tdelay += (bytes[i+4] << 24) | (bytes[i+3] << 16) | (bytes[i+2] << 8) | bytes[i+1];\n\t\t\t\tconsole.log(\"delay\", delay);\n\t\t\t\tsetTimeout((lights) => {\n\t\t\t\t\tconsole.log(\"Changed lights\");\n\t\t\t\t\tsetLights(lights);\n\t\t\t\t}, delay,[...nextColors] )\n\t\t\t}\n        }\n\n        setTimeout(() => {\n            processSequence(seq)\n        }, delay)\n\t}\n\n\tconst [lights, setLights] = useState([]);\n\tconst rows = Math.floor((window.innerWidth - 200) / 170);\n\tconst radius = 50;\n\tconst xOffset = 120;\n\tconst yOffset = 120;\n\n\treturn (\n\t<div className=\"App\">\n\t\t<input type=\"file\" name=\"file\" onChange={handleFiles} />\n\t\t<header className=\"App-header\">\n\t\t\t<Stage width={window.innerWidth} height={window.innerHeight}>\n      \t\t\t\t<Layer>\n\t\t\t\t\t{\n\t\t\t\t\t\tlights.map( function(elem, idx) {\n\t\t\t\t\t\t\tconsole.log(elem, idx);\n\t\t\t\t\t\t\treturn <Bulb x={xOffset + (xOffset * (idx % rows))} y={yOffset + (yOffset * Math.floor(idx / rows))} color={elem.color} radius={radius}/>\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n      \t\t\t\t</Layer>\n    \t\t\t</Stage>\n\t\t</header>\n\t</div>\n  \t);\n}\n\n\nexport default Programming;\n"]},"metadata":{},"sourceType":"module"}