{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/pbivrell/light/light/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport _classCallCheck from \"/Users/pbivrell/light/light/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/pbivrell/light/light/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _get from \"/Users/pbivrell/light/light/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"/Users/pbivrell/light/light/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/pbivrell/light/light/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/pbivrell/light/light/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { Factory } from './Factory.js';\nimport { Node } from './Node.js';\nimport { getNumberValidator } from './Validators.js';\nexport var Container = /*#__PURE__*/function (_Node) {\n  _inherits(Container, _Node);\n\n  var _super = _createSuper(Container);\n\n  function Container() {\n    var _this;\n\n    _classCallCheck(this, Container);\n\n    _this = _super.apply(this, arguments);\n    _this.children = [];\n    return _this;\n  }\n\n  _createClass(Container, [{\n    key: \"getChildren\",\n    value: function getChildren(filterFunc) {\n      if (!filterFunc) {\n        return this.children || [];\n      }\n\n      var children = this.children || [];\n      var results = [];\n      children.forEach(function (child) {\n        if (filterFunc(child)) {\n          results.push(child);\n        }\n      });\n      return results;\n    }\n  }, {\n    key: \"hasChildren\",\n    value: function hasChildren() {\n      return this.getChildren().length > 0;\n    }\n  }, {\n    key: \"removeChildren\",\n    value: function removeChildren() {\n      this.getChildren().forEach(function (child) {\n        child.parent = null;\n        child.index = 0;\n        child.remove();\n      });\n      this.children = [];\n\n      this._requestDraw();\n\n      return this;\n    }\n  }, {\n    key: \"destroyChildren\",\n    value: function destroyChildren() {\n      this.getChildren().forEach(function (child) {\n        child.parent = null;\n        child.index = 0;\n        child.destroy();\n      });\n      this.children = [];\n\n      this._requestDraw();\n\n      return this;\n    }\n  }, {\n    key: \"add\",\n    value: function add() {\n      for (var _len = arguments.length, children = new Array(_len), _key = 0; _key < _len; _key++) {\n        children[_key] = arguments[_key];\n      }\n\n      if (arguments.length > 1) {\n        for (var i = 0; i < arguments.length; i++) {\n          this.add(arguments[i]);\n        }\n\n        return this;\n      }\n\n      var child = children[0];\n\n      if (child.getParent()) {\n        child.moveTo(this);\n        return this;\n      }\n\n      this._validateAdd(child);\n\n      child.index = this.getChildren().length;\n      child.parent = this;\n\n      child._clearCaches();\n\n      this.getChildren().push(child);\n\n      this._fire('add', {\n        child: child\n      });\n\n      this._requestDraw();\n\n      return this;\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      if (this.hasChildren()) {\n        this.destroyChildren();\n      }\n\n      _get(_getPrototypeOf(Container.prototype), \"destroy\", this).call(this);\n\n      return this;\n    }\n  }, {\n    key: \"find\",\n    value: function find(selector) {\n      return this._generalFind(selector, false);\n    }\n  }, {\n    key: \"findOne\",\n    value: function findOne(selector) {\n      var result = this._generalFind(selector, true);\n\n      return result.length > 0 ? result[0] : undefined;\n    }\n  }, {\n    key: \"_generalFind\",\n    value: function _generalFind(selector, findOne) {\n      var retArr = [];\n\n      this._descendants(function (node) {\n        var valid = node._isMatch(selector);\n\n        if (valid) {\n          retArr.push(node);\n        }\n\n        if (valid && findOne) {\n          return true;\n        }\n\n        return false;\n      });\n\n      return retArr;\n    }\n  }, {\n    key: \"_descendants\",\n    value: function _descendants(fn) {\n      var shouldStop = false;\n      var children = this.getChildren();\n\n      var _iterator = _createForOfIteratorHelper(children),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var child = _step.value;\n          shouldStop = fn(child);\n\n          if (shouldStop) {\n            return true;\n          }\n\n          if (!child.hasChildren()) {\n            continue;\n          }\n\n          shouldStop = child._descendants(fn);\n\n          if (shouldStop) {\n            return true;\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      return false;\n    }\n  }, {\n    key: \"toObject\",\n    value: function toObject() {\n      var obj = Node.prototype.toObject.call(this);\n      obj.children = [];\n      this.getChildren().forEach(function (child) {\n        obj.children.push(child.toObject());\n      });\n      return obj;\n    }\n  }, {\n    key: \"isAncestorOf\",\n    value: function isAncestorOf(node) {\n      var parent = node.getParent();\n\n      while (parent) {\n        if (parent._id === this._id) {\n          return true;\n        }\n\n        parent = parent.getParent();\n      }\n\n      return false;\n    }\n  }, {\n    key: \"clone\",\n    value: function clone(obj) {\n      var node = Node.prototype.clone.call(this, obj);\n      this.getChildren().forEach(function (no) {\n        node.add(no.clone());\n      });\n      return node;\n    }\n  }, {\n    key: \"getAllIntersections\",\n    value: function getAllIntersections(pos) {\n      var arr = [];\n      this.find('Shape').forEach(function (shape) {\n        if (shape.isVisible() && shape.intersects(pos)) {\n          arr.push(shape);\n        }\n      });\n      return arr;\n    }\n  }, {\n    key: \"_clearSelfAndDescendantCache\",\n    value: function _clearSelfAndDescendantCache(attr) {\n      var _a;\n\n      _get(_getPrototypeOf(Container.prototype), \"_clearSelfAndDescendantCache\", this).call(this, attr);\n\n      if (this.isCached()) {\n        return;\n      }\n\n      (_a = this.children) === null || _a === void 0 ? void 0 : _a.forEach(function (node) {\n        node._clearSelfAndDescendantCache(attr);\n      });\n    }\n  }, {\n    key: \"_setChildrenIndices\",\n    value: function _setChildrenIndices() {\n      var _a;\n\n      (_a = this.children) === null || _a === void 0 ? void 0 : _a.forEach(function (child, n) {\n        child.index = n;\n      });\n\n      this._requestDraw();\n    }\n  }, {\n    key: \"drawScene\",\n    value: function drawScene(can, top) {\n      var layer = this.getLayer(),\n          canvas = can || layer && layer.getCanvas(),\n          context = canvas && canvas.getContext(),\n          cachedCanvas = this._getCanvasCache(),\n          cachedSceneCanvas = cachedCanvas && cachedCanvas.scene;\n\n      var caching = canvas && canvas.isCache;\n\n      if (!this.isVisible() && !caching) {\n        return this;\n      }\n\n      if (cachedSceneCanvas) {\n        context.save();\n        var m = this.getAbsoluteTransform(top).getMatrix();\n        context.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n\n        this._drawCachedSceneCanvas(context);\n\n        context.restore();\n      } else {\n        this._drawChildren('drawScene', canvas, top);\n      }\n\n      return this;\n    }\n  }, {\n    key: \"drawHit\",\n    value: function drawHit(can, top) {\n      if (!this.shouldDrawHit(top)) {\n        return this;\n      }\n\n      var layer = this.getLayer(),\n          canvas = can || layer && layer.hitCanvas,\n          context = canvas && canvas.getContext(),\n          cachedCanvas = this._getCanvasCache(),\n          cachedHitCanvas = cachedCanvas && cachedCanvas.hit;\n\n      if (cachedHitCanvas) {\n        context.save();\n        var m = this.getAbsoluteTransform(top).getMatrix();\n        context.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n\n        this._drawCachedHitCanvas(context);\n\n        context.restore();\n      } else {\n        this._drawChildren('drawHit', canvas, top);\n      }\n\n      return this;\n    }\n  }, {\n    key: \"_drawChildren\",\n    value: function _drawChildren(drawMethod, canvas, top) {\n      var _a;\n\n      var context = canvas && canvas.getContext(),\n          clipWidth = this.clipWidth(),\n          clipHeight = this.clipHeight(),\n          clipFunc = this.clipFunc(),\n          hasClip = clipWidth && clipHeight || clipFunc;\n      var selfCache = top === this;\n\n      if (hasClip) {\n        context.save();\n        var transform = this.getAbsoluteTransform(top);\n        var m = transform.getMatrix();\n        context.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n        context.beginPath();\n\n        if (clipFunc) {\n          clipFunc.call(this, context, this);\n        } else {\n          var clipX = this.clipX();\n          var clipY = this.clipY();\n          context.rect(clipX, clipY, clipWidth, clipHeight);\n        }\n\n        context.clip();\n        m = transform.copy().invert().getMatrix();\n        context.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n      }\n\n      var hasComposition = !selfCache && this.globalCompositeOperation() !== 'source-over' && drawMethod === 'drawScene';\n\n      if (hasComposition) {\n        context.save();\n\n        context._applyGlobalCompositeOperation(this);\n      }\n\n      (_a = this.children) === null || _a === void 0 ? void 0 : _a.forEach(function (child) {\n        child[drawMethod](canvas, top);\n      });\n\n      if (hasComposition) {\n        context.restore();\n      }\n\n      if (hasClip) {\n        context.restore();\n      }\n    }\n  }, {\n    key: \"getClientRect\",\n    value: function getClientRect(config) {\n      var _a;\n\n      config = config || {};\n      var skipTransform = config.skipTransform;\n      var relativeTo = config.relativeTo;\n      var minX, minY, maxX, maxY;\n      var selfRect = {\n        x: Infinity,\n        y: Infinity,\n        width: 0,\n        height: 0\n      };\n      var that = this;\n      (_a = this.children) === null || _a === void 0 ? void 0 : _a.forEach(function (child) {\n        if (!child.visible()) {\n          return;\n        }\n\n        var rect = child.getClientRect({\n          relativeTo: that,\n          skipShadow: config.skipShadow,\n          skipStroke: config.skipStroke\n        });\n\n        if (rect.width === 0 && rect.height === 0) {\n          return;\n        }\n\n        if (minX === undefined) {\n          minX = rect.x;\n          minY = rect.y;\n          maxX = rect.x + rect.width;\n          maxY = rect.y + rect.height;\n        } else {\n          minX = Math.min(minX, rect.x);\n          minY = Math.min(minY, rect.y);\n          maxX = Math.max(maxX, rect.x + rect.width);\n          maxY = Math.max(maxY, rect.y + rect.height);\n        }\n      });\n      var shapes = this.find('Shape');\n      var hasVisible = false;\n\n      for (var i = 0; i < shapes.length; i++) {\n        var shape = shapes[i];\n\n        if (shape._isVisible(this)) {\n          hasVisible = true;\n          break;\n        }\n      }\n\n      if (hasVisible && minX !== undefined) {\n        selfRect = {\n          x: minX,\n          y: minY,\n          width: maxX - minX,\n          height: maxY - minY\n        };\n      } else {\n        selfRect = {\n          x: 0,\n          y: 0,\n          width: 0,\n          height: 0\n        };\n      }\n\n      if (!skipTransform) {\n        return this._transformedRect(selfRect, relativeTo);\n      }\n\n      return selfRect;\n    }\n  }]);\n\n  return Container;\n}(Node);\nFactory.addComponentsGetterSetter(Container, 'clip', ['x', 'y', 'width', 'height']);\nFactory.addGetterSetter(Container, 'clipX', undefined, getNumberValidator());\nFactory.addGetterSetter(Container, 'clipY', undefined, getNumberValidator());\nFactory.addGetterSetter(Container, 'clipWidth', undefined, getNumberValidator());\nFactory.addGetterSetter(Container, 'clipHeight', undefined, getNumberValidator());\nFactory.addGetterSetter(Container, 'clipFunc');","map":{"version":3,"sources":["/Users/pbivrell/light/light/node_modules/konva/lib/Container.js"],"names":["Factory","Node","getNumberValidator","Container","arguments","children","filterFunc","results","forEach","child","push","getChildren","length","parent","index","remove","_requestDraw","destroy","i","add","getParent","moveTo","_validateAdd","_clearCaches","_fire","hasChildren","destroyChildren","selector","_generalFind","result","undefined","findOne","retArr","_descendants","node","valid","_isMatch","fn","shouldStop","obj","prototype","toObject","call","_id","clone","no","pos","arr","find","shape","isVisible","intersects","attr","_a","isCached","_clearSelfAndDescendantCache","n","can","top","layer","getLayer","canvas","getCanvas","context","getContext","cachedCanvas","_getCanvasCache","cachedSceneCanvas","scene","caching","isCache","save","m","getAbsoluteTransform","getMatrix","transform","_drawCachedSceneCanvas","restore","_drawChildren","shouldDrawHit","hitCanvas","cachedHitCanvas","hit","_drawCachedHitCanvas","drawMethod","clipWidth","clipHeight","clipFunc","hasClip","selfCache","beginPath","clipX","clipY","rect","clip","copy","invert","hasComposition","globalCompositeOperation","_applyGlobalCompositeOperation","config","skipTransform","relativeTo","minX","minY","maxX","maxY","selfRect","x","Infinity","y","width","height","that","visible","getClientRect","skipShadow","skipStroke","Math","min","max","shapes","hasVisible","_isVisible","_transformedRect","addComponentsGetterSetter","addGetterSetter"],"mappings":";;;;;;;AAAA,SAASA,OAAT,QAAwB,cAAxB;AACA,SAASC,IAAT,QAAqB,WAArB;AACA,SAASC,kBAAT,QAAmC,iBAAnC;AACA,WAAaC,SAAb;AAAA;;AAAA;;AACI,uBAAc;AAAA;;AAAA;;AACV,+BAASC,SAAT;AACA,UAAKC,QAAL,GAAgB,EAAhB;AAFU;AAGb;;AAJL;AAAA;AAAA,WAKI,qBAAYC,UAAZ,EAAwB;AACpB,UAAI,CAACA,UAAL,EAAiB;AACb,eAAO,KAAKD,QAAL,IAAiB,EAAxB;AACH;;AACD,UAAMA,QAAQ,GAAG,KAAKA,QAAL,IAAiB,EAAlC;AACA,UAAIE,OAAO,GAAG,EAAd;AACAF,MAAAA,QAAQ,CAACG,OAAT,CAAiB,UAAUC,KAAV,EAAiB;AAC9B,YAAIH,UAAU,CAACG,KAAD,CAAd,EAAuB;AACnBF,UAAAA,OAAO,CAACG,IAAR,CAAaD,KAAb;AACH;AACJ,OAJD;AAKA,aAAOF,OAAP;AACH;AAjBL;AAAA;AAAA,WAkBI,uBAAc;AACV,aAAO,KAAKI,WAAL,GAAmBC,MAAnB,GAA4B,CAAnC;AACH;AApBL;AAAA;AAAA,WAqBI,0BAAiB;AACb,WAAKD,WAAL,GAAmBH,OAAnB,CAA2B,UAACC,KAAD,EAAW;AAClCA,QAAAA,KAAK,CAACI,MAAN,GAAe,IAAf;AACAJ,QAAAA,KAAK,CAACK,KAAN,GAAc,CAAd;AACAL,QAAAA,KAAK,CAACM,MAAN;AACH,OAJD;AAKA,WAAKV,QAAL,GAAgB,EAAhB;;AACA,WAAKW,YAAL;;AACA,aAAO,IAAP;AACH;AA9BL;AAAA;AAAA,WA+BI,2BAAkB;AACd,WAAKL,WAAL,GAAmBH,OAAnB,CAA2B,UAACC,KAAD,EAAW;AAClCA,QAAAA,KAAK,CAACI,MAAN,GAAe,IAAf;AACAJ,QAAAA,KAAK,CAACK,KAAN,GAAc,CAAd;AACAL,QAAAA,KAAK,CAACQ,OAAN;AACH,OAJD;AAKA,WAAKZ,QAAL,GAAgB,EAAhB;;AACA,WAAKW,YAAL;;AACA,aAAO,IAAP;AACH;AAxCL;AAAA;AAAA,WAyCI,eAAiB;AAAA,wCAAVX,QAAU;AAAVA,QAAAA,QAAU;AAAA;;AACb,UAAID,SAAS,CAACQ,MAAV,GAAmB,CAAvB,EAA0B;AACtB,aAAK,IAAIM,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGd,SAAS,CAACQ,MAA9B,EAAsCM,CAAC,EAAvC,EAA2C;AACvC,eAAKC,GAAL,CAASf,SAAS,CAACc,CAAD,CAAlB;AACH;;AACD,eAAO,IAAP;AACH;;AACD,UAAIT,KAAK,GAAGJ,QAAQ,CAAC,CAAD,CAApB;;AACA,UAAII,KAAK,CAACW,SAAN,EAAJ,EAAuB;AACnBX,QAAAA,KAAK,CAACY,MAAN,CAAa,IAAb;AACA,eAAO,IAAP;AACH;;AACD,WAAKC,YAAL,CAAkBb,KAAlB;;AACAA,MAAAA,KAAK,CAACK,KAAN,GAAc,KAAKH,WAAL,GAAmBC,MAAjC;AACAH,MAAAA,KAAK,CAACI,MAAN,GAAe,IAAf;;AACAJ,MAAAA,KAAK,CAACc,YAAN;;AACA,WAAKZ,WAAL,GAAmBD,IAAnB,CAAwBD,KAAxB;;AACA,WAAKe,KAAL,CAAW,KAAX,EAAkB;AACdf,QAAAA,KAAK,EAAEA;AADO,OAAlB;;AAGA,WAAKO,YAAL;;AACA,aAAO,IAAP;AACH;AA/DL;AAAA;AAAA,WAgEI,mBAAU;AACN,UAAI,KAAKS,WAAL,EAAJ,EAAwB;AACpB,aAAKC,eAAL;AACH;;AACD;;AACA,aAAO,IAAP;AACH;AAtEL;AAAA;AAAA,WAuEI,cAAKC,QAAL,EAAe;AACX,aAAO,KAAKC,YAAL,CAAkBD,QAAlB,EAA4B,KAA5B,CAAP;AACH;AAzEL;AAAA;AAAA,WA0EI,iBAAQA,QAAR,EAAkB;AACd,UAAIE,MAAM,GAAG,KAAKD,YAAL,CAAkBD,QAAlB,EAA4B,IAA5B,CAAb;;AACA,aAAOE,MAAM,CAACjB,MAAP,GAAgB,CAAhB,GAAoBiB,MAAM,CAAC,CAAD,CAA1B,GAAgCC,SAAvC;AACH;AA7EL;AAAA;AAAA,WA8EI,sBAAaH,QAAb,EAAuBI,OAAvB,EAAgC;AAC5B,UAAIC,MAAM,GAAG,EAAb;;AACA,WAAKC,YAAL,CAAkB,UAACC,IAAD,EAAU;AACxB,YAAMC,KAAK,GAAGD,IAAI,CAACE,QAAL,CAAcT,QAAd,CAAd;;AACA,YAAIQ,KAAJ,EAAW;AACPH,UAAAA,MAAM,CAACtB,IAAP,CAAYwB,IAAZ;AACH;;AACD,YAAIC,KAAK,IAAIJ,OAAb,EAAsB;AAClB,iBAAO,IAAP;AACH;;AACD,eAAO,KAAP;AACH,OATD;;AAUA,aAAOC,MAAP;AACH;AA3FL;AAAA;AAAA,WA4FI,sBAAaK,EAAb,EAAiB;AACb,UAAIC,UAAU,GAAG,KAAjB;AACA,UAAMjC,QAAQ,GAAG,KAAKM,WAAL,EAAjB;;AAFa,iDAGON,QAHP;AAAA;;AAAA;AAGb,4DAA8B;AAAA,cAAnBI,KAAmB;AAC1B6B,UAAAA,UAAU,GAAGD,EAAE,CAAC5B,KAAD,CAAf;;AACA,cAAI6B,UAAJ,EAAgB;AACZ,mBAAO,IAAP;AACH;;AACD,cAAI,CAAC7B,KAAK,CAACgB,WAAN,EAAL,EAA0B;AACtB;AACH;;AACDa,UAAAA,UAAU,GAAG7B,KAAK,CAACwB,YAAN,CAAmBI,EAAnB,CAAb;;AACA,cAAIC,UAAJ,EAAgB;AACZ,mBAAO,IAAP;AACH;AACJ;AAfY;AAAA;AAAA;AAAA;AAAA;;AAgBb,aAAO,KAAP;AACH;AA7GL;AAAA;AAAA,WA8GI,oBAAW;AACP,UAAIC,GAAG,GAAGtC,IAAI,CAACuC,SAAL,CAAeC,QAAf,CAAwBC,IAAxB,CAA6B,IAA7B,CAAV;AACAH,MAAAA,GAAG,CAAClC,QAAJ,GAAe,EAAf;AACA,WAAKM,WAAL,GAAmBH,OAAnB,CAA2B,UAACC,KAAD,EAAW;AAClC8B,QAAAA,GAAG,CAAClC,QAAJ,CAAaK,IAAb,CAAkBD,KAAK,CAACgC,QAAN,EAAlB;AACH,OAFD;AAGA,aAAOF,GAAP;AACH;AArHL;AAAA;AAAA,WAsHI,sBAAaL,IAAb,EAAmB;AACf,UAAIrB,MAAM,GAAGqB,IAAI,CAACd,SAAL,EAAb;;AACA,aAAOP,MAAP,EAAe;AACX,YAAIA,MAAM,CAAC8B,GAAP,KAAe,KAAKA,GAAxB,EAA6B;AACzB,iBAAO,IAAP;AACH;;AACD9B,QAAAA,MAAM,GAAGA,MAAM,CAACO,SAAP,EAAT;AACH;;AACD,aAAO,KAAP;AACH;AA/HL;AAAA;AAAA,WAgII,eAAMmB,GAAN,EAAW;AACP,UAAIL,IAAI,GAAGjC,IAAI,CAACuC,SAAL,CAAeI,KAAf,CAAqBF,IAArB,CAA0B,IAA1B,EAAgCH,GAAhC,CAAX;AACA,WAAK5B,WAAL,GAAmBH,OAAnB,CAA2B,UAAUqC,EAAV,EAAc;AACrCX,QAAAA,IAAI,CAACf,GAAL,CAAS0B,EAAE,CAACD,KAAH,EAAT;AACH,OAFD;AAGA,aAAOV,IAAP;AACH;AAtIL;AAAA;AAAA,WAuII,6BAAoBY,GAApB,EAAyB;AACrB,UAAIC,GAAG,GAAG,EAAV;AACA,WAAKC,IAAL,CAAU,OAAV,EAAmBxC,OAAnB,CAA2B,UAAUyC,KAAV,EAAiB;AACxC,YAAIA,KAAK,CAACC,SAAN,MAAqBD,KAAK,CAACE,UAAN,CAAiBL,GAAjB,CAAzB,EAAgD;AAC5CC,UAAAA,GAAG,CAACrC,IAAJ,CAASuC,KAAT;AACH;AACJ,OAJD;AAKA,aAAOF,GAAP;AACH;AA/IL;AAAA;AAAA,WAgJI,sCAA6BK,IAA7B,EAAmC;AAC/B,UAAIC,EAAJ;;AACA,kGAAmCD,IAAnC;;AACA,UAAI,KAAKE,QAAL,EAAJ,EAAqB;AACjB;AACH;;AACD,OAACD,EAAE,GAAG,KAAKhD,QAAX,MAAyB,IAAzB,IAAiCgD,EAAE,KAAK,KAAK,CAA7C,GAAiD,KAAK,CAAtD,GAA0DA,EAAE,CAAC7C,OAAH,CAAW,UAAU0B,IAAV,EAAgB;AACjFA,QAAAA,IAAI,CAACqB,4BAAL,CAAkCH,IAAlC;AACH,OAFyD,CAA1D;AAGH;AAzJL;AAAA;AAAA,WA0JI,+BAAsB;AAClB,UAAIC,EAAJ;;AACA,OAACA,EAAE,GAAG,KAAKhD,QAAX,MAAyB,IAAzB,IAAiCgD,EAAE,KAAK,KAAK,CAA7C,GAAiD,KAAK,CAAtD,GAA0DA,EAAE,CAAC7C,OAAH,CAAW,UAAUC,KAAV,EAAiB+C,CAAjB,EAAoB;AACrF/C,QAAAA,KAAK,CAACK,KAAN,GAAc0C,CAAd;AACH,OAFyD,CAA1D;;AAGA,WAAKxC,YAAL;AACH;AAhKL;AAAA;AAAA,WAiKI,mBAAUyC,GAAV,EAAeC,GAAf,EAAoB;AAChB,UAAIC,KAAK,GAAG,KAAKC,QAAL,EAAZ;AAAA,UAA6BC,MAAM,GAAGJ,GAAG,IAAKE,KAAK,IAAIA,KAAK,CAACG,SAAN,EAAvD;AAAA,UAA2EC,OAAO,GAAGF,MAAM,IAAIA,MAAM,CAACG,UAAP,EAA/F;AAAA,UAAoHC,YAAY,GAAG,KAAKC,eAAL,EAAnI;AAAA,UAA2JC,iBAAiB,GAAGF,YAAY,IAAIA,YAAY,CAACG,KAA5M;;AACA,UAAIC,OAAO,GAAGR,MAAM,IAAIA,MAAM,CAACS,OAA/B;;AACA,UAAI,CAAC,KAAKpB,SAAL,EAAD,IAAqB,CAACmB,OAA1B,EAAmC;AAC/B,eAAO,IAAP;AACH;;AACD,UAAIF,iBAAJ,EAAuB;AACnBJ,QAAAA,OAAO,CAACQ,IAAR;AACA,YAAIC,CAAC,GAAG,KAAKC,oBAAL,CAA0Bf,GAA1B,EAA+BgB,SAA/B,EAAR;AACAX,QAAAA,OAAO,CAACY,SAAR,CAAkBH,CAAC,CAAC,CAAD,CAAnB,EAAwBA,CAAC,CAAC,CAAD,CAAzB,EAA8BA,CAAC,CAAC,CAAD,CAA/B,EAAoCA,CAAC,CAAC,CAAD,CAArC,EAA0CA,CAAC,CAAC,CAAD,CAA3C,EAAgDA,CAAC,CAAC,CAAD,CAAjD;;AACA,aAAKI,sBAAL,CAA4Bb,OAA5B;;AACAA,QAAAA,OAAO,CAACc,OAAR;AACH,OAND,MAOK;AACD,aAAKC,aAAL,CAAmB,WAAnB,EAAgCjB,MAAhC,EAAwCH,GAAxC;AACH;;AACD,aAAO,IAAP;AACH;AAlLL;AAAA;AAAA,WAmLI,iBAAQD,GAAR,EAAaC,GAAb,EAAkB;AACd,UAAI,CAAC,KAAKqB,aAAL,CAAmBrB,GAAnB,CAAL,EAA8B;AAC1B,eAAO,IAAP;AACH;;AACD,UAAIC,KAAK,GAAG,KAAKC,QAAL,EAAZ;AAAA,UAA6BC,MAAM,GAAGJ,GAAG,IAAKE,KAAK,IAAIA,KAAK,CAACqB,SAA7D;AAAA,UAAyEjB,OAAO,GAAGF,MAAM,IAAIA,MAAM,CAACG,UAAP,EAA7F;AAAA,UAAkHC,YAAY,GAAG,KAAKC,eAAL,EAAjI;AAAA,UAAyJe,eAAe,GAAGhB,YAAY,IAAIA,YAAY,CAACiB,GAAxM;;AACA,UAAID,eAAJ,EAAqB;AACjBlB,QAAAA,OAAO,CAACQ,IAAR;AACA,YAAIC,CAAC,GAAG,KAAKC,oBAAL,CAA0Bf,GAA1B,EAA+BgB,SAA/B,EAAR;AACAX,QAAAA,OAAO,CAACY,SAAR,CAAkBH,CAAC,CAAC,CAAD,CAAnB,EAAwBA,CAAC,CAAC,CAAD,CAAzB,EAA8BA,CAAC,CAAC,CAAD,CAA/B,EAAoCA,CAAC,CAAC,CAAD,CAArC,EAA0CA,CAAC,CAAC,CAAD,CAA3C,EAAgDA,CAAC,CAAC,CAAD,CAAjD;;AACA,aAAKW,oBAAL,CAA0BpB,OAA1B;;AACAA,QAAAA,OAAO,CAACc,OAAR;AACH,OAND,MAOK;AACD,aAAKC,aAAL,CAAmB,SAAnB,EAA8BjB,MAA9B,EAAsCH,GAAtC;AACH;;AACD,aAAO,IAAP;AACH;AAnML;AAAA;AAAA,WAoMI,uBAAc0B,UAAd,EAA0BvB,MAA1B,EAAkCH,GAAlC,EAAuC;AACnC,UAAIL,EAAJ;;AACA,UAAIU,OAAO,GAAGF,MAAM,IAAIA,MAAM,CAACG,UAAP,EAAxB;AAAA,UAA6CqB,SAAS,GAAG,KAAKA,SAAL,EAAzD;AAAA,UAA2EC,UAAU,GAAG,KAAKA,UAAL,EAAxF;AAAA,UAA2GC,QAAQ,GAAG,KAAKA,QAAL,EAAtH;AAAA,UAAuIC,OAAO,GAAIH,SAAS,IAAIC,UAAd,IAA6BC,QAA9K;AACA,UAAME,SAAS,GAAG/B,GAAG,KAAK,IAA1B;;AACA,UAAI8B,OAAJ,EAAa;AACTzB,QAAAA,OAAO,CAACQ,IAAR;AACA,YAAII,SAAS,GAAG,KAAKF,oBAAL,CAA0Bf,GAA1B,CAAhB;AACA,YAAIc,CAAC,GAAGG,SAAS,CAACD,SAAV,EAAR;AACAX,QAAAA,OAAO,CAACY,SAAR,CAAkBH,CAAC,CAAC,CAAD,CAAnB,EAAwBA,CAAC,CAAC,CAAD,CAAzB,EAA8BA,CAAC,CAAC,CAAD,CAA/B,EAAoCA,CAAC,CAAC,CAAD,CAArC,EAA0CA,CAAC,CAAC,CAAD,CAA3C,EAAgDA,CAAC,CAAC,CAAD,CAAjD;AACAT,QAAAA,OAAO,CAAC2B,SAAR;;AACA,YAAIH,QAAJ,EAAc;AACVA,UAAAA,QAAQ,CAAC7C,IAAT,CAAc,IAAd,EAAoBqB,OAApB,EAA6B,IAA7B;AACH,SAFD,MAGK;AACD,cAAI4B,KAAK,GAAG,KAAKA,KAAL,EAAZ;AACA,cAAIC,KAAK,GAAG,KAAKA,KAAL,EAAZ;AACA7B,UAAAA,OAAO,CAAC8B,IAAR,CAAaF,KAAb,EAAoBC,KAApB,EAA2BP,SAA3B,EAAsCC,UAAtC;AACH;;AACDvB,QAAAA,OAAO,CAAC+B,IAAR;AACAtB,QAAAA,CAAC,GAAGG,SAAS,CAACoB,IAAV,GAAiBC,MAAjB,GAA0BtB,SAA1B,EAAJ;AACAX,QAAAA,OAAO,CAACY,SAAR,CAAkBH,CAAC,CAAC,CAAD,CAAnB,EAAwBA,CAAC,CAAC,CAAD,CAAzB,EAA8BA,CAAC,CAAC,CAAD,CAA/B,EAAoCA,CAAC,CAAC,CAAD,CAArC,EAA0CA,CAAC,CAAC,CAAD,CAA3C,EAAgDA,CAAC,CAAC,CAAD,CAAjD;AACH;;AACD,UAAIyB,cAAc,GAAG,CAACR,SAAD,IACjB,KAAKS,wBAAL,OAAoC,aADnB,IAEjBd,UAAU,KAAK,WAFnB;;AAGA,UAAIa,cAAJ,EAAoB;AAChBlC,QAAAA,OAAO,CAACQ,IAAR;;AACAR,QAAAA,OAAO,CAACoC,8BAAR,CAAuC,IAAvC;AACH;;AACD,OAAC9C,EAAE,GAAG,KAAKhD,QAAX,MAAyB,IAAzB,IAAiCgD,EAAE,KAAK,KAAK,CAA7C,GAAiD,KAAK,CAAtD,GAA0DA,EAAE,CAAC7C,OAAH,CAAW,UAAUC,KAAV,EAAiB;AAClFA,QAAAA,KAAK,CAAC2E,UAAD,CAAL,CAAkBvB,MAAlB,EAA0BH,GAA1B;AACH,OAFyD,CAA1D;;AAGA,UAAIuC,cAAJ,EAAoB;AAChBlC,QAAAA,OAAO,CAACc,OAAR;AACH;;AACD,UAAIW,OAAJ,EAAa;AACTzB,QAAAA,OAAO,CAACc,OAAR;AACH;AACJ;AA1OL;AAAA;AAAA,WA2OI,uBAAcuB,MAAd,EAAsB;AAClB,UAAI/C,EAAJ;;AACA+C,MAAAA,MAAM,GAAGA,MAAM,IAAI,EAAnB;AACA,UAAIC,aAAa,GAAGD,MAAM,CAACC,aAA3B;AACA,UAAIC,UAAU,GAAGF,MAAM,CAACE,UAAxB;AACA,UAAIC,IAAJ,EAAUC,IAAV,EAAgBC,IAAhB,EAAsBC,IAAtB;AACA,UAAIC,QAAQ,GAAG;AACXC,QAAAA,CAAC,EAAEC,QADQ;AAEXC,QAAAA,CAAC,EAAED,QAFQ;AAGXE,QAAAA,KAAK,EAAE,CAHI;AAIXC,QAAAA,MAAM,EAAE;AAJG,OAAf;AAMA,UAAIC,IAAI,GAAG,IAAX;AACA,OAAC5D,EAAE,GAAG,KAAKhD,QAAX,MAAyB,IAAzB,IAAiCgD,EAAE,KAAK,KAAK,CAA7C,GAAiD,KAAK,CAAtD,GAA0DA,EAAE,CAAC7C,OAAH,CAAW,UAAUC,KAAV,EAAiB;AAClF,YAAI,CAACA,KAAK,CAACyG,OAAN,EAAL,EAAsB;AAClB;AACH;;AACD,YAAIrB,IAAI,GAAGpF,KAAK,CAAC0G,aAAN,CAAoB;AAC3Bb,UAAAA,UAAU,EAAEW,IADe;AAE3BG,UAAAA,UAAU,EAAEhB,MAAM,CAACgB,UAFQ;AAG3BC,UAAAA,UAAU,EAAEjB,MAAM,CAACiB;AAHQ,SAApB,CAAX;;AAKA,YAAIxB,IAAI,CAACkB,KAAL,KAAe,CAAf,IAAoBlB,IAAI,CAACmB,MAAL,KAAgB,CAAxC,EAA2C;AACvC;AACH;;AACD,YAAIT,IAAI,KAAKzE,SAAb,EAAwB;AACpByE,UAAAA,IAAI,GAAGV,IAAI,CAACe,CAAZ;AACAJ,UAAAA,IAAI,GAAGX,IAAI,CAACiB,CAAZ;AACAL,UAAAA,IAAI,GAAGZ,IAAI,CAACe,CAAL,GAASf,IAAI,CAACkB,KAArB;AACAL,UAAAA,IAAI,GAAGb,IAAI,CAACiB,CAAL,GAASjB,IAAI,CAACmB,MAArB;AACH,SALD,MAMK;AACDT,UAAAA,IAAI,GAAGe,IAAI,CAACC,GAAL,CAAShB,IAAT,EAAeV,IAAI,CAACe,CAApB,CAAP;AACAJ,UAAAA,IAAI,GAAGc,IAAI,CAACC,GAAL,CAASf,IAAT,EAAeX,IAAI,CAACiB,CAApB,CAAP;AACAL,UAAAA,IAAI,GAAGa,IAAI,CAACE,GAAL,CAASf,IAAT,EAAeZ,IAAI,CAACe,CAAL,GAASf,IAAI,CAACkB,KAA7B,CAAP;AACAL,UAAAA,IAAI,GAAGY,IAAI,CAACE,GAAL,CAASd,IAAT,EAAeb,IAAI,CAACiB,CAAL,GAASjB,IAAI,CAACmB,MAA7B,CAAP;AACH;AACJ,OAxByD,CAA1D;AAyBA,UAAIS,MAAM,GAAG,KAAKzE,IAAL,CAAU,OAAV,CAAb;AACA,UAAI0E,UAAU,GAAG,KAAjB;;AACA,WAAK,IAAIxG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGuG,MAAM,CAAC7G,MAA3B,EAAmCM,CAAC,EAApC,EAAwC;AACpC,YAAI+B,KAAK,GAAGwE,MAAM,CAACvG,CAAD,CAAlB;;AACA,YAAI+B,KAAK,CAAC0E,UAAN,CAAiB,IAAjB,CAAJ,EAA4B;AACxBD,UAAAA,UAAU,GAAG,IAAb;AACA;AACH;AACJ;;AACD,UAAIA,UAAU,IAAInB,IAAI,KAAKzE,SAA3B,EAAsC;AAClC6E,QAAAA,QAAQ,GAAG;AACPC,UAAAA,CAAC,EAAEL,IADI;AAEPO,UAAAA,CAAC,EAAEN,IAFI;AAGPO,UAAAA,KAAK,EAAEN,IAAI,GAAGF,IAHP;AAIPS,UAAAA,MAAM,EAAEN,IAAI,GAAGF;AAJR,SAAX;AAMH,OAPD,MAQK;AACDG,QAAAA,QAAQ,GAAG;AACPC,UAAAA,CAAC,EAAE,CADI;AAEPE,UAAAA,CAAC,EAAE,CAFI;AAGPC,UAAAA,KAAK,EAAE,CAHA;AAIPC,UAAAA,MAAM,EAAE;AAJD,SAAX;AAMH;;AACD,UAAI,CAACX,aAAL,EAAoB;AAChB,eAAO,KAAKuB,gBAAL,CAAsBjB,QAAtB,EAAgCL,UAAhC,CAAP;AACH;;AACD,aAAOK,QAAP;AACH;AA9SL;;AAAA;AAAA,EAA+B1G,IAA/B;AAgTAD,OAAO,CAAC6H,yBAAR,CAAkC1H,SAAlC,EAA6C,MAA7C,EAAqD,CACjD,GADiD,EAEjD,GAFiD,EAGjD,OAHiD,EAIjD,QAJiD,CAArD;AAMAH,OAAO,CAAC8H,eAAR,CAAwB3H,SAAxB,EAAmC,OAAnC,EAA4C2B,SAA5C,EAAuD5B,kBAAkB,EAAzE;AACAF,OAAO,CAAC8H,eAAR,CAAwB3H,SAAxB,EAAmC,OAAnC,EAA4C2B,SAA5C,EAAuD5B,kBAAkB,EAAzE;AACAF,OAAO,CAAC8H,eAAR,CAAwB3H,SAAxB,EAAmC,WAAnC,EAAgD2B,SAAhD,EAA2D5B,kBAAkB,EAA7E;AACAF,OAAO,CAAC8H,eAAR,CAAwB3H,SAAxB,EAAmC,YAAnC,EAAiD2B,SAAjD,EAA4D5B,kBAAkB,EAA9E;AACAF,OAAO,CAAC8H,eAAR,CAAwB3H,SAAxB,EAAmC,UAAnC","sourcesContent":["import { Factory } from './Factory.js';\nimport { Node } from './Node.js';\nimport { getNumberValidator } from './Validators.js';\nexport class Container extends Node {\n    constructor() {\n        super(...arguments);\n        this.children = [];\n    }\n    getChildren(filterFunc) {\n        if (!filterFunc) {\n            return this.children || [];\n        }\n        const children = this.children || [];\n        var results = [];\n        children.forEach(function (child) {\n            if (filterFunc(child)) {\n                results.push(child);\n            }\n        });\n        return results;\n    }\n    hasChildren() {\n        return this.getChildren().length > 0;\n    }\n    removeChildren() {\n        this.getChildren().forEach((child) => {\n            child.parent = null;\n            child.index = 0;\n            child.remove();\n        });\n        this.children = [];\n        this._requestDraw();\n        return this;\n    }\n    destroyChildren() {\n        this.getChildren().forEach((child) => {\n            child.parent = null;\n            child.index = 0;\n            child.destroy();\n        });\n        this.children = [];\n        this._requestDraw();\n        return this;\n    }\n    add(...children) {\n        if (arguments.length > 1) {\n            for (var i = 0; i < arguments.length; i++) {\n                this.add(arguments[i]);\n            }\n            return this;\n        }\n        var child = children[0];\n        if (child.getParent()) {\n            child.moveTo(this);\n            return this;\n        }\n        this._validateAdd(child);\n        child.index = this.getChildren().length;\n        child.parent = this;\n        child._clearCaches();\n        this.getChildren().push(child);\n        this._fire('add', {\n            child: child,\n        });\n        this._requestDraw();\n        return this;\n    }\n    destroy() {\n        if (this.hasChildren()) {\n            this.destroyChildren();\n        }\n        super.destroy();\n        return this;\n    }\n    find(selector) {\n        return this._generalFind(selector, false);\n    }\n    findOne(selector) {\n        var result = this._generalFind(selector, true);\n        return result.length > 0 ? result[0] : undefined;\n    }\n    _generalFind(selector, findOne) {\n        var retArr = [];\n        this._descendants((node) => {\n            const valid = node._isMatch(selector);\n            if (valid) {\n                retArr.push(node);\n            }\n            if (valid && findOne) {\n                return true;\n            }\n            return false;\n        });\n        return retArr;\n    }\n    _descendants(fn) {\n        let shouldStop = false;\n        const children = this.getChildren();\n        for (const child of children) {\n            shouldStop = fn(child);\n            if (shouldStop) {\n                return true;\n            }\n            if (!child.hasChildren()) {\n                continue;\n            }\n            shouldStop = child._descendants(fn);\n            if (shouldStop) {\n                return true;\n            }\n        }\n        return false;\n    }\n    toObject() {\n        var obj = Node.prototype.toObject.call(this);\n        obj.children = [];\n        this.getChildren().forEach((child) => {\n            obj.children.push(child.toObject());\n        });\n        return obj;\n    }\n    isAncestorOf(node) {\n        var parent = node.getParent();\n        while (parent) {\n            if (parent._id === this._id) {\n                return true;\n            }\n            parent = parent.getParent();\n        }\n        return false;\n    }\n    clone(obj) {\n        var node = Node.prototype.clone.call(this, obj);\n        this.getChildren().forEach(function (no) {\n            node.add(no.clone());\n        });\n        return node;\n    }\n    getAllIntersections(pos) {\n        var arr = [];\n        this.find('Shape').forEach(function (shape) {\n            if (shape.isVisible() && shape.intersects(pos)) {\n                arr.push(shape);\n            }\n        });\n        return arr;\n    }\n    _clearSelfAndDescendantCache(attr) {\n        var _a;\n        super._clearSelfAndDescendantCache(attr);\n        if (this.isCached()) {\n            return;\n        }\n        (_a = this.children) === null || _a === void 0 ? void 0 : _a.forEach(function (node) {\n            node._clearSelfAndDescendantCache(attr);\n        });\n    }\n    _setChildrenIndices() {\n        var _a;\n        (_a = this.children) === null || _a === void 0 ? void 0 : _a.forEach(function (child, n) {\n            child.index = n;\n        });\n        this._requestDraw();\n    }\n    drawScene(can, top) {\n        var layer = this.getLayer(), canvas = can || (layer && layer.getCanvas()), context = canvas && canvas.getContext(), cachedCanvas = this._getCanvasCache(), cachedSceneCanvas = cachedCanvas && cachedCanvas.scene;\n        var caching = canvas && canvas.isCache;\n        if (!this.isVisible() && !caching) {\n            return this;\n        }\n        if (cachedSceneCanvas) {\n            context.save();\n            var m = this.getAbsoluteTransform(top).getMatrix();\n            context.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n            this._drawCachedSceneCanvas(context);\n            context.restore();\n        }\n        else {\n            this._drawChildren('drawScene', canvas, top);\n        }\n        return this;\n    }\n    drawHit(can, top) {\n        if (!this.shouldDrawHit(top)) {\n            return this;\n        }\n        var layer = this.getLayer(), canvas = can || (layer && layer.hitCanvas), context = canvas && canvas.getContext(), cachedCanvas = this._getCanvasCache(), cachedHitCanvas = cachedCanvas && cachedCanvas.hit;\n        if (cachedHitCanvas) {\n            context.save();\n            var m = this.getAbsoluteTransform(top).getMatrix();\n            context.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n            this._drawCachedHitCanvas(context);\n            context.restore();\n        }\n        else {\n            this._drawChildren('drawHit', canvas, top);\n        }\n        return this;\n    }\n    _drawChildren(drawMethod, canvas, top) {\n        var _a;\n        var context = canvas && canvas.getContext(), clipWidth = this.clipWidth(), clipHeight = this.clipHeight(), clipFunc = this.clipFunc(), hasClip = (clipWidth && clipHeight) || clipFunc;\n        const selfCache = top === this;\n        if (hasClip) {\n            context.save();\n            var transform = this.getAbsoluteTransform(top);\n            var m = transform.getMatrix();\n            context.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n            context.beginPath();\n            if (clipFunc) {\n                clipFunc.call(this, context, this);\n            }\n            else {\n                var clipX = this.clipX();\n                var clipY = this.clipY();\n                context.rect(clipX, clipY, clipWidth, clipHeight);\n            }\n            context.clip();\n            m = transform.copy().invert().getMatrix();\n            context.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n        }\n        var hasComposition = !selfCache &&\n            this.globalCompositeOperation() !== 'source-over' &&\n            drawMethod === 'drawScene';\n        if (hasComposition) {\n            context.save();\n            context._applyGlobalCompositeOperation(this);\n        }\n        (_a = this.children) === null || _a === void 0 ? void 0 : _a.forEach(function (child) {\n            child[drawMethod](canvas, top);\n        });\n        if (hasComposition) {\n            context.restore();\n        }\n        if (hasClip) {\n            context.restore();\n        }\n    }\n    getClientRect(config) {\n        var _a;\n        config = config || {};\n        var skipTransform = config.skipTransform;\n        var relativeTo = config.relativeTo;\n        var minX, minY, maxX, maxY;\n        var selfRect = {\n            x: Infinity,\n            y: Infinity,\n            width: 0,\n            height: 0,\n        };\n        var that = this;\n        (_a = this.children) === null || _a === void 0 ? void 0 : _a.forEach(function (child) {\n            if (!child.visible()) {\n                return;\n            }\n            var rect = child.getClientRect({\n                relativeTo: that,\n                skipShadow: config.skipShadow,\n                skipStroke: config.skipStroke,\n            });\n            if (rect.width === 0 && rect.height === 0) {\n                return;\n            }\n            if (minX === undefined) {\n                minX = rect.x;\n                minY = rect.y;\n                maxX = rect.x + rect.width;\n                maxY = rect.y + rect.height;\n            }\n            else {\n                minX = Math.min(minX, rect.x);\n                minY = Math.min(minY, rect.y);\n                maxX = Math.max(maxX, rect.x + rect.width);\n                maxY = Math.max(maxY, rect.y + rect.height);\n            }\n        });\n        var shapes = this.find('Shape');\n        var hasVisible = false;\n        for (var i = 0; i < shapes.length; i++) {\n            var shape = shapes[i];\n            if (shape._isVisible(this)) {\n                hasVisible = true;\n                break;\n            }\n        }\n        if (hasVisible && minX !== undefined) {\n            selfRect = {\n                x: minX,\n                y: minY,\n                width: maxX - minX,\n                height: maxY - minY,\n            };\n        }\n        else {\n            selfRect = {\n                x: 0,\n                y: 0,\n                width: 0,\n                height: 0,\n            };\n        }\n        if (!skipTransform) {\n            return this._transformedRect(selfRect, relativeTo);\n        }\n        return selfRect;\n    }\n}\nFactory.addComponentsGetterSetter(Container, 'clip', [\n    'x',\n    'y',\n    'width',\n    'height',\n]);\nFactory.addGetterSetter(Container, 'clipX', undefined, getNumberValidator());\nFactory.addGetterSetter(Container, 'clipY', undefined, getNumberValidator());\nFactory.addGetterSetter(Container, 'clipWidth', undefined, getNumberValidator());\nFactory.addGetterSetter(Container, 'clipHeight', undefined, getNumberValidator());\nFactory.addGetterSetter(Container, 'clipFunc');\n"]},"metadata":{},"sourceType":"module"}