{"ast":null,"code":"var _jsxFileName = \"/Users/pbivrell/light/light/src/containers/other.js\",\n    _s = $RefreshSig$();\n\nimport '../App.css';\nimport '../index.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport React, { useState, useEffect } from \"react\";\nimport LightListItem from \"../components/LightListItem\";\nimport Offcanvas from \"react-bootstrap/Offcanvas\";\nimport Button from \"react-bootstrap/Button\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Other() {\n  _s();\n\n  async function getData() {\n    /*return {\n    \tlights: [\n    \t\t{\n    \t\t\tid: 0,\n    \t\t\tname: \"lower tree\",\n    \t\t\tip: \"192.168.86.146\",\n    \t\t\tpixels: 100,\n    \t\t},\n    \t\t{\n    \t\t\tid: 1,\n    \t\t\tname: \"upper tree\",\n    \t\t\tip: \"192.168.86.145\",\n    \t\t\tpixels: 100,\n    \t\t},\n    \t\t{\n    \t\t\tid: 2,\n    \t\t\tname: \"test\",\n    \t\t\tip: \"192.168.86.140\",\n    \t\t\tpixels: 50,\n    \t\t}\n    \t],\n    \tgroups: [\n    \t\t{\n    \t\t\tname: \"lower tree\",\n    \t\t\tlights: [0],\n    \t\t},\n    \t\t{\n    \t\t\tname: \"upper tree\",\n    \t\t\tlights: [1],\n    \t\t},\n    \t\t{\n    \t\t\tname: \"test\",\n    \t\t\tlights: [2],\n    \t\t},\t\n    \t\t{\n    \t\t\tname: \"tree\",\n    \t\t\tlights: [ 0, 1 ],\n    \t\t}\n    \t]\n    }*/\n  }\n\n  useEffect(() => {\n    axios.get(\"http://homeserver/lights/config.json\").then(resp => {\n      setData(resp);\n    });\n    getData().then(resp => {\n      setData(resp);\n      console.log(resp);\n    });\n  }, []);\n  const [data, setData] = useState({});\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = () => setShow(true);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"primary\",\n      onClick: handleShow,\n      children: \"Launch\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Offcanvas, {\n      show: show,\n      onHide: handleClose,\n      scroll: true,\n      backdrop: false,\n      children: [/*#__PURE__*/_jsxDEV(Offcanvas.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Offcanvas.Title, {\n          children: \"Lights\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 14\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Offcanvas.Body, {\n        children: /*#__PURE__*/_jsxDEV(ListGroup, {\n          children: data.groups ? data.groups.map(v => {\n            return /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              action: true,\n              children: /*#__PURE__*/_jsxDEV(LightListItem, {\n                name: v.name,\n                all: data.lights,\n                lights: v.lights\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 36\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 11\n            }, this);\n          }) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 8\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Other, \"ikf165w1PcI7/svd0fO+A0L23vg=\");\n\n_c = Other;\nexport default Other;\n\nvar _c;\n\n$RefreshReg$(_c, \"Other\");","map":{"version":3,"sources":["/Users/pbivrell/light/light/src/containers/other.js"],"names":["React","useState","useEffect","LightListItem","Offcanvas","Button","ListGroup","axios","Other","getData","get","then","resp","setData","console","log","data","show","setShow","handleClose","handleShow","groups","map","v","name","lights"],"mappings":";;;AAAA,OAAO,YAAP;AACA,OAAO,cAAP;AACA,OAAO,kCAAP;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;;AAEA,SAASC,KAAT,GAAiB;AAAA;;AAEhB,iBAAeC,OAAf,GAAyB;AAGxB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE;;AAEDP,EAAAA,SAAS,CAAC,MAAM;AACfK,IAAAA,KAAK,CAACG,GAAN,CAAU,sCAAV,EAAkDC,IAAlD,CAAwDC,IAAD,IAAU;AAChEC,MAAAA,OAAO,CAACD,IAAD,CAAP;AACA,KAFD;AAGAH,IAAAA,OAAO,GAAGE,IAAV,CAAgBC,IAAD,IAAU;AACxBC,MAAAA,OAAO,CAACD,IAAD,CAAP;AACGE,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACH,KAHD;AAIA,GARQ,EAQN,EARM,CAAT;AAUA,QAAM,CAACI,IAAD,EAAOH,OAAP,IAAkBZ,QAAQ,CAAC,EAAD,CAAhC;AAEA,QAAM,CAACgB,IAAD,EAAOC,OAAP,IAAkBjB,QAAQ,CAAC,KAAD,CAAhC;;AAEA,QAAMkB,WAAW,GAAG,MAAMD,OAAO,CAAC,KAAD,CAAjC;;AACE,QAAME,UAAU,GAAG,MAAMF,OAAO,CAAC,IAAD,CAAhC;;AAEA,sBACD;AAAA,4BACM,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,SAAhB;AAA0B,MAAA,OAAO,EAAEE,UAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADN,eAKM,QAAC,SAAD;AAAW,MAAA,IAAI,EAAEH,IAAjB;AAAuB,MAAA,MAAM,EAAEE,WAA/B;AAA4C,MAAA,MAAM,EAAE,IAApD;AAA0D,MAAA,QAAQ,EAAE,KAApE;AAAA,8BACE,QAAC,SAAD,CAAW,MAAX;AAAkB,QAAA,WAAW,MAA7B;AAAA,+BACG,QAAC,SAAD,CAAW,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,SAAD,CAAW,IAAX;AAAA,+BACH,QAAC,SAAD;AAAA,oBAECH,IAAI,CAACK,MAAL,GACCL,IAAI,CAACK,MAAL,CAAYC,GAAZ,CAAiBC,CAAD,IAAO;AACvB,gCACC,QAAC,SAAD,CAAW,IAAX;AAAgB,cAAA,MAAM,MAAtB;AAAA,qCACyB,QAAC,aAAD;AAAe,gBAAA,IAAI,EAAEA,CAAC,CAACC,IAAvB;AAA6B,gBAAA,GAAG,EAAER,IAAI,CAACS,MAAvC;AAA+C,gBAAA,MAAM,EAAEF,CAAC,CAACE;AAAzD;AAAA;AAAA;AAAA;AAAA;AADzB;AAAA;AAAA;AAAA;AAAA,oBADD;AAKA,WANA,CADD,gBAQE;AAVH;AAAA;AAAA;AAAA;AAAA;AADG;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YALN;AAAA,kBADC;AA4BF;;GA5FQjB,K;;KAAAA,K;AA+FT,eAAeA,KAAf","sourcesContent":["import '../App.css';\nimport '../index.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport React, { useState, useEffect } from \"react\";\nimport LightListItem from \"../components/LightListItem\";\nimport Offcanvas from \"react-bootstrap/Offcanvas\";\nimport Button from \"react-bootstrap/Button\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport axios from \"axios\";\n\nfunction Other() {\n\n\tasync function getData() {\n\n\n\t\t/*return {\n\t\t\tlights: [\n\t\t\t\t{\n\t\t\t\t\tid: 0,\n\t\t\t\t\tname: \"lower tree\",\n\t\t\t\t\tip: \"192.168.86.146\",\n\t\t\t\t\tpixels: 100,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: 1,\n\t\t\t\t\tname: \"upper tree\",\n\t\t\t\t\tip: \"192.168.86.145\",\n\t\t\t\t\tpixels: 100,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: 2,\n\t\t\t\t\tname: \"test\",\n\t\t\t\t\tip: \"192.168.86.140\",\n\t\t\t\t\tpixels: 50,\n\t\t\t\t}\n\t\t\t],\n\t\t\tgroups: [\n\t\t\t\t{\n\t\t\t\t\tname: \"lower tree\",\n\t\t\t\t\tlights: [0],\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: \"upper tree\",\n\t\t\t\t\tlights: [1],\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: \"test\",\n\t\t\t\t\tlights: [2],\n\t\t\t\t},\t\n\t\t\t\t{\n\t\t\t\t\tname: \"tree\",\n\t\t\t\t\tlights: [ 0, 1 ],\n\t\t\t\t}\n\t\t\t]\n\t\t}*/\n\t}\n\n\tuseEffect(() => {\n\t\taxios.get(\"http://homeserver/lights/config.json\").then((resp) => {\n\t\t\tsetData(resp);\n\t\t});\n\t\tgetData().then((resp) => {\n\t\t\tsetData(resp);\n\t\t    console.log(resp);\n\t\t});\n\t}, []);\n\n\tconst [data, setData] = useState({});\n\n\tconst [show, setShow] = useState(false);\n\n\tconst handleClose = () => setShow(false);\n  \tconst handleShow = () => setShow(true);\n\n \t return (\n\t\t<>\n      \t\t<Button variant=\"primary\" onClick={handleShow}>\n        \t\tLaunch\n      \t\t</Button>\n\n      \t\t<Offcanvas show={show} onHide={handleClose} scroll={true} backdrop={false}>\n        \t\t<Offcanvas.Header closeButton>\n          \t\t\t<Offcanvas.Title>Lights</Offcanvas.Title>\n        \t\t</Offcanvas.Header>\n        \t\t<Offcanvas.Body>\n\t  \t\t\t\t<ListGroup>\n\t\t\t \t\t\t\t{\n\t\t\t\t\t\t\t\tdata.groups ? \n\t\t\t\t\t\t\t\t(data.groups.map((v) => {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<ListGroup.Item action>\n                                \t\t\t<LightListItem name={v.name} all={data.lights} lights={v.lights}/>\n\t\t\t \t\t\t\t\t\t\t</ListGroup.Item>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}))\n\t\t\t\t\t\t\t\t: <></>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t</ListGroup>\n        \t\t</Offcanvas.Body>\n      \t\t</Offcanvas>\n    \t</>\n  \t);\n}\n\n\nexport default Other;\n"]},"metadata":{},"sourceType":"module"}