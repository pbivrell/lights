{"ast":null,"code":"import _regeneratorRuntime from\"/Users/pbivrell/light/light/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/pbivrell/light/light/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/pbivrell/light/light/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import Button from\"react-bootstrap/Button\";import axios from\"axios\";import Spinner from\"react-bootstrap/Spinner\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var baseURL=process.env.REACT_APP_URL;var timeout=3*1000;export default function LightDetect(_ref){var next=_ref.next;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),loading=_useState2[0],setLoading=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),failed=_useState4[0],setFailed=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),ip=_useState6[0],setIP=_useState6[1];useEffect(function(){onLoad();},[]);function onLoad(){return _onLoad.apply(this,arguments);}function _onLoad(){_onLoad=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:setLoading(true);axios.get(baseURL+\"/ip\",{timeout:timeout}).then(function(response){setIP(response.data);}).catch(function(resp){setFailed(true);});setLoading(false);case 3:case\"end\":return _context.stop();}}},_callee);}));return _onLoad.apply(this,arguments);}function onRetry(){onLoad();}return/*#__PURE__*/_jsxs(\"div\",{children:[loading?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"p\",{children:\" Getting device IP\"}),/*#__PURE__*/_jsx(Spinner,{animation:\"border\"}),/*#__PURE__*/_jsx(\"br\",{})]}):failed?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"p\",{children:\"Failed to connect with device\"}),/*#__PURE__*/_jsx(Button,{onClick:function onClick(){return onRetry();},children:\"Retry\"})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"p\",{children:\"Congradulations your lights are ready to go!\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Remeber to reconnect your device to the same network as the lights\"}),/*#__PURE__*/_jsx(Button,{onClick:function onClick(){return console.log(\"TODO\");},children:\"Light\"})]}),/*#__PURE__*/_jsx(Button,{onClick:function onClick(){next(-1);},children:\"Back\"})]});}","map":{"version":3,"sources":["/Users/pbivrell/light/light/src/components/LightIP.js"],"names":["React","useState","useEffect","Button","axios","Spinner","baseURL","process","env","REACT_APP_URL","timeout","LightDetect","next","loading","setLoading","failed","setFailed","ip","setIP","onLoad","get","then","response","data","catch","resp","onRetry","console","log"],"mappings":"mbAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,MAAP,KAAmB,wBAAnB,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,OAAP,KAAoB,yBAApB,C,6IAEA,GAAMC,CAAAA,OAAO,CAAGC,OAAO,CAACC,GAAR,CAAYC,aAA5B,CACA,GAAMC,CAAAA,OAAO,CAAG,EAAI,IAApB,CAEA,cAAe,SAASC,CAAAA,WAAT,MAA6B,IAAPC,CAAAA,IAAO,MAAPA,IAAO,CAC3C,cAA8BX,QAAQ,CAAC,KAAD,CAAtC,wCAAOY,OAAP,eAAgBC,UAAhB,eACA,eAA4Bb,QAAQ,CAAC,KAAD,CAApC,yCAAOc,MAAP,eAAeC,SAAf,eACA,eAAoBf,QAAQ,CAAC,EAAD,CAA5B,yCAAOgB,EAAP,eAAWC,KAAX,eAGAhB,SAAS,CAAC,UAAM,CACbiB,MAAM,GACR,CAFQ,CAEN,EAFM,CAAT,CAN2C,QAU5BA,CAAAA,MAV4B,4HAU3C,mIACCL,UAAU,CAAC,IAAD,CAAV,CACAV,KAAK,CAACgB,GAAN,CAAUd,OAAO,CAAG,KAApB,CAA2B,CAAEI,OAAO,CAAEA,OAAX,CAA3B,EAAgDW,IAAhD,CAAqD,SAACC,QAAD,CAAc,CAClEJ,KAAK,CAACI,QAAQ,CAACC,IAAV,CAAL,CACI,CAFL,EAEOC,KAFP,CAEa,SAACC,IAAD,CAAU,CACtBT,SAAS,CAAC,IAAD,CAAT,CACA,CAJD,EAKAF,UAAU,CAAC,KAAD,CAAV,CAPD,sDAV2C,yCAoB3C,QAASY,CAAAA,OAAT,EAAmB,CAClBP,MAAM,GACN,CAED,mBACI,uBACAN,OAAO,cACR,wCACC,yCADD,cAEC,KAAC,OAAD,EAAS,SAAS,CAAC,QAAnB,EAFD,cAIC,aAJD,GADQ,CAOLE,MAAM,cACT,wCACC,oDADD,cAEC,KAAC,MAAD,EAAQ,OAAO,CAAE,yBAAMW,CAAAA,OAAO,EAAb,EAAjB,mBAFD,GADS,cAMT,wCACC,mEADD,cAEC,yFAFD,cAGC,KAAC,MAAD,EAAQ,OAAO,CAAE,yBAAMC,CAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,CAAN,EAAjB,mBAHD,GAdC,cAqBF,KAAC,MAAD,EAAQ,OAAO,CAAE,kBAAM,CAAChB,IAAI,CAAC,CAAC,CAAF,CAAJ,CAAS,CAAjC,kBArBE,GADJ,CAyBA","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport axios from \"axios\";\nimport Spinner from \"react-bootstrap/Spinner\";\n\nconst baseURL = process.env.REACT_APP_URL;\nconst timeout = 3 * 1000;\n\nexport default function LightDetect({next}) {\n\tconst [loading, setLoading] = useState(false);\n\tconst [failed, setFailed] = useState(false);\n\tconst [ip, setIP] = useState(\"\");\n\n\n\tuseEffect(() => {\n  \t\tonLoad();\n\t}, []);\n\n\tasync function onLoad() {\n\t\tsetLoading(true);\n\t\taxios.get(baseURL + \"/ip\", { timeout: timeout}).then((response) => {\n\t\t\tsetIP(response.data);\n    \t\t}).catch((resp) => {\n\t\t\tsetFailed(true);\n\t\t});\n\t\tsetLoading(false);\n\t}\n\n\tfunction onRetry() {\n\t\tonLoad();\n\t}\n\n\treturn (\n    \t<div>\n\t\t\t{ loading ? (\n\t\t\t\t<>\n\t\t\t\t\t<p> Getting device IP</p>\n\t\t\t\t\t<Spinner animation=\"border\">\n\t\t\t\t\t</Spinner>\n\t\t\t\t\t<br/>\n\t\t\t\t</>\n\t\t\t) : failed ? (\n\t\t\t\t<>\n\t\t\t\t\t<p>Failed to connect with device</p>\n\t\t\t\t\t<Button onClick={() => onRetry()}>Retry</Button> \n\t\t\t\t</>\n\t\t\t) : (\n\t\t\t\t<>\n\t\t\t\t\t<p>Congradulations your lights are ready to go!</p>\n\t\t\t\t\t<p>Remeber to reconnect your device to the same network as the lights</p>\n\t\t\t\t\t<Button onClick={() => console.log(\"TODO\") }>Light</Button>\n\t\t\t    \t</> \n\t\t\t) \n\t\t\t}\n\t\t\t<Button onClick={() => {next(-1)}}>Back</Button>\n    \t</div>\n  \t);\n}\n"]},"metadata":{},"sourceType":"module"}