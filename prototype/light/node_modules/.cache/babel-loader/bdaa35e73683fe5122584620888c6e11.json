{"ast":null,"code":"import _assertThisInitialized from \"/Users/pbivrell/light/light/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/pbivrell/light/light/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/pbivrell/light/light/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _classCallCheck from \"/Users/pbivrell/light/light/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/pbivrell/light/light/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { Util } from './Util.js';\nimport { SceneContext, HitContext } from './Context.js';\nimport { Konva } from './Global.js';\nimport { Factory } from './Factory.js';\nimport { getNumberValidator } from './Validators.js';\n\nvar _pixelRatio;\n\nfunction getDevicePixelRatio() {\n  if (_pixelRatio) {\n    return _pixelRatio;\n  }\n\n  var canvas = Util.createCanvasElement();\n  var context = canvas.getContext('2d');\n\n  _pixelRatio = function () {\n    var devicePixelRatio = Konva._global.devicePixelRatio || 1,\n        backingStoreRatio = context.webkitBackingStorePixelRatio || context.mozBackingStorePixelRatio || context.msBackingStorePixelRatio || context.oBackingStorePixelRatio || context.backingStorePixelRatio || 1;\n    return devicePixelRatio / backingStoreRatio;\n  }();\n\n  return _pixelRatio;\n}\n\nexport var Canvas = /*#__PURE__*/function () {\n  function Canvas(config) {\n    _classCallCheck(this, Canvas);\n\n    this.pixelRatio = 1;\n    this.width = 0;\n    this.height = 0;\n    this.isCache = false;\n    var conf = config || {};\n    var pixelRatio = conf.pixelRatio || Konva.pixelRatio || getDevicePixelRatio();\n    this.pixelRatio = pixelRatio;\n    this._canvas = Util.createCanvasElement();\n    this._canvas.style.padding = '0';\n    this._canvas.style.margin = '0';\n    this._canvas.style.border = '0';\n    this._canvas.style.background = 'transparent';\n    this._canvas.style.position = 'absolute';\n    this._canvas.style.top = '0';\n    this._canvas.style.left = '0';\n  }\n\n  _createClass(Canvas, [{\n    key: \"getContext\",\n    value: function getContext() {\n      return this.context;\n    }\n  }, {\n    key: \"getPixelRatio\",\n    value: function getPixelRatio() {\n      return this.pixelRatio;\n    }\n  }, {\n    key: \"setPixelRatio\",\n    value: function setPixelRatio(pixelRatio) {\n      var previousRatio = this.pixelRatio;\n      this.pixelRatio = pixelRatio;\n      this.setSize(this.getWidth() / previousRatio, this.getHeight() / previousRatio);\n    }\n  }, {\n    key: \"setWidth\",\n    value: function setWidth(width) {\n      this.width = this._canvas.width = width * this.pixelRatio;\n      this._canvas.style.width = width + 'px';\n\n      var pixelRatio = this.pixelRatio,\n          _context = this.getContext()._context;\n\n      _context.scale(pixelRatio, pixelRatio);\n    }\n  }, {\n    key: \"setHeight\",\n    value: function setHeight(height) {\n      this.height = this._canvas.height = height * this.pixelRatio;\n      this._canvas.style.height = height + 'px';\n\n      var pixelRatio = this.pixelRatio,\n          _context = this.getContext()._context;\n\n      _context.scale(pixelRatio, pixelRatio);\n    }\n  }, {\n    key: \"getWidth\",\n    value: function getWidth() {\n      return this.width;\n    }\n  }, {\n    key: \"getHeight\",\n    value: function getHeight() {\n      return this.height;\n    }\n  }, {\n    key: \"setSize\",\n    value: function setSize(width, height) {\n      this.setWidth(width || 0);\n      this.setHeight(height || 0);\n    }\n  }, {\n    key: \"toDataURL\",\n    value: function toDataURL(mimeType, quality) {\n      try {\n        return this._canvas.toDataURL(mimeType, quality);\n      } catch (e) {\n        try {\n          return this._canvas.toDataURL();\n        } catch (err) {\n          Util.error('Unable to get data URL. ' + err.message + ' For more info read https://konvajs.org/docs/posts/Tainted_Canvas.html.');\n          return '';\n        }\n      }\n    }\n  }]);\n\n  return Canvas;\n}();\nFactory.addGetterSetter(Canvas, 'pixelRatio', undefined, getNumberValidator());\nexport var SceneCanvas = /*#__PURE__*/function (_Canvas) {\n  _inherits(SceneCanvas, _Canvas);\n\n  var _super = _createSuper(SceneCanvas);\n\n  function SceneCanvas() {\n    var _this;\n\n    var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n      width: 0,\n      height: 0\n    };\n\n    _classCallCheck(this, SceneCanvas);\n\n    _this = _super.call(this, config);\n    _this.context = new SceneContext(_assertThisInitialized(_this));\n\n    _this.setSize(config.width, config.height);\n\n    return _this;\n  }\n\n  return SceneCanvas;\n}(Canvas);\nexport var HitCanvas = /*#__PURE__*/function (_Canvas2) {\n  _inherits(HitCanvas, _Canvas2);\n\n  var _super2 = _createSuper(HitCanvas);\n\n  function HitCanvas() {\n    var _this2;\n\n    var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n      width: 0,\n      height: 0\n    };\n\n    _classCallCheck(this, HitCanvas);\n\n    _this2 = _super2.call(this, config);\n    _this2.hitCanvas = true;\n    _this2.context = new HitContext(_assertThisInitialized(_this2));\n\n    _this2.setSize(config.width, config.height);\n\n    return _this2;\n  }\n\n  return HitCanvas;\n}(Canvas);","map":{"version":3,"sources":["/Users/pbivrell/light/light/node_modules/konva/lib/Canvas.js"],"names":["Util","SceneContext","HitContext","Konva","Factory","getNumberValidator","_pixelRatio","getDevicePixelRatio","canvas","createCanvasElement","context","getContext","devicePixelRatio","_global","backingStoreRatio","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","backingStorePixelRatio","Canvas","config","pixelRatio","width","height","isCache","conf","_canvas","style","padding","margin","border","background","position","top","left","previousRatio","setSize","getWidth","getHeight","_context","scale","setWidth","setHeight","mimeType","quality","toDataURL","e","err","error","message","addGetterSetter","undefined","SceneCanvas","HitCanvas","hitCanvas"],"mappings":"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","sourcesContent":["import { Util } from './Util.js';\nimport { SceneContext, HitContext } from './Context.js';\nimport { Konva } from './Global.js';\nimport { Factory } from './Factory.js';\nimport { getNumberValidator } from './Validators.js';\nvar _pixelRatio;\nfunction getDevicePixelRatio() {\n    if (_pixelRatio) {\n        return _pixelRatio;\n    }\n    var canvas = Util.createCanvasElement();\n    var context = canvas.getContext('2d');\n    _pixelRatio = (function () {\n        var devicePixelRatio = Konva._global.devicePixelRatio || 1, backingStoreRatio = context.webkitBackingStorePixelRatio ||\n            context.mozBackingStorePixelRatio ||\n            context.msBackingStorePixelRatio ||\n            context.oBackingStorePixelRatio ||\n            context.backingStorePixelRatio ||\n            1;\n        return devicePixelRatio / backingStoreRatio;\n    })();\n    return _pixelRatio;\n}\nexport class Canvas {\n    constructor(config) {\n        this.pixelRatio = 1;\n        this.width = 0;\n        this.height = 0;\n        this.isCache = false;\n        var conf = config || {};\n        var pixelRatio = conf.pixelRatio || Konva.pixelRatio || getDevicePixelRatio();\n        this.pixelRatio = pixelRatio;\n        this._canvas = Util.createCanvasElement();\n        this._canvas.style.padding = '0';\n        this._canvas.style.margin = '0';\n        this._canvas.style.border = '0';\n        this._canvas.style.background = 'transparent';\n        this._canvas.style.position = 'absolute';\n        this._canvas.style.top = '0';\n        this._canvas.style.left = '0';\n    }\n    getContext() {\n        return this.context;\n    }\n    getPixelRatio() {\n        return this.pixelRatio;\n    }\n    setPixelRatio(pixelRatio) {\n        var previousRatio = this.pixelRatio;\n        this.pixelRatio = pixelRatio;\n        this.setSize(this.getWidth() / previousRatio, this.getHeight() / previousRatio);\n    }\n    setWidth(width) {\n        this.width = this._canvas.width = width * this.pixelRatio;\n        this._canvas.style.width = width + 'px';\n        var pixelRatio = this.pixelRatio, _context = this.getContext()._context;\n        _context.scale(pixelRatio, pixelRatio);\n    }\n    setHeight(height) {\n        this.height = this._canvas.height = height * this.pixelRatio;\n        this._canvas.style.height = height + 'px';\n        var pixelRatio = this.pixelRatio, _context = this.getContext()._context;\n        _context.scale(pixelRatio, pixelRatio);\n    }\n    getWidth() {\n        return this.width;\n    }\n    getHeight() {\n        return this.height;\n    }\n    setSize(width, height) {\n        this.setWidth(width || 0);\n        this.setHeight(height || 0);\n    }\n    toDataURL(mimeType, quality) {\n        try {\n            return this._canvas.toDataURL(mimeType, quality);\n        }\n        catch (e) {\n            try {\n                return this._canvas.toDataURL();\n            }\n            catch (err) {\n                Util.error('Unable to get data URL. ' +\n                    err.message +\n                    ' For more info read https://konvajs.org/docs/posts/Tainted_Canvas.html.');\n                return '';\n            }\n        }\n    }\n}\nFactory.addGetterSetter(Canvas, 'pixelRatio', undefined, getNumberValidator());\nexport class SceneCanvas extends Canvas {\n    constructor(config = { width: 0, height: 0 }) {\n        super(config);\n        this.context = new SceneContext(this);\n        this.setSize(config.width, config.height);\n    }\n}\nexport class HitCanvas extends Canvas {\n    constructor(config = { width: 0, height: 0 }) {\n        super(config);\n        this.hitCanvas = true;\n        this.context = new HitContext(this);\n        this.setSize(config.width, config.height);\n    }\n}\n"]},"metadata":{},"sourceType":"module"}