{"ast":null,"code":"var _jsxFileName = \"/Users/pbivrell/light/light/src/containers/lightsettings.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport { useFormFields, displayError } from \"../lib/hooks\";\nimport axios from \"axios\";\nimport './lightsettings.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction LightSettings(_ref) {\n  _s();\n\n  let {\n    light\n  } = _ref;\n  const URL = process.env.REACT_APP_API_URL + \"/user\";\n  const [field, handleFieldChange] = useFormFields({\n    Alias: light.Alias,\n    ID: light.ID,\n    Status: light.Status,\n    Updated: light.Updated,\n    PatternID: light.PatternID,\n    Count: light.Count,\n    Changed: light.Changed,\n    count: light.Count,\n    id: light.ID,\n    alias: light.Alias\n  });\n  const [loading, setLoading] = useState(false);\n\n  function validateConfirmationForm() {\n    return field.count > 0 && field.alias.length > 0;\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    setLoading(true);\n    axios.post(URL, JSON.stringify(field), {\n      withCredentials: true\n    }).then(resp => {}).catch(e => {\n      displayError(e);\n      setLoading(false);\n    });\n  }\n\n  function renderForm() {\n    return /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      className: \"SettingForm\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: [\"ID: \", light.ID]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 44\n      }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Alias:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        autoFocus: true,\n        className: \"SettingsFormInput\",\n        type: \"text\",\n        value: light.Alias,\n        onChange: handleFieldChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Bulbs:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        autoFocus: true,\n        className: \"SettingsFormInput\",\n        type: \"number\",\n        value: light.Count,\n        onChange: handleFieldChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n        children: new Date(light.Updated).toLocaleDateString() + \" \" + new Date(light.Updated).toLocaleTimeString()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        block: true,\n        size: \"sm\",\n        type: \"submit\",\n        variant: \"success\",\n        disabled: !validateConfirmationForm() || loading,\n        children: !loading ? \"Update\" : \"loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 4\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Signup\",\n    children: renderForm()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 3\n  }, this);\n}\n\n_s(LightSettings, \"s/G04yy+BLdrbZJQa4i4pM+Vy90=\", false, function () {\n  return [useFormFields];\n});\n\n_c = LightSettings;\nexport default LightSettings;\n\nvar _c;\n\n$RefreshReg$(_c, \"LightSettings\");","map":{"version":3,"sources":["/Users/pbivrell/light/light/src/containers/lightsettings.js"],"names":["React","useState","Form","Button","useFormFields","displayError","axios","LightSettings","light","URL","process","env","REACT_APP_API_URL","field","handleFieldChange","Alias","ID","Status","Updated","PatternID","Count","Changed","count","id","alias","loading","setLoading","validateConfirmationForm","length","handleSubmit","event","preventDefault","post","JSON","stringify","withCredentials","then","resp","catch","e","renderForm","Date","toLocaleDateString","toLocaleTimeString"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport { useFormFields, displayError } from \"../lib/hooks\";\nimport axios from \"axios\";\nimport './lightsettings.css';\n\nfunction LightSettings({light}) {\n\n\tconst URL = process.env.REACT_APP_API_URL + \"/user\";\n\n\tconst [field, handleFieldChange] = useFormFields({\n\t\tAlias: light.Alias,\n\t\tID: light.ID,\n\t\tStatus: light.Status,\n\t\tUpdated: light.Updated,\n\t\tPatternID: light.PatternID,\n\t\tCount: light.Count,\n\t\tChanged:light.Changed,\n\n\t\tcount: light.Count,\n\t\tid: light.ID,\n\t\talias: light.Alias,\n  \t});\n\n\t\n\n\n\tconst [loading, setLoading] = useState(false);\n\n\tfunction validateConfirmationForm() {\n\t\treturn (\n      \t\t\tfield.count > 0 &&\n \t\t\tfield.alias.length > 0     \t\t\t\n    \t\t);\n\t}\n\n\tfunction handleSubmit(event) {\n\n\t\tevent.preventDefault();\n\n\t\tsetLoading(true);\n\n\t\taxios.post(URL, JSON.stringify(field) ,{\n    \t\t\twithCredentials: true \n  \t\t}).then((resp) => {\n\t\t\n\t\t}).catch((e) => {\n\t\t\tdisplayError(e);\n\t\t\tsetLoading(false);\n\t\t});\n\t}\n\n\tfunction renderForm() {\n\t\treturn (\n\t\t\t<Form onSubmit={handleSubmit} className=\"SettingForm\">\n\t\t\t\t<Form.Label>ID: {light.ID}</Form.Label><br/>\n\t\t\t\t<Form.Label>Alias:</Form.Label>\n\t\t\t\t<Form.Control\n\t\t\t\t\tautoFocus\n\t\t\t\t\tclassName=\"SettingsFormInput\"\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tvalue={light.Alias}\n\t\t\t\t\tonChange={handleFieldChange}\n\t\t\t\t/>\n\t\t\t\t<Form.Label>Bulbs:</Form.Label>\n\t\t\t\t<Form.Control\n\t\t\t\t\tautoFocus\n\t\t\t\t\tclassName=\"SettingsFormInput\"\n\t\t\t\t\ttype=\"number\"\n\t\t\t\t\tvalue={light.Count}\n\t\t\t\t\tonChange={handleFieldChange}\n\t\t\t\t/>\n\t\t\t\t<Form.Label>{new Date(light.Updated).toLocaleDateString() +\" \" +  new Date(light.Updated).toLocaleTimeString()}</Form.Label>\n\t\t\t\t<br/>\n\t\t\t\t<Button\n\t\t\t\t\tblock\n\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\tvariant=\"success\"\n\t\t\t\t        disabled={!validateConfirmationForm() || loading}\n\n\t\t\t\t>\n\t\t\t\t\t{ !loading ? \"Update\" : \"loading...\"}\n\t\t\t\t</Button>\n\t\t\t</Form>\n\t\t);\n\t}\n\n\treturn (\n\t\t<div className=\"Signup\">\n\t\t\t{renderForm()}\n\t\t</div>\n\t);\n}\n\nexport default LightSettings;\n"]},"metadata":{},"sourceType":"module"}