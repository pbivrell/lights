[{"/Users/pbivrell/light/light/src/index.js":"1","/Users/pbivrell/light/light/src/App.js":"2","/Users/pbivrell/light/light/src/reportWebVitals.js":"3","/Users/pbivrell/light/light/src/components/LightDetect.js":"4","/Users/pbivrell/light/light/src/components/LightIP.js":"5","/Users/pbivrell/light/light/src/containers/setup.js":"6","/Users/pbivrell/light/light/src/containers/light.js":"7","/Users/pbivrell/light/light/src/containers/programming.js":"8","/Users/pbivrell/light/light/src/components/Bulb.js":"9","/Users/pbivrell/light/light/src/containers/run.js":"10","/Users/pbivrell/light/light/src/containers/control.js":"11","/Users/pbivrell/light/light/src/components/LightListItem.js":"12","/Users/pbivrell/light/light/src/containers/other.js":"13","/Users/pbivrell/light/light/src/components/Picker.js":"14","/Users/pbivrell/light/light/src/components/Styler.js":"15","/Users/pbivrell/light/light/src/containers/signup.js":"16","/Users/pbivrell/light/light/src/lib/hooks.js":"17","/Users/pbivrell/light/light/src/containers/login.js":"18","/Users/pbivrell/light/light/src/containers/home.js":"19","/Users/pbivrell/light/light/src/components/Picker2.js":"20"},{"size":1665,"mtime":1643210322393,"results":"21","hashOfConfig":"22"},{"size":1213,"mtime":1637045878195,"results":"23","hashOfConfig":"22"},{"size":362,"mtime":1636783278588,"results":"24","hashOfConfig":"22"},{"size":2017,"mtime":1643010454840,"results":"25","hashOfConfig":"22"},{"size":1309,"mtime":1638933096168,"results":"26","hashOfConfig":"22"},{"size":1201,"mtime":1642887433738,"results":"27","hashOfConfig":"22"},{"size":2829,"mtime":1642572398176,"results":"28","hashOfConfig":"22"},{"size":2135,"mtime":1642127660539,"results":"29","hashOfConfig":"22"},{"size":482,"mtime":1643092500460,"results":"30","hashOfConfig":"22"},{"size":569,"mtime":1639546328292,"results":"31","hashOfConfig":"22"},{"size":997,"mtime":1642127674535,"results":"32","hashOfConfig":"22"},{"size":1350,"mtime":1643092841694,"results":"33","hashOfConfig":"22"},{"size":3753,"mtime":1642127653410,"results":"34","hashOfConfig":"22"},{"size":3032,"mtime":1642885655997,"results":"35","hashOfConfig":"22"},{"size":1940,"mtime":1640284916649,"results":"36","hashOfConfig":"22"},{"size":2445,"mtime":1642641691262,"results":"37","hashOfConfig":"22"},{"size":341,"mtime":1642886958502,"results":"38","hashOfConfig":"22"},{"size":1675,"mtime":1642807072796,"results":"39","hashOfConfig":"22"},{"size":4023,"mtime":1643208510333,"results":"40","hashOfConfig":"22"},{"size":4229,"mtime":1643435875460,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},"dk8v4l",{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"49"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"49"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"49"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"49"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"49"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"49"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"49"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95"},"/Users/pbivrell/light/light/src/index.js",["96"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Setup from './containers/setup.js';\nimport Light from './containers/light.js';\nimport Programming from './containers/programming.js';\nimport Run from './containers/run.js';\nimport Control from './containers/control.js';\nimport Home from './containers/home.js';\nimport Other from './containers/other.js';\nimport Signup from './containers/signup.js';\nimport Login from './containers/login.js';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Route, Switch } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <Switch>\n      \t<Route exact path=\"/dev\">\n          <Programming />\n      \t</Route>\n      \t<Route exact path=\"/run\">\n          <Run />\n      \t</Route>\n      \t<Route exact path=\"/setup\">\n          <Setup />\n      \t</Route>\n      \t<Route exact path=\"/lights\">\n          <Light/>\n      \t</Route>\n      \t<Route exact path=\"/control\">\n          <Control />\n      \t</Route>\n      \t<Route exact path=\"/signup\">\n          <Signup />\n      \t</Route>\n      \t<Route exact path=\"/login\">\n          <Login />\n      \t</Route>\n      \t<Route exact path=\"/\">\n          <Home/>\n      \t</Route>\n      \t<Route exact path=\"/home\">\n          <Home/>\n      \t</Route>\n      </Switch>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","/Users/pbivrell/light/light/src/App.js",["97"],"/Users/pbivrell/light/light/src/reportWebVitals.js",[],["98","99"],"/Users/pbivrell/light/light/src/components/LightDetect.js",["100"],"import React, { useState, useEffect } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport axios from \"axios\";\nimport Select from 'react-select'\n\n\nconst baseURL = process.env.REACT_APP_URL;\nconst timeout = 10 * 1000;\n\nexport default function LightDetect({next}) {\n\tconst [loading, setLoading] = useState(true);\n\tconst [failed, setFailed] = useState(false);\n\tconst [networks, setNetworks] = useState([]);\n\tconst [ssid, setSSID] = useState(\"\");\n\tconst [password, setPassword] = useState(\"\");\n\n\n\tuseEffect(() => {\n  \t\tonLoad();\n\t}, []);\n\n\tasync function onLoad() {\n\t\tsetLoading(true);\n\t\taxios.get(baseURL + \"/networks\", { timeout: timeout}).then((response) => {\n\t\t\tsetNetworks(response.data);\n\t\t\tsetLoading(false);\n    \t\t}).catch((resp) => {\n\t\t\tsetFailed(true);\n\t\t\tsetLoading(false);\n\t\t});\n\t}\n\n\tasync function onSubmit() {\n\t\tsetLoading(true);\n\n\t\taxios.get(baseURL + `/login?ssid=${ssid}&password=${password}`, { timeout: timeout}).then((response) => {\n\t\t\tnext();\n    \t\t}).catch((resp) => {\n\t\t\tsetFailed(true);\n\t\t});\n\t\tsetLoading(false);\n\n\t}\n\n\tfunction onRetry() {\n\t\tsetFailed(false);\n\t\tonLoad();\n\t}\n\n\treturn (\n    \t<div>\n\t\t\t{ loading ? (\n\t\t\t\t<>\n\t\t\t\t\t<p> Searching for lights </p>\n\t\t\t\t\t<Spinner animation=\"border\">\n\t\t\t\t\t</Spinner>\n\t\t\t\t\t<br/>\n\t\t\t\t</>\n\t\t\t) : failed ? (\n\t\t\t\t<>\n\t\t\t\t\t<p>Failed to setup new lights</p>\n\t\t\t\t\t<Button onClick={() => onRetry()}>Retry</Button> \n\t\t\t\t</>\n\t\t\t) : (\n\t\t\t\t<>\n\t\t\t\t\t<p>Found new lights</p>\n\t\t\t\t\t<p>Select Wifi you would like to connect them to</p>\n\t\t\t\t\t<Select onChange={(selected) => setSSID(selected.value)} searchable options={networks.map(function(d){\n         \t\t\t\t\treturn ({ \"value\": d, \"label\": d })\n       \t\t\t\t\t})}/>\n\t\t\t\t\t<label>Password: </label> <input type=\"password\" name=\"name\" onChange={(e) => setPassword(e.target.value)}/><br/>\n\t\t\t\t\t<Button onClick={onSubmit}>Submit</Button>\t\n\t\t\t    \t</> \n\t\t\t) \n\t\t\t}\n\t\t\t<Button onClick={() => {next(-1)}}>Back</Button>\n    \t</div>\n  \t);\n}\n","/Users/pbivrell/light/light/src/components/LightIP.js",["101"],"import React, { useState, useEffect } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport axios from \"axios\";\nimport Spinner from \"react-bootstrap/Spinner\";\n\nconst baseURL = process.env.REACT_APP_URL;\nconst timeout = 3 * 1000;\n\nexport default function LightDetect({next}) {\n\tconst [loading, setLoading] = useState(false);\n\tconst [failed, setFailed] = useState(false);\n\tconst [ip, setIP] = useState(\"\");\n\n\n\tuseEffect(() => {\n  \t\tonLoad();\n\t}, []);\n\n\tasync function onLoad() {\n\t\tsetLoading(true);\n\t\taxios.get(baseURL + \"/ip\", { timeout: timeout}).then((response) => {\n\t\t\tsetIP(response.data);\n    \t\t}).catch((resp) => {\n\t\t\tsetFailed(true);\n\t\t});\n\t\tsetLoading(false);\n\t}\n\n\tfunction onRetry() {\n\t\tonLoad();\n\t}\n\n\treturn (\n    \t<div>\n\t\t\t{ loading ? (\n\t\t\t\t<>\n\t\t\t\t\t<p> Getting device IP</p>\n\t\t\t\t\t<Spinner animation=\"border\">\n\t\t\t\t\t</Spinner>\n\t\t\t\t\t<br/>\n\t\t\t\t</>\n\t\t\t) : failed ? (\n\t\t\t\t<>\n\t\t\t\t\t<p>Failed to connect with device</p>\n\t\t\t\t\t<Button onClick={() => onRetry()}>Retry</Button> \n\t\t\t\t</>\n\t\t\t) : (\n\t\t\t\t<>\n\t\t\t\t\t<p>Congradulations your lights are ready to go!</p>\n\t\t\t\t\t<p>Remeber to reconnect your device to the same network as the lights</p>\n\t\t\t\t\t<Button onClick={() => console.log(\"TODO\") }>Light</Button>\n\t\t\t    \t</> \n\t\t\t) \n\t\t\t}\n\t\t\t<Button onClick={() => {next(-1)}}>Back</Button>\n    \t</div>\n  \t);\n}\n","/Users/pbivrell/light/light/src/containers/setup.js",[],"/Users/pbivrell/light/light/src/containers/light.js",["102","103","104","105","106","107"],"import '../App.css';\nimport Button from \"react-bootstrap/Button\";\nimport React, { useState } from \"react\";\nimport LightsDetect from \"../components/LightDetect\";\nimport LightsIP from \"../components/LightIP\";\nimport { RgbColorPicker } from \"react-colorful\";\nimport axios from \"axios\";\nimport Spinner from \"react-bootstrap/Spinner\";\n\nfunction Light () {\n\n  \tconst [color, setColor] = useState({ r: 200, g: 150, b: 35 });\n\tconst [ip, setIP] = useState({ ip: \"192.168.86.162\", pixels: 50 });\n\n\tvar last = Date.now();\n\tfunction onColorChange(color) {\n\n\t\tlet now = Date.now();\n\t\tconsole.log(color);\n\t\tif (now - last < 100) {\n\t\t\tconsole.log(\"ignoring time\");\n\t\t\treturn;\n\t\t}\n\t\tlast = now;\n\t\tsetColor(color);\n\n\t\tlet data = generateBinary(color, ip.pixels);\n                let blob = new Blob([data], {type: \"application/octet-stream\"});\n\n\t\tlet bodyFormData = new FormData();\n\n                bodyFormData.append(\"file\", blob, \"dummy.bin\");\n\t\t\n\t\tconsole.log(`http://${ip}/upload`);\n\n                axios({\n                \tmethod: \"post\",\n                \turl: `http://${ip.ip}/upload`,\n                \tdata: bodyFormData,\n                \theaders: { \"Content-Type\": \"multipart/form-data\" },\n                })\n                .then(function (response) {\n                \t//handle success\n                \tconsole.log(response);\n                })\n                .catch(function (response) {\n                \t//handle error\n                \tconsole.log(response);\n                });\n\n\t\t//axios.get(`http://${ip}/color?r=${color.r}&g=${color.g}&b=${color.b}`).catch((resp) => {\n\t\t//\tconsole.log(\"TODO\")\n                //});\n\t}\n\t\n\t\n\tfunction generateBinary(color, pixels) {\n\t\t\n\t\tlet data = new Uint8Array((2 + pixels) * 8);\n\t\tlet bytes = getInt64Bytes(pixels);\n\n\t\tlet count = (bytes[bytes.length-2] << 8) | bytes[bytes.length-1];\n\t\t\n\t\tdata[0] = 0x3;\n\t\tdata[1] = bytes[bytes.length-1];\n\t\tdata[2] = bytes[bytes.length-2];\n\n\t\tfor (let i = 0; i < pixels; i++) {\n\t\t\tlet bytes = getInt64Bytes(i);\n\t\t \tdata[(i + 1) * 8] = 0x1;\n\t\t\tdata[(i + 1) * 8 + 1] = color.r;\n\t\t\tdata[(i + 1) * 8 + 2] = color.g;\n\t\t\tdata[(i + 1) * 8 + 3] = color.b;\n\t\t\tdata[(i + 1) * 8 + 4] = bytes[bytes.length-1];\n\t\t\tdata[(i + 1) * 8 + 5] = bytes[bytes.length-2];\n\t\t}\n\n\t\tdata[8 + (pixels * 8)] = 0x2;\n\t\tdata[8 + (pixels * 8) + 1] = 200;\n\t\tdata[8 + (pixels * 8) + 2] = 0;\n\t\tdata[8 + (pixels * 8) + 3] = 0;\n\t\tdata[8 + (pixels * 8) + 4] = 0;\n\n\n\t\tconsole.log(data);\n\t\treturn data;\n\n\t}\n\n\tfunction getInt64Bytes(x) {\n  \t\tlet y= Math.floor(x/2**32);\n  \t\treturn [y,(y<<8),(y<<16),(y<<24), x,(x<<8),(x<<16),(x<<24)].map(z=> z>>>24)\n\t}\n\n\n\n\n\n\treturn (\n\t<div className=\"App\">\n\t\t<header className=\"App-header\">\n            <RgbColorPicker color={color} onChange={onColorChange} />\n            <p>{ color.r}, {color.g}, {color.b}</p>\n\t\t</header>\n\t</div>\n  \t);\n}\n\n\nexport default Light;\n","/Users/pbivrell/light/light/src/containers/programming.js",["108"],"import '../App.css';\nimport React, { useState, useEffect } from \"react\";\nimport { Stage, Layer } from 'react-konva';\nimport Bulb from \"../components/Bulb.js\"\n\nfunction Programming () {\n\n\tfunction handleFiles(e) {\n\t\tvar fr=new FileReader();\n\t\tfr.onload=function(){\n\t\t\tprocessSequence(fr.result);\n\t\t}\n\t\t\n\t\tif (e.target.files.length > 0) {\n\t\t\tfr.readAsArrayBuffer(e.target.files[0]);\n\t\t}\n\t}\n\n\n\tfunction processSequence(seq) {\n\t\t\n\t\tconsole.log(seq);\n\n\t\tvar bytes = new Uint8Array(seq);\n\n\t\tconsole.log(bytes);\n\n\t\tlet nextColors = [];\n\t\t\n\t\tlet delay = 0;\n\t\t\t\n\t\tfor (let i=0; i<bytes.length; i+=8) {\n\t\t\tif (bytes[i] === 0x3 && i === 0) {\n\t\t\t\tlet count = (bytes[i+2] << 8) | bytes[i+1];\n\t\t\t\tconsole.log(\"Count\", count);\n\t\t\t\tfor (let j = 0; j < count; j++) {\n\t\t\t\t\tnextColors.push({color: `rgb(0,0,0)`})\n\t\t\t\t}\n\t\t\t\t\n\t\t\t} else if (bytes[i] === 0x1) {\n\t\t\t\tlet r = bytes[i+1];\n\t\t\t\tlet g = bytes[i+2];\n\t\t\t\tlet b =  bytes[i+3];\n\t\t\t\tlet index = (bytes[i+5] << 8) | bytes[i+4];\n\t\t\t\tconsole.log(\"color\", r,g,b, index);\n\t\t\t\tnextColors[index] = ({color: `rgb(${r},${g},${b})`})\n\t\t\t}else if (bytes[i] === 0x2) {\n\t\t\t\tdelay += (bytes[i+4] << 24) | (bytes[i+3] << 16) | (bytes[i+2] << 8) | bytes[i+1];\n\t\t\t\tconsole.log(\"delay\", delay);\n\t\t\t\tsetTimeout((lights) => {\n\t\t\t\t\tconsole.log(\"Changed lights\");\n\t\t\t\t\tsetLights(lights);\n\t\t\t\t}, delay,[...nextColors] )\n\t\t\t}\n        }\n        setTimeout(() => {\n            processSequence(seq)\n        }, delay)\n\t}\n\n\tconst [lights, setLights] = useState([]);\n\tconst rows = Math.floor((window.innerWidth - 200) / 170);\n\tconst radius = 50;\n\tconst xOffset = 120;\n\tconst yOffset = 120;\n\n\treturn (\n\t<div className=\"App\">\n\t\t<input type=\"file\" name=\"file\" onChange={handleFiles} />\n\t\t<header className=\"App-header\">\n\t\t\t<Stage width={window.innerWidth} height={window.innerHeight}>\n      \t\t\t\t<Layer>\n\t\t\t\t\t{\n\t\t\t\t\t\tlights.map( function(elem, idx) {\n\t\t\t\t\t\t\tconsole.log(elem, idx);\n\t\t\t\t\t\t\treturn <Bulb x={xOffset + (xOffset * (idx % rows))} y={yOffset + (yOffset * Math.floor(idx / rows))} color={elem.color} radius={radius}/>\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n      \t\t\t\t</Layer>\n    \t\t\t</Stage>\n\t\t</header>\n\t</div>\n  \t);\n}\n\n\nexport default Programming;\n","/Users/pbivrell/light/light/src/components/Bulb.js",[],"/Users/pbivrell/light/light/src/containers/run.js",["109","110"],"import '../App.css';\nimport React, { useState, useEffect } from \"react\";\n\nfunction Run() {\n\n\t//const [ip, setIP] = useState(\"192.168.86.136\");\n\t//const [ip, setIP] = useState(\"192.168.86.144\");\n\tconst [ip, setIP] = useState(\"192.168.86.152\");\n\n\treturn (\n\t<div className=\"App\">\n\t\t<header className=\"App-header\">\n\t\t\t<form method='POST' enctype='multipart/form-data' action={\"http://\" + ip + \"/upload\"}>\n     \t\t\t\t<input type=\"file\" id=\"myFile\" name=\"filename\"></input>\n     \t\t\t\t<input type=\"submit\"></input>\n   \t\t\t</form>\n\t\t</header>\n\t</div>\n  \t);\n}\n\n\nexport default Run;\n","/Users/pbivrell/light/light/src/containers/control.js",["111","112"],"import '../App.css';\nimport React, { useState, useEffect } from \"react\";\nimport LightListItem from \"../components/LightListItem\";\n\nfunction Control() {\n\n\tconst sampleData = {\n\t\tlights: [\n\t\t\t{\n\t\t\t\tid: 0,\n\t\t\t\tname: \"lower tree\",\n\t\t\t\tip: \"192.168.86.136\",\n\t\t\t\tpixels: 100,\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: 1,\n\t\t\t\tname: \"upper tree\",\n\t\t\t\tip: \"192.168.86.137\",\n\t\t\t\tpixels: 100,\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: 2,\n\t\t\t\tname: \"test\",\n\t\t\t\tip: \"192.168.86.140\",\n\t\t\t\tpixels: 50,\n\t\t\t}\n\t\t],\n\t\tgroups: [\n\t\t\t{\n\t\t\t\tname: \"lower tree\",\n\t\t\t\tlights: [0],\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"upper tree\",\n\t\t\t\tlights: [1],\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"test\",\n\t\t\t\tlights: [2],\n\t\t\t},\t\n\t\t\t{\n\t\t\t\tname: \"tree\",\n\t\t\t\tlights: [ 0, 1 ],\n\t\t\t}\n\t\t]\n\t}\n\n\treturn (\n\t<div className=\"App\">\n\t\t<header className=\"App-header\">\n\t\t\t<ul>\n\t\t\t\t{\n\t\t\t\t\tsampleData.groups.map((v,i) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<LightListItem name={v.name} all={sampleData.lights} lights={v.lights}/>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t);\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t</ul>\n\t\t</header>\n\t</div>\n  \t);\n}\n\n\nexport default Control;\n","/Users/pbivrell/light/light/src/components/LightListItem.js",["113"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nexport default function LightDetect({name, all, lights}) {\n\n\tconst [clicked, setClicked] = useState(false);\n\t\n\tfunction onToggle(e) {\n\t\tlights.forEach((v) => {\n\t\t\taxios.get(`http://${all[v].ip}/toggle`, {timeout: 1000}).catch((resp) => {\n\t\t\t\tconsole.log(\"failed to toggle\");\n\t\t\t});\n\t\t});\n\n\t\t// After 1/2 a second check if the lights are on\n\t\tsetTimeout(() => {\n\t\t\tsetClicked(!clicked);\n\t\t}, 500);\n\t}\n\n\n\tuseEffect(() => {\n\t\tif (lights.length === 1) {\n\t\t\taxios.get(`http://${all[lights[0]].ip}/status`, {timeout: 1000})\n\t\t\t.then((resp) => {\n\t\t\t\tconsole.log(resp.data.status);\n\t\t\t\tif (resp.data.status) {\n\t\t\t\t\tsetStatus(\"active\");\n\t\t\t\t}else {\n\t\t\t\t\tsetStatus(\"inactive\");\n\t\t\t\t}\n\t\t\t}).catch(() => {\n\t\t\t\tsetStatus(\"offline\");\n\t\t\t});\n\t\t}\n\t}, [clicked])\n\n\n\tconst [Status, setStatus] = useState(lights.length === 1 ? \"loading\" : \"\");\n\n\treturn (\n    \t<div key={name} style={ Status === \"offline\" ? {color: \"grey\"} : {}}>\n\t\t<input\n          \t\ttype='checkbox'\n\t\t\tonClick={(e) => onToggle(e)}\n\t\t\tdefaultChecked={Status === \"active\"}\n\t\t\tstyle={{float: \"right\", width: \"100px\"}}\n        \t/>\n\t\t<span>Name: </span><span>{name}</span><br/>\n\t\t<span>Devices(s): </span><span>{ lights.length === 1 ? all[lights[0]].ip : lights.map((x) => all[x].name ).join(\",\") }</span>\n    \t</div>\n  \t);\n}\n","/Users/pbivrell/light/light/src/containers/other.js",["114","115","116","117"],"import '../App.css';\nimport '../index.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport React, { useState, useEffect } from \"react\";\nimport LightListItem from \"../components/LightListItem\";\nimport Picker from \"../components/Picker\";\nimport Styler from \"../components/Styler\";\nimport Offcanvas from \"react-bootstrap/Offcanvas\";\nimport Button from \"react-bootstrap/Button\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport axios from \"axios\";\nimport FileBrowser from 'react-keyed-file-browser'\nimport '../../node_modules/react-keyed-file-browser/dist/react-keyed-file-browser.css';\n\n\nfunction Other() {\n\n\tasync function getData() {\n\n\n\t\t/*return {\n\t\t\tlights: [\n\t\t\t\t{\n\t\t\t\t\tid: 0,\n\t\t\t\t\tname: \"lower tree\",\n\t\t\t\t\tip: \"192.168.86.146\",\n\t\t\t\t\tpixels: 100,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: 1,\n\t\t\t\t\tname: \"upper tree\",\n\t\t\t\t\tip: \"192.168.86.145\",\n\t\t\t\t\tpixels: 100,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: 2,\n\t\t\t\t\tname: \"test\",\n\t\t\t\t\tip: \"192.168.86.140\",\n\t\t\t\t\tpixels: 50,\n\t\t\t\t}\n\t\t\t],\n\t\t\tgroups: [\n\t\t\t\t{\n\t\t\t\t\tname: \"lower tree\",\n\t\t\t\t\tlights: [0],\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: \"upper tree\",\n\t\t\t\t\tlights: [1],\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: \"test\",\n\t\t\t\t\tlights: [2],\n\t\t\t\t},\t\n\t\t\t\t{\n\t\t\t\t\tname: \"tree\",\n\t\t\t\t\tlights: [ 0, 1 ],\n\t\t\t\t}\n\t\t\t]\n\t\t}*/\n\t}\n\n\tconst [data, setData] = useState({});\n\n\tfunction getData() {\n\t\tconsole.log(\"getting data\");\n\n\t\taxios.get(\"http://homeserver/lights/config.json\").then((resp) => {\n\t\t\tlet blob = resp.data;\n\t\t\tsetData(blob);\n\t\t});\n\t}\n\n\tconst [files, setFiles] = useState([]);\n\tfunction getFiles() {\n\t\taxios.get(\"http://homeserver/lights/patterns/files.json\").then((resp) => {\n\t\t\tlet blob = resp.data;\n\t\t\tsetFiles(blob);\n\t\t});\n\n\t}\n\n\tconst [selectedFile, setSelectedFile] = useState();\n\tconst [selectedLight, setSelectedLight] = useState();\n\n\tfunction clickFile(file) {\n\n\t\tvar bodyFormData = new FormData();\n\n\t\tif (!selectedLight) {\n\t\t\treturn;\n\t\t}\n\n\t\taxios.get(`http://homeserver/lights/patterns/${file.key}`,  { responseType: 'arraybuffer' }\n).then((resp) => {\n\n\t\t\tlet bytes = new Uint8Array(resp.data);\n\n\t\t\tlet blob = new Blob([resp.data], {type: \"application/octet-stream\"});\n\n\t\t\tbodyFormData.append(\"file\", blob, file.key);\n\n\t\t\tconsole.log(selectedLight);\n\t\t\tselectedLight.lights.forEach((light) => {\n\t\t\t\taxios({\n\t\t\t\t\tmethod: \"post\",\n\t\t\t\t\turl: `http://${data.lights[light].ip}/upload`,\n\t\t\t\t\tdata: bodyFormData,\n\t\t\t\t\theaders: { \"Content-Type\": \"multipart/form-data\" },\n\t\t\t\t})\n\t\t\t\t\t.then(function (response) {\n\t\t\t\t\t\t//handle success\n\t\t\t\t\t\tconsole.log(response);\n\t\t\t\t\t})\n\t\t\t\t\t.catch(function (response) {\n\t\t\t\t\t\t//handle error\n\t\t\t\t\t\tconsole.log(response);\n\t\t\t\t\t});\n\n\t\t\t\tconsole.log(data.lights[light]);\n\t\t\t});\n\t\t});\n\n\t}\n\n\tfunction clickLight(light) {\n\t\tsetSelectedLight(light);\n\t\tconsole.log(light);\n\t}\n\n\tuseEffect(() => {\n\t\tgetData()\n\t\tgetFiles()\n\t}, []);\n\n\n\tconst [show, setShow] = useState(false);\n\n\tconst handleClose = () => setShow(false);\n\tconst handleShow = () => setShow(true);\n\n\treturn (\n\t\t<>\n\n\t\t<h3>Selected Light: <span>{selectedLight? selectedLight.name : \"\" }</span></h3>\n\n\t\t<Offcanvas show={show} onHide={handleClose} scroll={true} backdrop={false} placement={'bottom'}>\n\t\t\t<Offcanvas.Header closeButton>\n\t\t\t\t<Offcanvas.Title>Lights</Offcanvas.Title>\n\t\t\t</Offcanvas.Header>\n\t\t\t<Offcanvas.Body>\n\t\t\t\t<ListGroup>\n\t\t\t\t{\n\t\t\t\t\tdata.groups ? (data.groups.map((v, i) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<ListGroup.Item action key={i} onClick={ () => clickLight(v) } >\n\t\t\t\t\t\t\t\t<LightListItem name={v.name} all={data.lights} lights={v.lights}/>\n\t\t\t\t\t\t\t</ListGroup.Item>\n\t\t\t\t\t\t);\n\t\t\t\t\t})) : <></>\n\t\t\t\t}\n\t\t\t\t</ListGroup>\n\t\t\t</Offcanvas.Body>\n\t\t</Offcanvas>\n\t\t<FileBrowser files={files} onSelectFile={clickFile} />\n\t\t<Picker lightData={data} lights={selectedLight}/>\n\t\t<Styler/>\n\t\t<Button variant=\"primary\" onClick={handleShow}>Lights </Button>\n\t\t</>\n\t);\n}\n\n\nexport default Other;\n","/Users/pbivrell/light/light/src/components/Picker.js",["118","119","120","121","122"],"import '../App.css';\nimport Button from \"react-bootstrap/Button\";\nimport React, { useState } from \"react\";\nimport LightsDetect from \"../components/LightDetect\";\nimport LightsIP from \"../components/LightIP\";\nimport { RgbColorPicker } from \"react-colorful\";\nimport axios from \"axios\";\nimport Spinner from \"react-bootstrap/Spinner\";\n\nfunction Picker({lightData, lights}) {\n\n  \tconst [color, setColor] = useState({ r: 200, g: 150, b: 35 });\n\t//const [ip, setIP] = useState({ ip: \"192.168.86.162\", pixels: 50 });\n\n\tvar last = Date.now();\n\tfunction onColorChange(color) {\n\n\t\tlet now = Date.now();\n\t\tconsole.log(color);\n\t\tif (now - last < 100) {\n\t\t\tconsole.log(\"ignoring time\");\n\t\t\treturn;\n\t\t}\n\t\tlast = now;\n\t\tsetColor(color);\n\t\t\n\t\n\t\tconsole.log(lightData);\n\t\tconsole.log(lights);\n\t\tconsole.log(lights.lights);\n\t\t\n\t\tif (!lights || !lights.lights || !lightData) {\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tlights.lights.forEach((light) => {\n\t\t\tconsole.log(\"looping\", light);\n\t\t\tlet data = generateBinary(color, lightData.lights[light].pixels);\n                \tlet blob = new Blob([data], {type: \"application/octet-stream\"});\n\t\t\tlet bodyFormData = new FormData();\n                \tbodyFormData.append(\"file\", blob, \"dummy.bin\");\n\n                \taxios({\n                \t\tmethod: \"post\",\n                \t\turl: `http://${lightData.lights[light].ip}/upload`,\n                \t\tdata: bodyFormData,\n                \t\theaders: { \"Content-Type\": \"multipart/form-data\" },\n                \t})\n                \t.then(function (response) {\n                \t\t//handle success\n                \t\tconsole.log(response);\n                \t})\n                \t.catch(function (response) {\n                \t\t//handle error\n                \t\tconsole.log(response);\n                \t});\n\t\t});\n\n\t\t//axios.get(`http://${ip}/color?r=${color.r}&g=${color.g}&b=${color.b}`).catch((resp) => {\n\t\t//\tconsole.log(\"TODO\")\n                //});\n\t}\n\t\n\t\n\tfunction generateBinary(color, pixels) {\n\t\t\n\t\tlet data = new Uint8Array((2 + pixels) * 8);\n\t\tlet bytes = getInt64Bytes(pixels);\n\n\t\tlet count = (bytes[bytes.length-2] << 8) | bytes[bytes.length-1];\n\t\t\n\t\tdata[0] = 0x3;\n\t\tdata[1] = bytes[bytes.length-1];\n\t\tdata[2] = bytes[bytes.length-2];\n\n\t\tfor (let i = 0; i < pixels; i++) {\n\t\t\tlet bytes = getInt64Bytes(i);\n\t\t \tdata[(i + 1) * 8] = 0x1;\n\t\t\tdata[(i + 1) * 8 + 1] = color.r;\n\t\t\tdata[(i + 1) * 8 + 2] = color.g;\n\t\t\tdata[(i + 1) * 8 + 3] = color.b;\n\t\t\tdata[(i + 1) * 8 + 4] = bytes[bytes.length-1];\n\t\t\tdata[(i + 1) * 8 + 5] = bytes[bytes.length-2];\n\t\t}\n\n\t\tdata[8 + (pixels * 8)] = 0x2;\n\t\tdata[8 + (pixels * 8) + 1] = 200;\n\t\tdata[8 + (pixels * 8) + 2] = 0;\n\t\tdata[8 + (pixels * 8) + 3] = 0;\n\t\tdata[8 + (pixels * 8) + 4] = 0;\n\n\n\t\tconsole.log(data);\n\t\treturn data;\n\n\t}\n\n\tfunction getInt64Bytes(x) {\n  \t\tlet y= Math.floor(x/2**32);\n  \t\treturn [y,(y<<8),(y<<16),(y<<24), x,(x<<8),(x<<16),(x<<24)].map(z=> z>>>24)\n\t}\n\n\treturn (\n\t<div>\n            <RgbColorPicker color={color} onChange={onColorChange} />\n            <p>{ color.r}, {color.g}, {color.b}</p>\n\t</div>\n  \t);\n}\n\n\nexport default Picker;\n","/Users/pbivrell/light/light/src/components/Styler.js",["123","124"],"import '../App.css';\nimport React, { useState, useEffect } from \"react\";\nimport { Stage, Layer } from 'react-konva';\nimport Bulb from \"../components/Bulb.js\"\n\nfunction Styler() {\n\n\tfunction processSequence(seq) {\n\t\t\n\t\tconsole.log(seq);\n\n\t\tvar bytes = new Uint8Array(seq);\n\n\t\tconsole.log(bytes);\n\n\t\tlet nextColors = [];\n\t\t\n\t\tlet delay = 0;\n\t\t\t\n\t\tfor (let i=0; i<bytes.length; i+=8) {\n\t\t\tif (bytes[i] === 0x3 && i === 0) {\n\t\t\t\tlet count = (bytes[i+2] << 8) | bytes[i+1];\n\t\t\t\tconsole.log(\"Count\", count);\n\t\t\t\tfor (let j = 0; j < count; j++) {\n\t\t\t\t\tnextColors.push({color: `rgb(0,0,0)`})\n\t\t\t\t}\n\t\t\t\t\n\t\t\t} else if (bytes[i] === 0x1) {\n\t\t\t\tlet r = bytes[i+1];\n\t\t\t\tlet g = bytes[i+2];\n\t\t\t\tlet b =  bytes[i+3];\n\t\t\t\tlet index = (bytes[i+5] << 8) | bytes[i+4];\n\t\t\t\tconsole.log(\"color\", r,g,b, index);\n\t\t\t\tnextColors[index] = ({color: `rgb(${r},${g},${b})`})\n\t\t\t}else if (bytes[i] === 0x2) {\n\t\t\t\tdelay += (bytes[i+4] << 24) | (bytes[i+3] << 16) | (bytes[i+2] << 8) | bytes[i+1];\n\t\t\t\tconsole.log(\"delay\", delay);\n\t\t\t\tsetTimeout((lights) => {\n\t\t\t\t\tconsole.log(\"Changed lights\");\n\t\t\t\t\tsetLights(lights);\n\t\t\t\t}, delay,[...nextColors] )\n\t\t\t}\n\t\t}\n        }\n\n\tconst [lights, setLights] = useState([{color: `rgb(50,50,50)`},{color: `rgb(50,50,50)`}, {color: `rgb(50,50,50)`}, {color: `rgb(50,50,50)`}, {color: `rgb(50,50,50)`}, {color: `rgb(50,50,50)`}, {color: `rgb(50,50,50)`}, {color: `rgb(50,50,50)`}, {color: `rgb(50,50,50)`}, {color: `rgb(50,50,50)`} ]);\n\tconst rows = Math.floor((window.innerWidth - 200) / 170);\n\tconst radius = 50;\n\tconst xOffset = 120;\n\tconst yOffset = 120;\n\n\treturn (\n\t\t<Stage width={window.innerWidth} height={200}>\n      \t\t\t<Layer>\n\t\t\t\t{\n\t\t\t\t\tlights.map( function(elem, idx) {\n\t\t\t\t\t\tconsole.log(elem, idx);\n\t\t\t\t\t\treturn <Bulb x={xOffset + (xOffset * (idx % rows))} y={yOffset + (yOffset * Math.floor(idx / rows))} color={elem.color} radius={radius}/>\n\t\t\t\t\t})\n\t\t\t\t}\n      \t\t\t</Layer>\n    \t\t</Stage>\n  \t);\n}\n\n\nexport default Styler;\n","/Users/pbivrell/light/light/src/containers/signup.js",[],"/Users/pbivrell/light/light/src/lib/hooks.js",[],"/Users/pbivrell/light/light/src/containers/login.js",[],"/Users/pbivrell/light/light/src/containers/home.js",["125","126","127","128","129"],"import '../App.css';\nimport '../index.css';\nimport './home.css';\nimport '../components/Picker2.css'\nimport Login from \"./login.js\";\nimport Signup from \"./signup.js\";\nimport {displayError} from \"../lib/hooks\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport {ToggleButton, ToggleButtonGroup, DropdownButton, Dropdown, ListGroup} from \"react-bootstrap\";\nimport Picker2 from \"../components/Picker2.js\"\nimport AddBulb from \"../res/AddBulb_crop.png\";\nimport Setup from '../containers/setup.js';\n\nfunction Home() {\n\n\tconst [setup, setSetup] = useState(false);\n\n\tconst [lightMap, setLightMap] = useState({});\n\n\tconst [userData, setUserData] = useState({});\n\n\tconst [authed, setAuthed] = useState(true);\n\n\tconst [register, setRegister] = useState(false);\n\n\tfunction addBulbToggle() {\n\t\tsetSetup(!setup);\n\t}\n\n\tfunction dropDown(e) {\n\n\t\tif (e === \"logout\") {\n\t\t\tlogout()\n\t\t}else if(e === \"settings\") {\n\t\t\tsettings()\n\t\t}\n\t}\n\n\tfunction logout() {\n\t\taxios.delete(`${process.env.REACT_APP_API_URL}/user`, {\n\t\t\twithCredentials: true,\n\t\t}).then((resp) => {\n\t\t\tsetAuthed(false);\n\t\t\tsetUserData({});\n\t\t}).catch((e) => {\n\t\t\tdisplayError(e);\n\t\t});\n\t\tconsole.log(\"logout\");\n\t}\n\n\tfunction settings() {\n\t\tconsole.log(\"setting\");\n\t}\n\n\tfunction sampleUserData() {\n\t\treturn {\n\t\t\t\"id\": \"ruckens\",\n\t\t\t\"lights\": [\n\t\t\t\t{\n\t\t\t\t\t\"alias\": \"main\",\n\t\t\t\t\t\"id\": \"OriginalLight1\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"alias\": \"main\",\n\t\t\t\t\t\"id\": \"OriginalLight1\"\n\t\t\t\t}\n\t\t\t],\n\t\t}\n\t}\n\n\tfunction getUserData() {\n\t\t\n\t\taxios.get(`${process.env.REACT_APP_API_URL}/user`, {\n\t\t\twithCredentials: true,\n\t\t}).then((resp) => {\n\t\t\tloadUserData(resp.data);\n\t\t}).catch((e) => {\n\t\t\tsetAuthed(false);\n\t\t\tdisplayError(e);\n\t\t});\n\t}\n\n\tfunction loadUserData(data) {\n\t\tsetUserData(data);\n\t\t\n\t\tdata.lights.forEach((v) => {\n\t\t\tlookupLight(v.id);\n\t\t});\n\n\t}\n\n\tfunction lookupLight(name) {\n\t\t\n\t\taxios.get(`${process.env.REACT_APP_API_URL}/light?light=${name}`, {\n\t\t\twithCredentials: true,\n\t\t}).then((resp) => {\n\t\t\tlet map = {...lightMap};\n\t\t\tlet lightData = resp.data;\n\n\t\t\tmap[name] = lightData;\n\t\t\tsetLightMap(map)\n\t\t\tconsole.log(lightMap);\n\t\t}).catch((e) => {\n\t\t\tdisplayError(e);\n\t\t});\n\t}\n\n\tfunction renderRegister() {\n\t\treturn (\n\t\t\t<div className=\"Auth\">\n\t\t\t\t<Setup/>\n\t\t\t</div>\n\t\t);\n\t}\n\n\tfunction renderAuth() {\n\t\treturn (\n\t\t\t<div className=\"Auth\">\n\t\t\t\t<ToggleButtonGroup type=\"checkbox\" value={register} onChange={(v) => setRegister(!register) }>\n      \t\t\t\t\t<ToggleButton id=\"tbg-btn-1\" value={true}>\n      \t\t\t\t\t\tLogin\t\n\t\t\t\t\t</ToggleButton>\n      \t\t\t\t\t<ToggleButton id=\"tbg-btn-3\" value={false}>\n      \t\t\t\t\t\tSignup\n\t\t\t\t\t</ToggleButton>\n    \t\t\t\t</ToggleButtonGroup>\n\t\t\t\t{ register ?\n\t\t\t\t\t<>\n\t\t\t\t\t<h3>Login</h3>\n\t\t\t\t\t<Login callback={ () => {\n\t\t\t\t\t\tsetAuthed(true) \n\t\t\t\t\t\tgetUserData()\n\t\t\t\t\t}}/>\n\t\t\t\t\t</>\n\t\t\t\t:\n\t\t\t\t\t<>\n\t\t\t\t\t<h3>Signup</h3>\n\t\t\t\t\t<Signup callback={ () => setAuthed(true) }/>\n\t\t\t\t\t</>\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t</div>\n\t\t)\n\n\t}\n\n\tfunction renderPage() {\n\t\treturn (\n\t\t\t<div className=\"Page\">\n\t\t\t\t<div className=\"User\">\n\t\t\t      \t\t<DropdownButton\n        \t\t\t\t\tdrop={'up'}\n        \t\t\t\t\tvariant=\"secondary\"\n\t\t\t\t\t\ttitle={userData.id}\n\t\t\t\t\t\tsize=\"lg\"\n\t\t\t\t\t\tonSelect={dropDown}\n      \t\t\t\t\t>\n        \t\t\t\t\t<Dropdown.Item eventKey=\"settings\">Settings</Dropdown.Item>\n        \t\t\t\t\t<Dropdown.Divider />\n        \t\t\t\t\t<Dropdown.Item eventKey=\"logout\">Logout</Dropdown.Item>\n      \t\t\t\t\t</DropdownButton>\n\t\t\t\t</div>\n\t\t\t\t{ setup ? <Setup cancel={addBulbToggle}/> : <></> }\n\t\t\t\t<div className=\"ButtonPanel\">\n\t\t\t\t\t{ userData.lights ? userData.lights.map((v) => {\n\t\t\t\t\t\treturn <Picker2 light={lightMap[v.id]} className=\"ButtonItem\" initalState={1} name={v}/>\n\t\t\t\t\t}) : <></>\n\t\t\t\t\t}\n\t\t\t\t\t<div className=\"Picker\" onClick={addBulbToggle}>\n                        \t\t\t<img className=\"ButtonImage\" src={AddBulb}></img>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n\n\tuseEffect(() => {\n\t\tgetUserData()\n\t\t//console.log(sampleUserData().lights);\n\t\t//setUserData(sampleUserData());\n\t}, []);\n\n\n\treturn (\n\t\t<>\n\t\t\t{ authed ? \n\t\t\t\trenderPage()\n\t\t\t:\n\t\t\t\trenderAuth()\n\t\t\t}\n\n\t\t</>\n\t);\n}\n\n\nexport default Home;\n","/Users/pbivrell/light/light/src/components/Picker2.js",["130","131","132","133","134"],"import './Picker2.css';\nimport React, { useState, useEffect } from \"react\";\nimport { HuePicker, AlphaPicker } from 'react-color'\nimport bulb from '../res/Bulb_crop.png';\nimport offbulb from '../res/OffBulb_crop.png';\nimport disconnectedbulb from '../res/DisconnectedBulb_crop.png';\nimport axios from \"axios\";\nimport {displayError} from \"../lib/hooks\";\n\nfunction Picker2({name, light, initalState}) {\n\n\tuseEffect(() => {\n\t\tgetLight();\n\t}, [light])\n\n\n\tconst [bulbState, setBulbState] = useState(initalState);\n\n  \tconst [color, setColor] = useState({ hsl: {a: 1}, rgb: {a: 1}, hex: \"\"});\n\t\n\tfunction getLight() {\n\t\tif (!light || !light.IP) {\n\t\t\treturn\n\t\t}\n\t\taxios.get(`http://${light.IP}/status`, {timeout: 1000})\n\t\t.then((resp) =>{\n\t\t\tsetBulbState(resp.status ? 0 : 1);\n\t\t})\n\t\t.catch((e) => {\n\t\t\tsetBulbState(2);\n\t\t\tdisplayError(e);\n\t\t});\n\t}\n\n\tfunction pushLight(pushColor) {\n\t\tlet data = generateBinary(pushColor, light.Count);\n                let blob = new Blob([data], {type: \"application/octet-stream\"});\n                let bodyFormData = new FormData();\n                bodyFormData.append(\"file\", blob, `${pushColor.r}-${pushColor.g}-${pushColor.b}-${pushColor.a}.bin`);\n\n                axios({\n                \tmethod: \"post\",\n                \turl: `http://${light.IP}/upload`,\n                \tdata: bodyFormData,\n                \theaders: { \"Content-Type\": \"multipart/form-data\" },\n                })\n                .then(function (response) {\n                \tconsole.log(response);\n                })\n                .catch(function (response) {\n                \tdisplayError(response)\n                });\n\t}\n\n\tfunction pushToggle() {\n\t\t\n\t\taxios.get(`http://${light.IP}/toggle`, {timeout: 1000})\n\t\t.then((resp) => {\n\t\t\tconsole.log(\"toggled\");\n\t\t})\n\t\t.catch((e) => {\n        \t\tdisplayError(e);\n\t\t});\n\t}\n\n\tfunction toggleBulb() {\n\t\tif (bulbState == 2) {\n\t\t\tgetLight();\n\t\t\treturn;\n\t\t}else if(bulbState == 1) {\n\t\t\tsetBulbState(0);\n\t\t}else {\n\t\t\tsetBulbState(1);\n\t\t}\n\n\t\tpushToggle();\n\t}\n\n\tfunction onColorChange(hue, c) {\n\n\t\tconsole.log(c);\n\n\t\tlet hsl = c.hsl;\n\t\tlet rgb = c.rgb;\n\n\t\tif(!hue) {\n\t\t\thsl.a = color.hsl.a;\n\t\t\trgb.a = color.rgb.a;\n\t\t}\n\t\tsetColor({hsl: hsl, rgb: c.rgb, hex: `rgba(${c.rgb.r},${c.rgb.g},${c.rgb.b},${hsl.a}`});\n\t\t\n\t\tpushLight(c.rgb);\n\t}\n\t\n\t\n\tfunction generateBinary(color, pixels) {\n\t\t\n\t\tlet data = new Uint8Array((2 + pixels) * 8);\n\t\tlet bytes = getInt64Bytes(pixels);\n\n\t\tlet count = (bytes[bytes.length-2] << 8) | bytes[bytes.length-1];\n\t\t\n\t\tdata[0] = 0x3;\n\t\tdata[1] = bytes[bytes.length-1];\n\t\tdata[2] = bytes[bytes.length-2];\n\n\t\tfor (let i = 0; i < pixels; i++) {\n\t\t\tlet bytes = getInt64Bytes(i);\n\t\t \tdata[(i + 1) * 8] = 0x1;\n\t\t\tdata[(i + 1) * 8 + 1] = parseInt(color.r * color.a) ;\n\t\t\tdata[(i + 1) * 8 + 2] = parseInt(color.g * color.a);\n\t\t\tdata[(i + 1) * 8 + 3] = parseInt(color.b * color.a);\n\t\t\tdata[(i + 1) * 8 + 4] = bytes[bytes.length-1];\n\t\t\tdata[(i + 1) * 8 + 5] = bytes[bytes.length-2];\n\t\t}\n\n\t\tdata[8 + (pixels * 8)] = 0x2;\n\t\tdata[8 + (pixels * 8) + 1] = 200;\n\t\tdata[8 + (pixels * 8) + 2] = 0;\n\t\tdata[8 + (pixels * 8) + 3] = 0;\n\t\tdata[8 + (pixels * 8) + 4] = 0;\n\n\n\t\tconsole.log(data);\n\t\treturn data;\n\n\t}\n\n\tfunction getInt64Bytes(x) {\n  \t\tlet y= Math.floor(x/2**32);\n  \t\treturn [y,(y<<8),(y<<16),(y<<24), x,(x<<8),(x<<16),(x<<24)].map(z=> z>>>24)\n\t}\n\n\tfunction getToolTip() {\n\t\tif (!light || Object.keys(light).length === 0) {\n\t\t\treturn \"\"\n\t\t}\n\t\treturn `ID: ${light.ID}\nIP: ${light.IP}\nVersion: ${light.Version}\n${new Date(light.Updated).toLocaleDateString() +\" \" +  new Date(light.Updated).toLocaleTimeString()}`\n\t}\n\n\treturn (\n\t<div className=\"Picker\">\n\n\t\t<div className=\"ButtonText\" data-tooltip={getToolTip()}>{name.alias}</div>\n\t\t<div className=\"Button\" style={{background: color.hex}} onClick={toggleBulb}>\n\t\t\t<img className=\"ButtonImage\" src={bulbState === 0 ? bulb : bulbState === 1 ? offbulb : disconnectedbulb }></img>\n\t\t</div>\n\t\t{ bulbState === 0 ? \n\t\t\t<>\n\t\t\t\t<br/>\n\t\t\t\t<HuePicker className=\"ButtonImage\" color={color.hsl} onChangeComplete={(c) => onColorChange(false, c)}/>\n\t\t\t\t<br/>\n                \t\t<AlphaPicker className=\"ButtonImage\" color={color.hsl} onChangeComplete={(c) => onColorChange(true, c)}/>\n\t\t\t</>\n\t\t: \n\t\t\t<></>\n\t\t}\n\t</div>\n  \t);\n}\n\n\nexport default Picker2;\n",{"ruleId":"135","severity":1,"message":"136","line":10,"column":8,"nodeType":"137","messageId":"138","endLine":10,"endColumn":13},{"ruleId":"135","severity":1,"message":"139","line":1,"column":8,"nodeType":"137","messageId":"138","endLine":1,"endColumn":12},{"ruleId":"140","replacedBy":"141"},{"ruleId":"142","replacedBy":"143"},{"ruleId":"135","severity":1,"message":"144","line":2,"column":8,"nodeType":"137","messageId":"138","endLine":2,"endColumn":12},{"ruleId":"135","severity":1,"message":"145","line":12,"column":9,"nodeType":"137","messageId":"138","endLine":12,"endColumn":11},{"ruleId":"135","severity":1,"message":"146","line":2,"column":8,"nodeType":"137","messageId":"138","endLine":2,"endColumn":14},{"ruleId":"135","severity":1,"message":"147","line":4,"column":8,"nodeType":"137","messageId":"138","endLine":4,"endColumn":20},{"ruleId":"135","severity":1,"message":"148","line":5,"column":8,"nodeType":"137","messageId":"138","endLine":5,"endColumn":16},{"ruleId":"135","severity":1,"message":"149","line":8,"column":8,"nodeType":"137","messageId":"138","endLine":8,"endColumn":15},{"ruleId":"135","severity":1,"message":"150","line":13,"column":13,"nodeType":"137","messageId":"138","endLine":13,"endColumn":18},{"ruleId":"135","severity":1,"message":"151","line":62,"column":7,"nodeType":"137","messageId":"138","endLine":62,"endColumn":12},{"ruleId":"135","severity":1,"message":"152","line":2,"column":27,"nodeType":"137","messageId":"138","endLine":2,"endColumn":36},{"ruleId":"135","severity":1,"message":"152","line":2,"column":27,"nodeType":"137","messageId":"138","endLine":2,"endColumn":36},{"ruleId":"135","severity":1,"message":"150","line":8,"column":13,"nodeType":"137","messageId":"138","endLine":8,"endColumn":18},{"ruleId":"135","severity":1,"message":"153","line":2,"column":17,"nodeType":"137","messageId":"138","endLine":2,"endColumn":25},{"ruleId":"135","severity":1,"message":"152","line":2,"column":27,"nodeType":"137","messageId":"138","endLine":2,"endColumn":36},{"ruleId":"154","severity":1,"message":"155","line":36,"column":5,"nodeType":"156","endLine":36,"endColumn":14,"suggestions":"157"},{"ruleId":"158","severity":1,"message":"159","line":65,"column":11,"nodeType":"137","messageId":"160","endLine":65,"endColumn":18},{"ruleId":"135","severity":1,"message":"161","line":83,"column":9,"nodeType":"137","messageId":"138","endLine":83,"endColumn":21},{"ruleId":"135","severity":1,"message":"162","line":83,"column":23,"nodeType":"137","messageId":"138","endLine":83,"endColumn":38},{"ruleId":"135","severity":1,"message":"163","line":97,"column":8,"nodeType":"137","messageId":"138","endLine":97,"endColumn":13},{"ruleId":"135","severity":1,"message":"146","line":2,"column":8,"nodeType":"137","messageId":"138","endLine":2,"endColumn":14},{"ruleId":"135","severity":1,"message":"147","line":4,"column":8,"nodeType":"137","messageId":"138","endLine":4,"endColumn":20},{"ruleId":"135","severity":1,"message":"148","line":5,"column":8,"nodeType":"137","messageId":"138","endLine":5,"endColumn":16},{"ruleId":"135","severity":1,"message":"149","line":8,"column":8,"nodeType":"137","messageId":"138","endLine":8,"endColumn":15},{"ruleId":"135","severity":1,"message":"151","line":70,"column":7,"nodeType":"137","messageId":"138","endLine":70,"endColumn":12},{"ruleId":"135","severity":1,"message":"152","line":2,"column":27,"nodeType":"137","messageId":"138","endLine":2,"endColumn":36},{"ruleId":"135","severity":1,"message":"164","line":8,"column":11,"nodeType":"137","messageId":"138","endLine":8,"endColumn":26},{"ruleId":"135","severity":1,"message":"165","line":10,"column":68,"nodeType":"137","messageId":"138","endLine":10,"endColumn":77},{"ruleId":"135","severity":1,"message":"166","line":56,"column":11,"nodeType":"137","messageId":"138","endLine":56,"endColumn":25},{"ruleId":"135","severity":1,"message":"167","line":109,"column":11,"nodeType":"137","messageId":"138","endLine":109,"endColumn":25},{"ruleId":"168","severity":1,"message":"169","line":171,"column":28,"nodeType":"170","endLine":171,"endColumn":71},{"ruleId":"154","severity":1,"message":"171","line":182,"column":5,"nodeType":"156","endLine":182,"endColumn":7,"suggestions":"172"},{"ruleId":"154","severity":1,"message":"173","line":14,"column":5,"nodeType":"156","endLine":14,"endColumn":12,"suggestions":"174"},{"ruleId":"175","severity":1,"message":"176","line":67,"column":17,"nodeType":"177","messageId":"178","endLine":67,"endColumn":19},{"ruleId":"175","severity":1,"message":"176","line":70,"column":22,"nodeType":"177","messageId":"178","endLine":70,"endColumn":24},{"ruleId":"135","severity":1,"message":"151","line":101,"column":7,"nodeType":"137","messageId":"138","endLine":101,"endColumn":12},{"ruleId":"168","severity":1,"message":"169","line":149,"column":4,"nodeType":"170","endLine":149,"endColumn":110},"no-unused-vars","'Other' is defined but never used.","Identifier","unusedVar","'logo' is defined but never used.","no-native-reassign",["179"],"no-negated-in-lhs",["180"],"'Form' is defined but never used.","'ip' is assigned a value but never used.","'Button' is defined but never used.","'LightsDetect' is defined but never used.","'LightsIP' is defined but never used.","'Spinner' is defined but never used.","'setIP' is assigned a value but never used.","'count' is assigned a value but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'all' and 'lights'. Either include them or remove the dependency array.","ArrayExpression",["181"],"no-redeclare","'getData' is already defined.","redeclared","'selectedFile' is assigned a value but never used.","'setSelectedFile' is assigned a value but never used.","'bytes' is assigned a value but never used.","'processSequence' is defined but never used.","'ListGroup' is defined but never used.","'sampleUserData' is defined but never used.","'renderRegister' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'getUserData'. Either include it or remove the dependency array.",["182"],"React Hook useEffect has a missing dependency: 'getLight'. Either include it or remove the dependency array.",["183"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"184","fix":"185"},{"desc":"186","fix":"187"},{"desc":"188","fix":"189"},"Update the dependencies array to be: [all, clicked, lights]",{"range":"190","text":"191"},"Update the dependencies array to be: [getUserData]",{"range":"192","text":"193"},"Update the dependencies array to be: [getLight, light]",{"range":"194","text":"195"},[815,824],"[all, clicked, lights]",[3906,3908],"[getUserData]",[438,445],"[getLight, light]"]