{"ast":null,"code":"import _toArray from \"/Users/pbivrell/light/light/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toArray\";\nimport _classCallCheck from \"/Users/pbivrell/light/light/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/pbivrell/light/light/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { Konva } from './Global.js';\nexport var Transform = /*#__PURE__*/function () {\n  function Transform() {\n    var m = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [1, 0, 0, 1, 0, 0];\n\n    _classCallCheck(this, Transform);\n\n    this.dirty = false;\n    this.m = m && m.slice() || [1, 0, 0, 1, 0, 0];\n  }\n\n  _createClass(Transform, [{\n    key: \"reset\",\n    value: function reset() {\n      this.m[0] = 1;\n      this.m[1] = 0;\n      this.m[2] = 0;\n      this.m[3] = 1;\n      this.m[4] = 0;\n      this.m[5] = 0;\n    }\n  }, {\n    key: \"copy\",\n    value: function copy() {\n      return new Transform(this.m);\n    }\n  }, {\n    key: \"copyInto\",\n    value: function copyInto(tr) {\n      tr.m[0] = this.m[0];\n      tr.m[1] = this.m[1];\n      tr.m[2] = this.m[2];\n      tr.m[3] = this.m[3];\n      tr.m[4] = this.m[4];\n      tr.m[5] = this.m[5];\n    }\n  }, {\n    key: \"point\",\n    value: function point(_point) {\n      var m = this.m;\n      return {\n        x: m[0] * _point.x + m[2] * _point.y + m[4],\n        y: m[1] * _point.x + m[3] * _point.y + m[5]\n      };\n    }\n  }, {\n    key: \"translate\",\n    value: function translate(x, y) {\n      this.m[4] += this.m[0] * x + this.m[2] * y;\n      this.m[5] += this.m[1] * x + this.m[3] * y;\n      return this;\n    }\n  }, {\n    key: \"scale\",\n    value: function scale(sx, sy) {\n      this.m[0] *= sx;\n      this.m[1] *= sx;\n      this.m[2] *= sy;\n      this.m[3] *= sy;\n      return this;\n    }\n  }, {\n    key: \"rotate\",\n    value: function rotate(rad) {\n      var c = Math.cos(rad);\n      var s = Math.sin(rad);\n      var m11 = this.m[0] * c + this.m[2] * s;\n      var m12 = this.m[1] * c + this.m[3] * s;\n      var m21 = this.m[0] * -s + this.m[2] * c;\n      var m22 = this.m[1] * -s + this.m[3] * c;\n      this.m[0] = m11;\n      this.m[1] = m12;\n      this.m[2] = m21;\n      this.m[3] = m22;\n      return this;\n    }\n  }, {\n    key: \"getTranslation\",\n    value: function getTranslation() {\n      return {\n        x: this.m[4],\n        y: this.m[5]\n      };\n    }\n  }, {\n    key: \"skew\",\n    value: function skew(sx, sy) {\n      var m11 = this.m[0] + this.m[2] * sy;\n      var m12 = this.m[1] + this.m[3] * sy;\n      var m21 = this.m[2] + this.m[0] * sx;\n      var m22 = this.m[3] + this.m[1] * sx;\n      this.m[0] = m11;\n      this.m[1] = m12;\n      this.m[2] = m21;\n      this.m[3] = m22;\n      return this;\n    }\n  }, {\n    key: \"multiply\",\n    value: function multiply(matrix) {\n      var m11 = this.m[0] * matrix.m[0] + this.m[2] * matrix.m[1];\n      var m12 = this.m[1] * matrix.m[0] + this.m[3] * matrix.m[1];\n      var m21 = this.m[0] * matrix.m[2] + this.m[2] * matrix.m[3];\n      var m22 = this.m[1] * matrix.m[2] + this.m[3] * matrix.m[3];\n      var dx = this.m[0] * matrix.m[4] + this.m[2] * matrix.m[5] + this.m[4];\n      var dy = this.m[1] * matrix.m[4] + this.m[3] * matrix.m[5] + this.m[5];\n      this.m[0] = m11;\n      this.m[1] = m12;\n      this.m[2] = m21;\n      this.m[3] = m22;\n      this.m[4] = dx;\n      this.m[5] = dy;\n      return this;\n    }\n  }, {\n    key: \"invert\",\n    value: function invert() {\n      var d = 1 / (this.m[0] * this.m[3] - this.m[1] * this.m[2]);\n      var m0 = this.m[3] * d;\n      var m1 = -this.m[1] * d;\n      var m2 = -this.m[2] * d;\n      var m3 = this.m[0] * d;\n      var m4 = d * (this.m[2] * this.m[5] - this.m[3] * this.m[4]);\n      var m5 = d * (this.m[1] * this.m[4] - this.m[0] * this.m[5]);\n      this.m[0] = m0;\n      this.m[1] = m1;\n      this.m[2] = m2;\n      this.m[3] = m3;\n      this.m[4] = m4;\n      this.m[5] = m5;\n      return this;\n    }\n  }, {\n    key: \"getMatrix\",\n    value: function getMatrix() {\n      return this.m;\n    }\n  }, {\n    key: \"setAbsolutePosition\",\n    value: function setAbsolutePosition(x, y) {\n      var m0 = this.m[0],\n          m1 = this.m[1],\n          m2 = this.m[2],\n          m3 = this.m[3],\n          m4 = this.m[4],\n          m5 = this.m[5],\n          yt = (m0 * (y - m5) - m1 * (x - m4)) / (m0 * m3 - m1 * m2),\n          xt = (x - m4 - m2 * yt) / m0;\n      return this.translate(xt, yt);\n    }\n  }, {\n    key: \"decompose\",\n    value: function decompose() {\n      var a = this.m[0];\n      var b = this.m[1];\n      var c = this.m[2];\n      var d = this.m[3];\n      var e = this.m[4];\n      var f = this.m[5];\n      var delta = a * d - b * c;\n      var result = {\n        x: e,\n        y: f,\n        rotation: 0,\n        scaleX: 0,\n        scaleY: 0,\n        skewX: 0,\n        skewY: 0\n      };\n\n      if (a != 0 || b != 0) {\n        var r = Math.sqrt(a * a + b * b);\n        result.rotation = b > 0 ? Math.acos(a / r) : -Math.acos(a / r);\n        result.scaleX = r;\n        result.scaleY = delta / r;\n        result.skewX = (a * c + b * d) / delta;\n        result.skewY = 0;\n      } else if (c != 0 || d != 0) {\n        var s = Math.sqrt(c * c + d * d);\n        result.rotation = Math.PI / 2 - (d > 0 ? Math.acos(-c / s) : -Math.acos(c / s));\n        result.scaleX = delta / s;\n        result.scaleY = s;\n        result.skewX = 0;\n        result.skewY = (a * c + b * d) / delta;\n      } else {}\n\n      result.rotation = Util._getRotation(result.rotation);\n      return result;\n    }\n  }]);\n\n  return Transform;\n}();\nvar OBJECT_ARRAY = '[object Array]',\n    OBJECT_NUMBER = '[object Number]',\n    OBJECT_STRING = '[object String]',\n    OBJECT_BOOLEAN = '[object Boolean]',\n    PI_OVER_DEG180 = Math.PI / 180,\n    DEG180_OVER_PI = 180 / Math.PI,\n    HASH = '#',\n    EMPTY_STRING = '',\n    ZERO = '0',\n    KONVA_WARNING = 'Konva warning: ',\n    KONVA_ERROR = 'Konva error: ',\n    RGB_PAREN = 'rgb(',\n    COLORS = {\n  aliceblue: [240, 248, 255],\n  antiquewhite: [250, 235, 215],\n  aqua: [0, 255, 255],\n  aquamarine: [127, 255, 212],\n  azure: [240, 255, 255],\n  beige: [245, 245, 220],\n  bisque: [255, 228, 196],\n  black: [0, 0, 0],\n  blanchedalmond: [255, 235, 205],\n  blue: [0, 0, 255],\n  blueviolet: [138, 43, 226],\n  brown: [165, 42, 42],\n  burlywood: [222, 184, 135],\n  cadetblue: [95, 158, 160],\n  chartreuse: [127, 255, 0],\n  chocolate: [210, 105, 30],\n  coral: [255, 127, 80],\n  cornflowerblue: [100, 149, 237],\n  cornsilk: [255, 248, 220],\n  crimson: [220, 20, 60],\n  cyan: [0, 255, 255],\n  darkblue: [0, 0, 139],\n  darkcyan: [0, 139, 139],\n  darkgoldenrod: [184, 132, 11],\n  darkgray: [169, 169, 169],\n  darkgreen: [0, 100, 0],\n  darkgrey: [169, 169, 169],\n  darkkhaki: [189, 183, 107],\n  darkmagenta: [139, 0, 139],\n  darkolivegreen: [85, 107, 47],\n  darkorange: [255, 140, 0],\n  darkorchid: [153, 50, 204],\n  darkred: [139, 0, 0],\n  darksalmon: [233, 150, 122],\n  darkseagreen: [143, 188, 143],\n  darkslateblue: [72, 61, 139],\n  darkslategray: [47, 79, 79],\n  darkslategrey: [47, 79, 79],\n  darkturquoise: [0, 206, 209],\n  darkviolet: [148, 0, 211],\n  deeppink: [255, 20, 147],\n  deepskyblue: [0, 191, 255],\n  dimgray: [105, 105, 105],\n  dimgrey: [105, 105, 105],\n  dodgerblue: [30, 144, 255],\n  firebrick: [178, 34, 34],\n  floralwhite: [255, 255, 240],\n  forestgreen: [34, 139, 34],\n  fuchsia: [255, 0, 255],\n  gainsboro: [220, 220, 220],\n  ghostwhite: [248, 248, 255],\n  gold: [255, 215, 0],\n  goldenrod: [218, 165, 32],\n  gray: [128, 128, 128],\n  green: [0, 128, 0],\n  greenyellow: [173, 255, 47],\n  grey: [128, 128, 128],\n  honeydew: [240, 255, 240],\n  hotpink: [255, 105, 180],\n  indianred: [205, 92, 92],\n  indigo: [75, 0, 130],\n  ivory: [255, 255, 240],\n  khaki: [240, 230, 140],\n  lavender: [230, 230, 250],\n  lavenderblush: [255, 240, 245],\n  lawngreen: [124, 252, 0],\n  lemonchiffon: [255, 250, 205],\n  lightblue: [173, 216, 230],\n  lightcoral: [240, 128, 128],\n  lightcyan: [224, 255, 255],\n  lightgoldenrodyellow: [250, 250, 210],\n  lightgray: [211, 211, 211],\n  lightgreen: [144, 238, 144],\n  lightgrey: [211, 211, 211],\n  lightpink: [255, 182, 193],\n  lightsalmon: [255, 160, 122],\n  lightseagreen: [32, 178, 170],\n  lightskyblue: [135, 206, 250],\n  lightslategray: [119, 136, 153],\n  lightslategrey: [119, 136, 153],\n  lightsteelblue: [176, 196, 222],\n  lightyellow: [255, 255, 224],\n  lime: [0, 255, 0],\n  limegreen: [50, 205, 50],\n  linen: [250, 240, 230],\n  magenta: [255, 0, 255],\n  maroon: [128, 0, 0],\n  mediumaquamarine: [102, 205, 170],\n  mediumblue: [0, 0, 205],\n  mediumorchid: [186, 85, 211],\n  mediumpurple: [147, 112, 219],\n  mediumseagreen: [60, 179, 113],\n  mediumslateblue: [123, 104, 238],\n  mediumspringgreen: [0, 250, 154],\n  mediumturquoise: [72, 209, 204],\n  mediumvioletred: [199, 21, 133],\n  midnightblue: [25, 25, 112],\n  mintcream: [245, 255, 250],\n  mistyrose: [255, 228, 225],\n  moccasin: [255, 228, 181],\n  navajowhite: [255, 222, 173],\n  navy: [0, 0, 128],\n  oldlace: [253, 245, 230],\n  olive: [128, 128, 0],\n  olivedrab: [107, 142, 35],\n  orange: [255, 165, 0],\n  orangered: [255, 69, 0],\n  orchid: [218, 112, 214],\n  palegoldenrod: [238, 232, 170],\n  palegreen: [152, 251, 152],\n  paleturquoise: [175, 238, 238],\n  palevioletred: [219, 112, 147],\n  papayawhip: [255, 239, 213],\n  peachpuff: [255, 218, 185],\n  peru: [205, 133, 63],\n  pink: [255, 192, 203],\n  plum: [221, 160, 203],\n  powderblue: [176, 224, 230],\n  purple: [128, 0, 128],\n  rebeccapurple: [102, 51, 153],\n  red: [255, 0, 0],\n  rosybrown: [188, 143, 143],\n  royalblue: [65, 105, 225],\n  saddlebrown: [139, 69, 19],\n  salmon: [250, 128, 114],\n  sandybrown: [244, 164, 96],\n  seagreen: [46, 139, 87],\n  seashell: [255, 245, 238],\n  sienna: [160, 82, 45],\n  silver: [192, 192, 192],\n  skyblue: [135, 206, 235],\n  slateblue: [106, 90, 205],\n  slategray: [119, 128, 144],\n  slategrey: [119, 128, 144],\n  snow: [255, 255, 250],\n  springgreen: [0, 255, 127],\n  steelblue: [70, 130, 180],\n  tan: [210, 180, 140],\n  teal: [0, 128, 128],\n  thistle: [216, 191, 216],\n  transparent: [255, 255, 255, 0],\n  tomato: [255, 99, 71],\n  turquoise: [64, 224, 208],\n  violet: [238, 130, 238],\n  wheat: [245, 222, 179],\n  white: [255, 255, 255],\n  whitesmoke: [245, 245, 245],\n  yellow: [255, 255, 0],\n  yellowgreen: [154, 205, 5]\n},\n    RGB_REGEX = /rgb\\((\\d{1,3}),(\\d{1,3}),(\\d{1,3})\\)/,\n    animQueue = [];\n\nvar req = typeof requestAnimationFrame !== 'undefined' && requestAnimationFrame || function (f) {\n  setTimeout(f, 60);\n};\n\nexport var Util = {\n  _isElement: function _isElement(obj) {\n    return !!(obj && obj.nodeType == 1);\n  },\n  _isFunction: function _isFunction(obj) {\n    return !!(obj && obj.constructor && obj.call && obj.apply);\n  },\n  _isPlainObject: function _isPlainObject(obj) {\n    return !!obj && obj.constructor === Object;\n  },\n  _isArray: function _isArray(obj) {\n    return Object.prototype.toString.call(obj) === OBJECT_ARRAY;\n  },\n  _isNumber: function _isNumber(obj) {\n    return Object.prototype.toString.call(obj) === OBJECT_NUMBER && !isNaN(obj) && isFinite(obj);\n  },\n  _isString: function _isString(obj) {\n    return Object.prototype.toString.call(obj) === OBJECT_STRING;\n  },\n  _isBoolean: function _isBoolean(obj) {\n    return Object.prototype.toString.call(obj) === OBJECT_BOOLEAN;\n  },\n  isObject: function isObject(val) {\n    return val instanceof Object;\n  },\n  isValidSelector: function isValidSelector(selector) {\n    if (typeof selector !== 'string') {\n      return false;\n    }\n\n    var firstChar = selector[0];\n    return firstChar === '#' || firstChar === '.' || firstChar === firstChar.toUpperCase();\n  },\n  _sign: function _sign(number) {\n    if (number === 0) {\n      return 1;\n    }\n\n    if (number > 0) {\n      return 1;\n    } else {\n      return -1;\n    }\n  },\n  requestAnimFrame: function requestAnimFrame(callback) {\n    animQueue.push(callback);\n\n    if (animQueue.length === 1) {\n      req(function () {\n        var queue = animQueue;\n        animQueue = [];\n        queue.forEach(function (cb) {\n          cb();\n        });\n      });\n    }\n  },\n  createCanvasElement: function createCanvasElement() {\n    var canvas = document.createElement('canvas');\n\n    try {\n      canvas.style = canvas.style || {};\n    } catch (e) {}\n\n    return canvas;\n  },\n  createImageElement: function createImageElement() {\n    return document.createElement('img');\n  },\n  _isInDocument: function _isInDocument(el) {\n    while (el = el.parentNode) {\n      if (el == document) {\n        return true;\n      }\n    }\n\n    return false;\n  },\n  _urlToImage: function _urlToImage(url, callback) {\n    var imageObj = Util.createImageElement();\n\n    imageObj.onload = function () {\n      callback(imageObj);\n    };\n\n    imageObj.src = url;\n  },\n  _rgbToHex: function _rgbToHex(r, g, b) {\n    return ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1);\n  },\n  _hexToRgb: function _hexToRgb(hex) {\n    hex = hex.replace(HASH, EMPTY_STRING);\n    var bigint = parseInt(hex, 16);\n    return {\n      r: bigint >> 16 & 255,\n      g: bigint >> 8 & 255,\n      b: bigint & 255\n    };\n  },\n  getRandomColor: function getRandomColor() {\n    var randColor = (Math.random() * 0xffffff << 0).toString(16);\n\n    while (randColor.length < 6) {\n      randColor = ZERO + randColor;\n    }\n\n    return HASH + randColor;\n  },\n  getRGB: function getRGB(color) {\n    var rgb;\n\n    if (color in COLORS) {\n      rgb = COLORS[color];\n      return {\n        r: rgb[0],\n        g: rgb[1],\n        b: rgb[2]\n      };\n    } else if (color[0] === HASH) {\n      return this._hexToRgb(color.substring(1));\n    } else if (color.substr(0, 4) === RGB_PAREN) {\n      rgb = RGB_REGEX.exec(color.replace(/ /g, ''));\n      return {\n        r: parseInt(rgb[1], 10),\n        g: parseInt(rgb[2], 10),\n        b: parseInt(rgb[3], 10)\n      };\n    } else {\n      return {\n        r: 0,\n        g: 0,\n        b: 0\n      };\n    }\n  },\n  colorToRGBA: function colorToRGBA(str) {\n    str = str || 'black';\n    return Util._namedColorToRBA(str) || Util._hex3ColorToRGBA(str) || Util._hex6ColorToRGBA(str) || Util._rgbColorToRGBA(str) || Util._rgbaColorToRGBA(str) || Util._hslColorToRGBA(str);\n  },\n  _namedColorToRBA: function _namedColorToRBA(str) {\n    var c = COLORS[str.toLowerCase()];\n\n    if (!c) {\n      return null;\n    }\n\n    return {\n      r: c[0],\n      g: c[1],\n      b: c[2],\n      a: 1\n    };\n  },\n  _rgbColorToRGBA: function _rgbColorToRGBA(str) {\n    if (str.indexOf('rgb(') === 0) {\n      str = str.match(/rgb\\(([^)]+)\\)/)[1];\n      var parts = str.split(/ *, */).map(Number);\n      return {\n        r: parts[0],\n        g: parts[1],\n        b: parts[2],\n        a: 1\n      };\n    }\n  },\n  _rgbaColorToRGBA: function _rgbaColorToRGBA(str) {\n    if (str.indexOf('rgba(') === 0) {\n      str = str.match(/rgba\\(([^)]+)\\)/)[1];\n      var parts = str.split(/ *, */).map(Number);\n      return {\n        r: parts[0],\n        g: parts[1],\n        b: parts[2],\n        a: parts[3]\n      };\n    }\n  },\n  _hex6ColorToRGBA: function _hex6ColorToRGBA(str) {\n    if (str[0] === '#' && str.length === 7) {\n      return {\n        r: parseInt(str.slice(1, 3), 16),\n        g: parseInt(str.slice(3, 5), 16),\n        b: parseInt(str.slice(5, 7), 16),\n        a: 1\n      };\n    }\n  },\n  _hex3ColorToRGBA: function _hex3ColorToRGBA(str) {\n    if (str[0] === '#' && str.length === 4) {\n      return {\n        r: parseInt(str[1] + str[1], 16),\n        g: parseInt(str[2] + str[2], 16),\n        b: parseInt(str[3] + str[3], 16),\n        a: 1\n      };\n    }\n  },\n  _hslColorToRGBA: function _hslColorToRGBA(str) {\n    if (/hsl\\((\\d+),\\s*([\\d.]+)%,\\s*([\\d.]+)%\\)/g.test(str)) {\n      var _$exec = /hsl\\((\\d+),\\s*([\\d.]+)%,\\s*([\\d.]+)%\\)/g.exec(str),\n          _$exec2 = _toArray(_$exec),\n          _ = _$exec2[0],\n          hsl = _$exec2.slice(1);\n\n      var h = Number(hsl[0]) / 360;\n      var s = Number(hsl[1]) / 100;\n      var l = Number(hsl[2]) / 100;\n      var t2;\n      var t3;\n      var val;\n\n      if (s === 0) {\n        val = l * 255;\n        return {\n          r: Math.round(val),\n          g: Math.round(val),\n          b: Math.round(val),\n          a: 1\n        };\n      }\n\n      if (l < 0.5) {\n        t2 = l * (1 + s);\n      } else {\n        t2 = l + s - l * s;\n      }\n\n      var t1 = 2 * l - t2;\n      var rgb = [0, 0, 0];\n\n      for (var i = 0; i < 3; i++) {\n        t3 = h + 1 / 3 * -(i - 1);\n\n        if (t3 < 0) {\n          t3++;\n        }\n\n        if (t3 > 1) {\n          t3--;\n        }\n\n        if (6 * t3 < 1) {\n          val = t1 + (t2 - t1) * 6 * t3;\n        } else if (2 * t3 < 1) {\n          val = t2;\n        } else if (3 * t3 < 2) {\n          val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n        } else {\n          val = t1;\n        }\n\n        rgb[i] = val * 255;\n      }\n\n      return {\n        r: Math.round(rgb[0]),\n        g: Math.round(rgb[1]),\n        b: Math.round(rgb[2]),\n        a: 1\n      };\n    }\n  },\n  haveIntersection: function haveIntersection(r1, r2) {\n    return !(r2.x > r1.x + r1.width || r2.x + r2.width < r1.x || r2.y > r1.y + r1.height || r2.y + r2.height < r1.y);\n  },\n  cloneObject: function cloneObject(obj) {\n    var retObj = {};\n\n    for (var key in obj) {\n      if (this._isPlainObject(obj[key])) {\n        retObj[key] = this.cloneObject(obj[key]);\n      } else if (this._isArray(obj[key])) {\n        retObj[key] = this.cloneArray(obj[key]);\n      } else {\n        retObj[key] = obj[key];\n      }\n    }\n\n    return retObj;\n  },\n  cloneArray: function cloneArray(arr) {\n    return arr.slice(0);\n  },\n  degToRad: function degToRad(deg) {\n    return deg * PI_OVER_DEG180;\n  },\n  radToDeg: function radToDeg(rad) {\n    return rad * DEG180_OVER_PI;\n  },\n  _degToRad: function _degToRad(deg) {\n    Util.warn('Util._degToRad is removed. Please use public Util.degToRad instead.');\n    return Util.degToRad(deg);\n  },\n  _radToDeg: function _radToDeg(rad) {\n    Util.warn('Util._radToDeg is removed. Please use public Util.radToDeg instead.');\n    return Util.radToDeg(rad);\n  },\n  _getRotation: function _getRotation(radians) {\n    return Konva.angleDeg ? Util.radToDeg(radians) : radians;\n  },\n  _capitalize: function _capitalize(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n  },\n  throw: function _throw(str) {\n    throw new Error(KONVA_ERROR + str);\n  },\n  error: function error(str) {\n    console.error(KONVA_ERROR + str);\n  },\n  warn: function warn(str) {\n    if (!Konva.showWarnings) {\n      return;\n    }\n\n    console.warn(KONVA_WARNING + str);\n  },\n  each: function each(obj, func) {\n    for (var key in obj) {\n      func(key, obj[key]);\n    }\n  },\n  _inRange: function _inRange(val, left, right) {\n    return left <= val && val < right;\n  },\n  _getProjectionToSegment: function _getProjectionToSegment(x1, y1, x2, y2, x3, y3) {\n    var x, y, dist;\n    var pd2 = (x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2);\n\n    if (pd2 == 0) {\n      x = x1;\n      y = y1;\n      dist = (x3 - x2) * (x3 - x2) + (y3 - y2) * (y3 - y2);\n    } else {\n      var u = ((x3 - x1) * (x2 - x1) + (y3 - y1) * (y2 - y1)) / pd2;\n\n      if (u < 0) {\n        x = x1;\n        y = y1;\n        dist = (x1 - x3) * (x1 - x3) + (y1 - y3) * (y1 - y3);\n      } else if (u > 1.0) {\n        x = x2;\n        y = y2;\n        dist = (x2 - x3) * (x2 - x3) + (y2 - y3) * (y2 - y3);\n      } else {\n        x = x1 + u * (x2 - x1);\n        y = y1 + u * (y2 - y1);\n        dist = (x - x3) * (x - x3) + (y - y3) * (y - y3);\n      }\n    }\n\n    return [x, y, dist];\n  },\n  _getProjectionToLine: function _getProjectionToLine(pt, line, isClosed) {\n    var pc = Util.cloneObject(pt);\n    var dist = Number.MAX_VALUE;\n    line.forEach(function (p1, i) {\n      if (!isClosed && i === line.length - 1) {\n        return;\n      }\n\n      var p2 = line[(i + 1) % line.length];\n\n      var proj = Util._getProjectionToSegment(p1.x, p1.y, p2.x, p2.y, pt.x, pt.y);\n\n      var px = proj[0],\n          py = proj[1],\n          pdist = proj[2];\n\n      if (pdist < dist) {\n        pc.x = px;\n        pc.y = py;\n        dist = pdist;\n      }\n    });\n    return pc;\n  },\n  _prepareArrayForTween: function _prepareArrayForTween(startArray, endArray, isClosed) {\n    var n,\n        start = [],\n        end = [];\n\n    if (startArray.length > endArray.length) {\n      var temp = endArray;\n      endArray = startArray;\n      startArray = temp;\n    }\n\n    for (n = 0; n < startArray.length; n += 2) {\n      start.push({\n        x: startArray[n],\n        y: startArray[n + 1]\n      });\n    }\n\n    for (n = 0; n < endArray.length; n += 2) {\n      end.push({\n        x: endArray[n],\n        y: endArray[n + 1]\n      });\n    }\n\n    var newStart = [];\n    end.forEach(function (point) {\n      var pr = Util._getProjectionToLine(point, start, isClosed);\n\n      newStart.push(pr.x);\n      newStart.push(pr.y);\n    });\n    return newStart;\n  },\n  _prepareToStringify: function _prepareToStringify(obj) {\n    var desc;\n    obj.visitedByCircularReferenceRemoval = true;\n\n    for (var key in obj) {\n      if (!(obj.hasOwnProperty(key) && obj[key] && typeof obj[key] == 'object')) {\n        continue;\n      }\n\n      desc = Object.getOwnPropertyDescriptor(obj, key);\n\n      if (obj[key].visitedByCircularReferenceRemoval || Util._isElement(obj[key])) {\n        if (desc.configurable) {\n          delete obj[key];\n        } else {\n          return null;\n        }\n      } else if (Util._prepareToStringify(obj[key]) === null) {\n        if (desc.configurable) {\n          delete obj[key];\n        } else {\n          return null;\n        }\n      }\n    }\n\n    delete obj.visitedByCircularReferenceRemoval;\n    return obj;\n  },\n  _assign: function _assign(target, source) {\n    for (var key in source) {\n      target[key] = source[key];\n    }\n\n    return target;\n  },\n  _getFirstPointerId: function _getFirstPointerId(evt) {\n    if (!evt.touches) {\n      return evt.pointerId || 999;\n    } else {\n      return evt.changedTouches[0].identifier;\n    }\n  }\n};","map":{"version":3,"sources":["/Users/pbivrell/light/light/node_modules/konva/lib/Util.js"],"names":["Konva","Transform","m","dirty","slice","tr","point","x","y","sx","sy","rad","c","Math","cos","s","sin","m11","m12","m21","m22","matrix","dx","dy","d","m0","m1","m2","m3","m4","m5","yt","xt","translate","a","b","e","f","delta","result","rotation","scaleX","scaleY","skewX","skewY","r","sqrt","acos","PI","Util","_getRotation","OBJECT_ARRAY","OBJECT_NUMBER","OBJECT_STRING","OBJECT_BOOLEAN","PI_OVER_DEG180","DEG180_OVER_PI","HASH","EMPTY_STRING","ZERO","KONVA_WARNING","KONVA_ERROR","RGB_PAREN","COLORS","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","transparent","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","RGB_REGEX","animQueue","req","requestAnimationFrame","setTimeout","_isElement","obj","nodeType","_isFunction","constructor","call","apply","_isPlainObject","Object","_isArray","prototype","toString","_isNumber","isNaN","isFinite","_isString","_isBoolean","isObject","val","isValidSelector","selector","firstChar","toUpperCase","_sign","number","requestAnimFrame","callback","push","length","queue","forEach","cb","createCanvasElement","canvas","document","createElement","style","createImageElement","_isInDocument","el","parentNode","_urlToImage","url","imageObj","onload","src","_rgbToHex","g","_hexToRgb","hex","replace","bigint","parseInt","getRandomColor","randColor","random","getRGB","color","rgb","substring","substr","exec","colorToRGBA","str","_namedColorToRBA","_hex3ColorToRGBA","_hex6ColorToRGBA","_rgbColorToRGBA","_rgbaColorToRGBA","_hslColorToRGBA","toLowerCase","indexOf","match","parts","split","map","Number","test","_","hsl","h","l","t2","t3","round","t1","i","haveIntersection","r1","r2","width","height","cloneObject","retObj","key","cloneArray","arr","degToRad","deg","radToDeg","_degToRad","warn","_radToDeg","radians","angleDeg","_capitalize","charAt","throw","Error","error","console","showWarnings","each","func","_inRange","left","right","_getProjectionToSegment","x1","y1","x2","y2","x3","y3","dist","pd2","u","_getProjectionToLine","pt","line","isClosed","pc","MAX_VALUE","p1","p2","proj","px","py","pdist","_prepareArrayForTween","startArray","endArray","n","start","end","temp","newStart","pr","_prepareToStringify","desc","visitedByCircularReferenceRemoval","hasOwnProperty","getOwnPropertyDescriptor","configurable","_assign","target","source","_getFirstPointerId","evt","touches","pointerId","changedTouches","identifier"],"mappings":"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","sourcesContent":["import { Konva } from './Global.js';\nexport class Transform {\n    constructor(m = [1, 0, 0, 1, 0, 0]) {\n        this.dirty = false;\n        this.m = (m && m.slice()) || [1, 0, 0, 1, 0, 0];\n    }\n    reset() {\n        this.m[0] = 1;\n        this.m[1] = 0;\n        this.m[2] = 0;\n        this.m[3] = 1;\n        this.m[4] = 0;\n        this.m[5] = 0;\n    }\n    copy() {\n        return new Transform(this.m);\n    }\n    copyInto(tr) {\n        tr.m[0] = this.m[0];\n        tr.m[1] = this.m[1];\n        tr.m[2] = this.m[2];\n        tr.m[3] = this.m[3];\n        tr.m[4] = this.m[4];\n        tr.m[5] = this.m[5];\n    }\n    point(point) {\n        var m = this.m;\n        return {\n            x: m[0] * point.x + m[2] * point.y + m[4],\n            y: m[1] * point.x + m[3] * point.y + m[5],\n        };\n    }\n    translate(x, y) {\n        this.m[4] += this.m[0] * x + this.m[2] * y;\n        this.m[5] += this.m[1] * x + this.m[3] * y;\n        return this;\n    }\n    scale(sx, sy) {\n        this.m[0] *= sx;\n        this.m[1] *= sx;\n        this.m[2] *= sy;\n        this.m[3] *= sy;\n        return this;\n    }\n    rotate(rad) {\n        var c = Math.cos(rad);\n        var s = Math.sin(rad);\n        var m11 = this.m[0] * c + this.m[2] * s;\n        var m12 = this.m[1] * c + this.m[3] * s;\n        var m21 = this.m[0] * -s + this.m[2] * c;\n        var m22 = this.m[1] * -s + this.m[3] * c;\n        this.m[0] = m11;\n        this.m[1] = m12;\n        this.m[2] = m21;\n        this.m[3] = m22;\n        return this;\n    }\n    getTranslation() {\n        return {\n            x: this.m[4],\n            y: this.m[5],\n        };\n    }\n    skew(sx, sy) {\n        var m11 = this.m[0] + this.m[2] * sy;\n        var m12 = this.m[1] + this.m[3] * sy;\n        var m21 = this.m[2] + this.m[0] * sx;\n        var m22 = this.m[3] + this.m[1] * sx;\n        this.m[0] = m11;\n        this.m[1] = m12;\n        this.m[2] = m21;\n        this.m[3] = m22;\n        return this;\n    }\n    multiply(matrix) {\n        var m11 = this.m[0] * matrix.m[0] + this.m[2] * matrix.m[1];\n        var m12 = this.m[1] * matrix.m[0] + this.m[3] * matrix.m[1];\n        var m21 = this.m[0] * matrix.m[2] + this.m[2] * matrix.m[3];\n        var m22 = this.m[1] * matrix.m[2] + this.m[3] * matrix.m[3];\n        var dx = this.m[0] * matrix.m[4] + this.m[2] * matrix.m[5] + this.m[4];\n        var dy = this.m[1] * matrix.m[4] + this.m[3] * matrix.m[5] + this.m[5];\n        this.m[0] = m11;\n        this.m[1] = m12;\n        this.m[2] = m21;\n        this.m[3] = m22;\n        this.m[4] = dx;\n        this.m[5] = dy;\n        return this;\n    }\n    invert() {\n        var d = 1 / (this.m[0] * this.m[3] - this.m[1] * this.m[2]);\n        var m0 = this.m[3] * d;\n        var m1 = -this.m[1] * d;\n        var m2 = -this.m[2] * d;\n        var m3 = this.m[0] * d;\n        var m4 = d * (this.m[2] * this.m[5] - this.m[3] * this.m[4]);\n        var m5 = d * (this.m[1] * this.m[4] - this.m[0] * this.m[5]);\n        this.m[0] = m0;\n        this.m[1] = m1;\n        this.m[2] = m2;\n        this.m[3] = m3;\n        this.m[4] = m4;\n        this.m[5] = m5;\n        return this;\n    }\n    getMatrix() {\n        return this.m;\n    }\n    setAbsolutePosition(x, y) {\n        var m0 = this.m[0], m1 = this.m[1], m2 = this.m[2], m3 = this.m[3], m4 = this.m[4], m5 = this.m[5], yt = (m0 * (y - m5) - m1 * (x - m4)) / (m0 * m3 - m1 * m2), xt = (x - m4 - m2 * yt) / m0;\n        return this.translate(xt, yt);\n    }\n    decompose() {\n        var a = this.m[0];\n        var b = this.m[1];\n        var c = this.m[2];\n        var d = this.m[3];\n        var e = this.m[4];\n        var f = this.m[5];\n        var delta = a * d - b * c;\n        let result = {\n            x: e,\n            y: f,\n            rotation: 0,\n            scaleX: 0,\n            scaleY: 0,\n            skewX: 0,\n            skewY: 0,\n        };\n        if (a != 0 || b != 0) {\n            var r = Math.sqrt(a * a + b * b);\n            result.rotation = b > 0 ? Math.acos(a / r) : -Math.acos(a / r);\n            result.scaleX = r;\n            result.scaleY = delta / r;\n            result.skewX = (a * c + b * d) / delta;\n            result.skewY = 0;\n        }\n        else if (c != 0 || d != 0) {\n            var s = Math.sqrt(c * c + d * d);\n            result.rotation =\n                Math.PI / 2 - (d > 0 ? Math.acos(-c / s) : -Math.acos(c / s));\n            result.scaleX = delta / s;\n            result.scaleY = s;\n            result.skewX = 0;\n            result.skewY = (a * c + b * d) / delta;\n        }\n        else {\n        }\n        result.rotation = Util._getRotation(result.rotation);\n        return result;\n    }\n}\nvar OBJECT_ARRAY = '[object Array]', OBJECT_NUMBER = '[object Number]', OBJECT_STRING = '[object String]', OBJECT_BOOLEAN = '[object Boolean]', PI_OVER_DEG180 = Math.PI / 180, DEG180_OVER_PI = 180 / Math.PI, HASH = '#', EMPTY_STRING = '', ZERO = '0', KONVA_WARNING = 'Konva warning: ', KONVA_ERROR = 'Konva error: ', RGB_PAREN = 'rgb(', COLORS = {\n    aliceblue: [240, 248, 255],\n    antiquewhite: [250, 235, 215],\n    aqua: [0, 255, 255],\n    aquamarine: [127, 255, 212],\n    azure: [240, 255, 255],\n    beige: [245, 245, 220],\n    bisque: [255, 228, 196],\n    black: [0, 0, 0],\n    blanchedalmond: [255, 235, 205],\n    blue: [0, 0, 255],\n    blueviolet: [138, 43, 226],\n    brown: [165, 42, 42],\n    burlywood: [222, 184, 135],\n    cadetblue: [95, 158, 160],\n    chartreuse: [127, 255, 0],\n    chocolate: [210, 105, 30],\n    coral: [255, 127, 80],\n    cornflowerblue: [100, 149, 237],\n    cornsilk: [255, 248, 220],\n    crimson: [220, 20, 60],\n    cyan: [0, 255, 255],\n    darkblue: [0, 0, 139],\n    darkcyan: [0, 139, 139],\n    darkgoldenrod: [184, 132, 11],\n    darkgray: [169, 169, 169],\n    darkgreen: [0, 100, 0],\n    darkgrey: [169, 169, 169],\n    darkkhaki: [189, 183, 107],\n    darkmagenta: [139, 0, 139],\n    darkolivegreen: [85, 107, 47],\n    darkorange: [255, 140, 0],\n    darkorchid: [153, 50, 204],\n    darkred: [139, 0, 0],\n    darksalmon: [233, 150, 122],\n    darkseagreen: [143, 188, 143],\n    darkslateblue: [72, 61, 139],\n    darkslategray: [47, 79, 79],\n    darkslategrey: [47, 79, 79],\n    darkturquoise: [0, 206, 209],\n    darkviolet: [148, 0, 211],\n    deeppink: [255, 20, 147],\n    deepskyblue: [0, 191, 255],\n    dimgray: [105, 105, 105],\n    dimgrey: [105, 105, 105],\n    dodgerblue: [30, 144, 255],\n    firebrick: [178, 34, 34],\n    floralwhite: [255, 255, 240],\n    forestgreen: [34, 139, 34],\n    fuchsia: [255, 0, 255],\n    gainsboro: [220, 220, 220],\n    ghostwhite: [248, 248, 255],\n    gold: [255, 215, 0],\n    goldenrod: [218, 165, 32],\n    gray: [128, 128, 128],\n    green: [0, 128, 0],\n    greenyellow: [173, 255, 47],\n    grey: [128, 128, 128],\n    honeydew: [240, 255, 240],\n    hotpink: [255, 105, 180],\n    indianred: [205, 92, 92],\n    indigo: [75, 0, 130],\n    ivory: [255, 255, 240],\n    khaki: [240, 230, 140],\n    lavender: [230, 230, 250],\n    lavenderblush: [255, 240, 245],\n    lawngreen: [124, 252, 0],\n    lemonchiffon: [255, 250, 205],\n    lightblue: [173, 216, 230],\n    lightcoral: [240, 128, 128],\n    lightcyan: [224, 255, 255],\n    lightgoldenrodyellow: [250, 250, 210],\n    lightgray: [211, 211, 211],\n    lightgreen: [144, 238, 144],\n    lightgrey: [211, 211, 211],\n    lightpink: [255, 182, 193],\n    lightsalmon: [255, 160, 122],\n    lightseagreen: [32, 178, 170],\n    lightskyblue: [135, 206, 250],\n    lightslategray: [119, 136, 153],\n    lightslategrey: [119, 136, 153],\n    lightsteelblue: [176, 196, 222],\n    lightyellow: [255, 255, 224],\n    lime: [0, 255, 0],\n    limegreen: [50, 205, 50],\n    linen: [250, 240, 230],\n    magenta: [255, 0, 255],\n    maroon: [128, 0, 0],\n    mediumaquamarine: [102, 205, 170],\n    mediumblue: [0, 0, 205],\n    mediumorchid: [186, 85, 211],\n    mediumpurple: [147, 112, 219],\n    mediumseagreen: [60, 179, 113],\n    mediumslateblue: [123, 104, 238],\n    mediumspringgreen: [0, 250, 154],\n    mediumturquoise: [72, 209, 204],\n    mediumvioletred: [199, 21, 133],\n    midnightblue: [25, 25, 112],\n    mintcream: [245, 255, 250],\n    mistyrose: [255, 228, 225],\n    moccasin: [255, 228, 181],\n    navajowhite: [255, 222, 173],\n    navy: [0, 0, 128],\n    oldlace: [253, 245, 230],\n    olive: [128, 128, 0],\n    olivedrab: [107, 142, 35],\n    orange: [255, 165, 0],\n    orangered: [255, 69, 0],\n    orchid: [218, 112, 214],\n    palegoldenrod: [238, 232, 170],\n    palegreen: [152, 251, 152],\n    paleturquoise: [175, 238, 238],\n    palevioletred: [219, 112, 147],\n    papayawhip: [255, 239, 213],\n    peachpuff: [255, 218, 185],\n    peru: [205, 133, 63],\n    pink: [255, 192, 203],\n    plum: [221, 160, 203],\n    powderblue: [176, 224, 230],\n    purple: [128, 0, 128],\n    rebeccapurple: [102, 51, 153],\n    red: [255, 0, 0],\n    rosybrown: [188, 143, 143],\n    royalblue: [65, 105, 225],\n    saddlebrown: [139, 69, 19],\n    salmon: [250, 128, 114],\n    sandybrown: [244, 164, 96],\n    seagreen: [46, 139, 87],\n    seashell: [255, 245, 238],\n    sienna: [160, 82, 45],\n    silver: [192, 192, 192],\n    skyblue: [135, 206, 235],\n    slateblue: [106, 90, 205],\n    slategray: [119, 128, 144],\n    slategrey: [119, 128, 144],\n    snow: [255, 255, 250],\n    springgreen: [0, 255, 127],\n    steelblue: [70, 130, 180],\n    tan: [210, 180, 140],\n    teal: [0, 128, 128],\n    thistle: [216, 191, 216],\n    transparent: [255, 255, 255, 0],\n    tomato: [255, 99, 71],\n    turquoise: [64, 224, 208],\n    violet: [238, 130, 238],\n    wheat: [245, 222, 179],\n    white: [255, 255, 255],\n    whitesmoke: [245, 245, 245],\n    yellow: [255, 255, 0],\n    yellowgreen: [154, 205, 5],\n}, RGB_REGEX = /rgb\\((\\d{1,3}),(\\d{1,3}),(\\d{1,3})\\)/, animQueue = [];\nconst req = (typeof requestAnimationFrame !== 'undefined' && requestAnimationFrame) ||\n    function (f) {\n        setTimeout(f, 60);\n    };\nexport const Util = {\n    _isElement(obj) {\n        return !!(obj && obj.nodeType == 1);\n    },\n    _isFunction(obj) {\n        return !!(obj && obj.constructor && obj.call && obj.apply);\n    },\n    _isPlainObject(obj) {\n        return !!obj && obj.constructor === Object;\n    },\n    _isArray(obj) {\n        return Object.prototype.toString.call(obj) === OBJECT_ARRAY;\n    },\n    _isNumber(obj) {\n        return (Object.prototype.toString.call(obj) === OBJECT_NUMBER &&\n            !isNaN(obj) &&\n            isFinite(obj));\n    },\n    _isString(obj) {\n        return Object.prototype.toString.call(obj) === OBJECT_STRING;\n    },\n    _isBoolean(obj) {\n        return Object.prototype.toString.call(obj) === OBJECT_BOOLEAN;\n    },\n    isObject(val) {\n        return val instanceof Object;\n    },\n    isValidSelector(selector) {\n        if (typeof selector !== 'string') {\n            return false;\n        }\n        var firstChar = selector[0];\n        return (firstChar === '#' ||\n            firstChar === '.' ||\n            firstChar === firstChar.toUpperCase());\n    },\n    _sign(number) {\n        if (number === 0) {\n            return 1;\n        }\n        if (number > 0) {\n            return 1;\n        }\n        else {\n            return -1;\n        }\n    },\n    requestAnimFrame(callback) {\n        animQueue.push(callback);\n        if (animQueue.length === 1) {\n            req(function () {\n                const queue = animQueue;\n                animQueue = [];\n                queue.forEach(function (cb) {\n                    cb();\n                });\n            });\n        }\n    },\n    createCanvasElement() {\n        var canvas = document.createElement('canvas');\n        try {\n            canvas.style = canvas.style || {};\n        }\n        catch (e) { }\n        return canvas;\n    },\n    createImageElement() {\n        return document.createElement('img');\n    },\n    _isInDocument(el) {\n        while ((el = el.parentNode)) {\n            if (el == document) {\n                return true;\n            }\n        }\n        return false;\n    },\n    _urlToImage(url, callback) {\n        var imageObj = Util.createImageElement();\n        imageObj.onload = function () {\n            callback(imageObj);\n        };\n        imageObj.src = url;\n    },\n    _rgbToHex(r, g, b) {\n        return ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1);\n    },\n    _hexToRgb(hex) {\n        hex = hex.replace(HASH, EMPTY_STRING);\n        var bigint = parseInt(hex, 16);\n        return {\n            r: (bigint >> 16) & 255,\n            g: (bigint >> 8) & 255,\n            b: bigint & 255,\n        };\n    },\n    getRandomColor() {\n        var randColor = ((Math.random() * 0xffffff) << 0).toString(16);\n        while (randColor.length < 6) {\n            randColor = ZERO + randColor;\n        }\n        return HASH + randColor;\n    },\n    getRGB(color) {\n        var rgb;\n        if (color in COLORS) {\n            rgb = COLORS[color];\n            return {\n                r: rgb[0],\n                g: rgb[1],\n                b: rgb[2],\n            };\n        }\n        else if (color[0] === HASH) {\n            return this._hexToRgb(color.substring(1));\n        }\n        else if (color.substr(0, 4) === RGB_PAREN) {\n            rgb = RGB_REGEX.exec(color.replace(/ /g, ''));\n            return {\n                r: parseInt(rgb[1], 10),\n                g: parseInt(rgb[2], 10),\n                b: parseInt(rgb[3], 10),\n            };\n        }\n        else {\n            return {\n                r: 0,\n                g: 0,\n                b: 0,\n            };\n        }\n    },\n    colorToRGBA(str) {\n        str = str || 'black';\n        return (Util._namedColorToRBA(str) ||\n            Util._hex3ColorToRGBA(str) ||\n            Util._hex6ColorToRGBA(str) ||\n            Util._rgbColorToRGBA(str) ||\n            Util._rgbaColorToRGBA(str) ||\n            Util._hslColorToRGBA(str));\n    },\n    _namedColorToRBA(str) {\n        var c = COLORS[str.toLowerCase()];\n        if (!c) {\n            return null;\n        }\n        return {\n            r: c[0],\n            g: c[1],\n            b: c[2],\n            a: 1,\n        };\n    },\n    _rgbColorToRGBA(str) {\n        if (str.indexOf('rgb(') === 0) {\n            str = str.match(/rgb\\(([^)]+)\\)/)[1];\n            var parts = str.split(/ *, */).map(Number);\n            return {\n                r: parts[0],\n                g: parts[1],\n                b: parts[2],\n                a: 1,\n            };\n        }\n    },\n    _rgbaColorToRGBA(str) {\n        if (str.indexOf('rgba(') === 0) {\n            str = str.match(/rgba\\(([^)]+)\\)/)[1];\n            var parts = str.split(/ *, */).map(Number);\n            return {\n                r: parts[0],\n                g: parts[1],\n                b: parts[2],\n                a: parts[3],\n            };\n        }\n    },\n    _hex6ColorToRGBA(str) {\n        if (str[0] === '#' && str.length === 7) {\n            return {\n                r: parseInt(str.slice(1, 3), 16),\n                g: parseInt(str.slice(3, 5), 16),\n                b: parseInt(str.slice(5, 7), 16),\n                a: 1,\n            };\n        }\n    },\n    _hex3ColorToRGBA(str) {\n        if (str[0] === '#' && str.length === 4) {\n            return {\n                r: parseInt(str[1] + str[1], 16),\n                g: parseInt(str[2] + str[2], 16),\n                b: parseInt(str[3] + str[3], 16),\n                a: 1,\n            };\n        }\n    },\n    _hslColorToRGBA(str) {\n        if (/hsl\\((\\d+),\\s*([\\d.]+)%,\\s*([\\d.]+)%\\)/g.test(str)) {\n            const [_, ...hsl] = /hsl\\((\\d+),\\s*([\\d.]+)%,\\s*([\\d.]+)%\\)/g.exec(str);\n            const h = Number(hsl[0]) / 360;\n            const s = Number(hsl[1]) / 100;\n            const l = Number(hsl[2]) / 100;\n            let t2;\n            let t3;\n            let val;\n            if (s === 0) {\n                val = l * 255;\n                return {\n                    r: Math.round(val),\n                    g: Math.round(val),\n                    b: Math.round(val),\n                    a: 1,\n                };\n            }\n            if (l < 0.5) {\n                t2 = l * (1 + s);\n            }\n            else {\n                t2 = l + s - l * s;\n            }\n            const t1 = 2 * l - t2;\n            const rgb = [0, 0, 0];\n            for (let i = 0; i < 3; i++) {\n                t3 = h + (1 / 3) * -(i - 1);\n                if (t3 < 0) {\n                    t3++;\n                }\n                if (t3 > 1) {\n                    t3--;\n                }\n                if (6 * t3 < 1) {\n                    val = t1 + (t2 - t1) * 6 * t3;\n                }\n                else if (2 * t3 < 1) {\n                    val = t2;\n                }\n                else if (3 * t3 < 2) {\n                    val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n                }\n                else {\n                    val = t1;\n                }\n                rgb[i] = val * 255;\n            }\n            return {\n                r: Math.round(rgb[0]),\n                g: Math.round(rgb[1]),\n                b: Math.round(rgb[2]),\n                a: 1,\n            };\n        }\n    },\n    haveIntersection(r1, r2) {\n        return !(r2.x > r1.x + r1.width ||\n            r2.x + r2.width < r1.x ||\n            r2.y > r1.y + r1.height ||\n            r2.y + r2.height < r1.y);\n    },\n    cloneObject(obj) {\n        var retObj = {};\n        for (var key in obj) {\n            if (this._isPlainObject(obj[key])) {\n                retObj[key] = this.cloneObject(obj[key]);\n            }\n            else if (this._isArray(obj[key])) {\n                retObj[key] = this.cloneArray(obj[key]);\n            }\n            else {\n                retObj[key] = obj[key];\n            }\n        }\n        return retObj;\n    },\n    cloneArray(arr) {\n        return arr.slice(0);\n    },\n    degToRad(deg) {\n        return deg * PI_OVER_DEG180;\n    },\n    radToDeg(rad) {\n        return rad * DEG180_OVER_PI;\n    },\n    _degToRad(deg) {\n        Util.warn('Util._degToRad is removed. Please use public Util.degToRad instead.');\n        return Util.degToRad(deg);\n    },\n    _radToDeg(rad) {\n        Util.warn('Util._radToDeg is removed. Please use public Util.radToDeg instead.');\n        return Util.radToDeg(rad);\n    },\n    _getRotation(radians) {\n        return Konva.angleDeg ? Util.radToDeg(radians) : radians;\n    },\n    _capitalize(str) {\n        return str.charAt(0).toUpperCase() + str.slice(1);\n    },\n    throw(str) {\n        throw new Error(KONVA_ERROR + str);\n    },\n    error(str) {\n        console.error(KONVA_ERROR + str);\n    },\n    warn(str) {\n        if (!Konva.showWarnings) {\n            return;\n        }\n        console.warn(KONVA_WARNING + str);\n    },\n    each(obj, func) {\n        for (var key in obj) {\n            func(key, obj[key]);\n        }\n    },\n    _inRange(val, left, right) {\n        return left <= val && val < right;\n    },\n    _getProjectionToSegment(x1, y1, x2, y2, x3, y3) {\n        var x, y, dist;\n        var pd2 = (x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2);\n        if (pd2 == 0) {\n            x = x1;\n            y = y1;\n            dist = (x3 - x2) * (x3 - x2) + (y3 - y2) * (y3 - y2);\n        }\n        else {\n            var u = ((x3 - x1) * (x2 - x1) + (y3 - y1) * (y2 - y1)) / pd2;\n            if (u < 0) {\n                x = x1;\n                y = y1;\n                dist = (x1 - x3) * (x1 - x3) + (y1 - y3) * (y1 - y3);\n            }\n            else if (u > 1.0) {\n                x = x2;\n                y = y2;\n                dist = (x2 - x3) * (x2 - x3) + (y2 - y3) * (y2 - y3);\n            }\n            else {\n                x = x1 + u * (x2 - x1);\n                y = y1 + u * (y2 - y1);\n                dist = (x - x3) * (x - x3) + (y - y3) * (y - y3);\n            }\n        }\n        return [x, y, dist];\n    },\n    _getProjectionToLine(pt, line, isClosed) {\n        var pc = Util.cloneObject(pt);\n        var dist = Number.MAX_VALUE;\n        line.forEach(function (p1, i) {\n            if (!isClosed && i === line.length - 1) {\n                return;\n            }\n            var p2 = line[(i + 1) % line.length];\n            var proj = Util._getProjectionToSegment(p1.x, p1.y, p2.x, p2.y, pt.x, pt.y);\n            var px = proj[0], py = proj[1], pdist = proj[2];\n            if (pdist < dist) {\n                pc.x = px;\n                pc.y = py;\n                dist = pdist;\n            }\n        });\n        return pc;\n    },\n    _prepareArrayForTween(startArray, endArray, isClosed) {\n        var n, start = [], end = [];\n        if (startArray.length > endArray.length) {\n            var temp = endArray;\n            endArray = startArray;\n            startArray = temp;\n        }\n        for (n = 0; n < startArray.length; n += 2) {\n            start.push({\n                x: startArray[n],\n                y: startArray[n + 1],\n            });\n        }\n        for (n = 0; n < endArray.length; n += 2) {\n            end.push({\n                x: endArray[n],\n                y: endArray[n + 1],\n            });\n        }\n        var newStart = [];\n        end.forEach(function (point) {\n            var pr = Util._getProjectionToLine(point, start, isClosed);\n            newStart.push(pr.x);\n            newStart.push(pr.y);\n        });\n        return newStart;\n    },\n    _prepareToStringify(obj) {\n        var desc;\n        obj.visitedByCircularReferenceRemoval = true;\n        for (var key in obj) {\n            if (!(obj.hasOwnProperty(key) && obj[key] && typeof obj[key] == 'object')) {\n                continue;\n            }\n            desc = Object.getOwnPropertyDescriptor(obj, key);\n            if (obj[key].visitedByCircularReferenceRemoval ||\n                Util._isElement(obj[key])) {\n                if (desc.configurable) {\n                    delete obj[key];\n                }\n                else {\n                    return null;\n                }\n            }\n            else if (Util._prepareToStringify(obj[key]) === null) {\n                if (desc.configurable) {\n                    delete obj[key];\n                }\n                else {\n                    return null;\n                }\n            }\n        }\n        delete obj.visitedByCircularReferenceRemoval;\n        return obj;\n    },\n    _assign(target, source) {\n        for (var key in source) {\n            target[key] = source[key];\n        }\n        return target;\n    },\n    _getFirstPointerId(evt) {\n        if (!evt.touches) {\n            return evt.pointerId || 999;\n        }\n        else {\n            return evt.changedTouches[0].identifier;\n        }\n    },\n};\n"]},"metadata":{},"sourceType":"module"}