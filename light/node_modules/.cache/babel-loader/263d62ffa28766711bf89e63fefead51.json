{"ast":null,"code":"import _toConsumableArray from \"/Users/pbivrell/light/light/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/pbivrell/light/light/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/pbivrell/light/light/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/pbivrell/light/light/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/pbivrell/light/light/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { Factory } from '../Factory.js';\nimport { Shape } from '../Shape.js';\nimport { getNumberValidator, getNumberArrayValidator } from '../Validators.js';\nimport { _registerNode } from '../Global.js';\n\nfunction getControlPoints(x0, y0, x1, y1, x2, y2, t) {\n  var d01 = Math.sqrt(Math.pow(x1 - x0, 2) + Math.pow(y1 - y0, 2)),\n      d12 = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2)),\n      fa = t * d01 / (d01 + d12),\n      fb = t * d12 / (d01 + d12),\n      p1x = x1 - fa * (x2 - x0),\n      p1y = y1 - fa * (y2 - y0),\n      p2x = x1 + fb * (x2 - x0),\n      p2y = y1 + fb * (y2 - y0);\n  return [p1x, p1y, p2x, p2y];\n}\n\nfunction expandPoints(p, tension) {\n  var len = p.length,\n      allPoints = [],\n      n,\n      cp;\n\n  for (n = 2; n < len - 2; n += 2) {\n    cp = getControlPoints(p[n - 2], p[n - 1], p[n], p[n + 1], p[n + 2], p[n + 3], tension);\n\n    if (isNaN(cp[0])) {\n      continue;\n    }\n\n    allPoints.push(cp[0]);\n    allPoints.push(cp[1]);\n    allPoints.push(p[n]);\n    allPoints.push(p[n + 1]);\n    allPoints.push(cp[2]);\n    allPoints.push(cp[3]);\n  }\n\n  return allPoints;\n}\n\nexport var Line = /*#__PURE__*/function (_Shape) {\n  _inherits(Line, _Shape);\n\n  var _super = _createSuper(Line);\n\n  function Line(config) {\n    var _this;\n\n    _classCallCheck(this, Line);\n\n    _this = _super.call(this, config);\n\n    _this.on('pointsChange.konva tensionChange.konva closedChange.konva bezierChange.konva', function () {\n      this._clearCache('tensionPoints');\n    });\n\n    return _this;\n  }\n\n  _createClass(Line, [{\n    key: \"_sceneFunc\",\n    value: function _sceneFunc(context) {\n      var points = this.points(),\n          length = points.length,\n          tension = this.tension(),\n          closed = this.closed(),\n          bezier = this.bezier(),\n          tp,\n          len,\n          n;\n\n      if (!length) {\n        return;\n      }\n\n      context.beginPath();\n      context.moveTo(points[0], points[1]);\n\n      if (tension !== 0 && length > 4) {\n        tp = this.getTensionPoints();\n        len = tp.length;\n        n = closed ? 0 : 4;\n\n        if (!closed) {\n          context.quadraticCurveTo(tp[0], tp[1], tp[2], tp[3]);\n        }\n\n        while (n < len - 2) {\n          context.bezierCurveTo(tp[n++], tp[n++], tp[n++], tp[n++], tp[n++], tp[n++]);\n        }\n\n        if (!closed) {\n          context.quadraticCurveTo(tp[len - 2], tp[len - 1], points[length - 2], points[length - 1]);\n        }\n      } else if (bezier) {\n        n = 2;\n\n        while (n < length) {\n          context.bezierCurveTo(points[n++], points[n++], points[n++], points[n++], points[n++], points[n++]);\n        }\n      } else {\n        for (n = 2; n < length; n += 2) {\n          context.lineTo(points[n], points[n + 1]);\n        }\n      }\n\n      if (closed) {\n        context.closePath();\n        context.fillStrokeShape(this);\n      } else {\n        context.strokeShape(this);\n      }\n    }\n  }, {\n    key: \"getTensionPoints\",\n    value: function getTensionPoints() {\n      return this._getCache('tensionPoints', this._getTensionPoints);\n    }\n  }, {\n    key: \"_getTensionPoints\",\n    value: function _getTensionPoints() {\n      if (this.closed()) {\n        return this._getTensionPointsClosed();\n      } else {\n        return expandPoints(this.points(), this.tension());\n      }\n    }\n  }, {\n    key: \"_getTensionPointsClosed\",\n    value: function _getTensionPointsClosed() {\n      var p = this.points(),\n          len = p.length,\n          tension = this.tension(),\n          firstControlPoints = getControlPoints(p[len - 2], p[len - 1], p[0], p[1], p[2], p[3], tension),\n          lastControlPoints = getControlPoints(p[len - 4], p[len - 3], p[len - 2], p[len - 1], p[0], p[1], tension),\n          middle = expandPoints(p, tension),\n          tp = [firstControlPoints[2], firstControlPoints[3]].concat(middle).concat([lastControlPoints[0], lastControlPoints[1], p[len - 2], p[len - 1], lastControlPoints[2], lastControlPoints[3], firstControlPoints[0], firstControlPoints[1], p[0], p[1]]);\n      return tp;\n    }\n  }, {\n    key: \"getWidth\",\n    value: function getWidth() {\n      return this.getSelfRect().width;\n    }\n  }, {\n    key: \"getHeight\",\n    value: function getHeight() {\n      return this.getSelfRect().height;\n    }\n  }, {\n    key: \"getSelfRect\",\n    value: function getSelfRect() {\n      var points = this.points();\n\n      if (points.length < 4) {\n        return {\n          x: points[0] || 0,\n          y: points[1] || 0,\n          width: 0,\n          height: 0\n        };\n      }\n\n      if (this.tension() !== 0) {\n        points = [points[0], points[1]].concat(_toConsumableArray(this._getTensionPoints()), [points[points.length - 2], points[points.length - 1]]);\n      } else {\n        points = this.points();\n      }\n\n      var minX = points[0];\n      var maxX = points[0];\n      var minY = points[1];\n      var maxY = points[1];\n      var x, y;\n\n      for (var i = 0; i < points.length / 2; i++) {\n        x = points[i * 2];\n        y = points[i * 2 + 1];\n        minX = Math.min(minX, x);\n        maxX = Math.max(maxX, x);\n        minY = Math.min(minY, y);\n        maxY = Math.max(maxY, y);\n      }\n\n      return {\n        x: minX,\n        y: minY,\n        width: maxX - minX,\n        height: maxY - minY\n      };\n    }\n  }]);\n\n  return Line;\n}(Shape);\nLine.prototype.className = 'Line';\nLine.prototype._attrsAffectingSize = ['points', 'bezier', 'tension'];\n\n_registerNode(Line);\n\nFactory.addGetterSetter(Line, 'closed', false);\nFactory.addGetterSetter(Line, 'bezier', false);\nFactory.addGetterSetter(Line, 'tension', 0, getNumberValidator());\nFactory.addGetterSetter(Line, 'points', [], getNumberArrayValidator());","map":{"version":3,"sources":["/Users/pbivrell/light/light/node_modules/konva/lib/shapes/Line.js"],"names":["Factory","Shape","getNumberValidator","getNumberArrayValidator","_registerNode","getControlPoints","x0","y0","x1","y1","x2","y2","t","d01","Math","sqrt","pow","d12","fa","fb","p1x","p1y","p2x","p2y","expandPoints","p","tension","len","length","allPoints","n","cp","isNaN","push","Line","config","on","_clearCache","context","points","closed","bezier","tp","beginPath","moveTo","getTensionPoints","quadraticCurveTo","bezierCurveTo","lineTo","closePath","fillStrokeShape","strokeShape","_getCache","_getTensionPoints","_getTensionPointsClosed","firstControlPoints","lastControlPoints","middle","concat","getSelfRect","width","height","x","y","minX","maxX","minY","maxY","i","min","max","prototype","className","_attrsAffectingSize","addGetterSetter"],"mappings":"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","sourcesContent":["import { Factory } from '../Factory.js';\nimport { Shape } from '../Shape.js';\nimport { getNumberValidator, getNumberArrayValidator } from '../Validators.js';\nimport { _registerNode } from '../Global.js';\nfunction getControlPoints(x0, y0, x1, y1, x2, y2, t) {\n    var d01 = Math.sqrt(Math.pow(x1 - x0, 2) + Math.pow(y1 - y0, 2)), d12 = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2)), fa = (t * d01) / (d01 + d12), fb = (t * d12) / (d01 + d12), p1x = x1 - fa * (x2 - x0), p1y = y1 - fa * (y2 - y0), p2x = x1 + fb * (x2 - x0), p2y = y1 + fb * (y2 - y0);\n    return [p1x, p1y, p2x, p2y];\n}\nfunction expandPoints(p, tension) {\n    var len = p.length, allPoints = [], n, cp;\n    for (n = 2; n < len - 2; n += 2) {\n        cp = getControlPoints(p[n - 2], p[n - 1], p[n], p[n + 1], p[n + 2], p[n + 3], tension);\n        if (isNaN(cp[0])) {\n            continue;\n        }\n        allPoints.push(cp[0]);\n        allPoints.push(cp[1]);\n        allPoints.push(p[n]);\n        allPoints.push(p[n + 1]);\n        allPoints.push(cp[2]);\n        allPoints.push(cp[3]);\n    }\n    return allPoints;\n}\nexport class Line extends Shape {\n    constructor(config) {\n        super(config);\n        this.on('pointsChange.konva tensionChange.konva closedChange.konva bezierChange.konva', function () {\n            this._clearCache('tensionPoints');\n        });\n    }\n    _sceneFunc(context) {\n        var points = this.points(), length = points.length, tension = this.tension(), closed = this.closed(), bezier = this.bezier(), tp, len, n;\n        if (!length) {\n            return;\n        }\n        context.beginPath();\n        context.moveTo(points[0], points[1]);\n        if (tension !== 0 && length > 4) {\n            tp = this.getTensionPoints();\n            len = tp.length;\n            n = closed ? 0 : 4;\n            if (!closed) {\n                context.quadraticCurveTo(tp[0], tp[1], tp[2], tp[3]);\n            }\n            while (n < len - 2) {\n                context.bezierCurveTo(tp[n++], tp[n++], tp[n++], tp[n++], tp[n++], tp[n++]);\n            }\n            if (!closed) {\n                context.quadraticCurveTo(tp[len - 2], tp[len - 1], points[length - 2], points[length - 1]);\n            }\n        }\n        else if (bezier) {\n            n = 2;\n            while (n < length) {\n                context.bezierCurveTo(points[n++], points[n++], points[n++], points[n++], points[n++], points[n++]);\n            }\n        }\n        else {\n            for (n = 2; n < length; n += 2) {\n                context.lineTo(points[n], points[n + 1]);\n            }\n        }\n        if (closed) {\n            context.closePath();\n            context.fillStrokeShape(this);\n        }\n        else {\n            context.strokeShape(this);\n        }\n    }\n    getTensionPoints() {\n        return this._getCache('tensionPoints', this._getTensionPoints);\n    }\n    _getTensionPoints() {\n        if (this.closed()) {\n            return this._getTensionPointsClosed();\n        }\n        else {\n            return expandPoints(this.points(), this.tension());\n        }\n    }\n    _getTensionPointsClosed() {\n        var p = this.points(), len = p.length, tension = this.tension(), firstControlPoints = getControlPoints(p[len - 2], p[len - 1], p[0], p[1], p[2], p[3], tension), lastControlPoints = getControlPoints(p[len - 4], p[len - 3], p[len - 2], p[len - 1], p[0], p[1], tension), middle = expandPoints(p, tension), tp = [firstControlPoints[2], firstControlPoints[3]]\n            .concat(middle)\n            .concat([\n            lastControlPoints[0],\n            lastControlPoints[1],\n            p[len - 2],\n            p[len - 1],\n            lastControlPoints[2],\n            lastControlPoints[3],\n            firstControlPoints[0],\n            firstControlPoints[1],\n            p[0],\n            p[1],\n        ]);\n        return tp;\n    }\n    getWidth() {\n        return this.getSelfRect().width;\n    }\n    getHeight() {\n        return this.getSelfRect().height;\n    }\n    getSelfRect() {\n        var points = this.points();\n        if (points.length < 4) {\n            return {\n                x: points[0] || 0,\n                y: points[1] || 0,\n                width: 0,\n                height: 0,\n            };\n        }\n        if (this.tension() !== 0) {\n            points = [\n                points[0],\n                points[1],\n                ...this._getTensionPoints(),\n                points[points.length - 2],\n                points[points.length - 1],\n            ];\n        }\n        else {\n            points = this.points();\n        }\n        var minX = points[0];\n        var maxX = points[0];\n        var minY = points[1];\n        var maxY = points[1];\n        var x, y;\n        for (var i = 0; i < points.length / 2; i++) {\n            x = points[i * 2];\n            y = points[i * 2 + 1];\n            minX = Math.min(minX, x);\n            maxX = Math.max(maxX, x);\n            minY = Math.min(minY, y);\n            maxY = Math.max(maxY, y);\n        }\n        return {\n            x: minX,\n            y: minY,\n            width: maxX - minX,\n            height: maxY - minY,\n        };\n    }\n}\nLine.prototype.className = 'Line';\nLine.prototype._attrsAffectingSize = ['points', 'bezier', 'tension'];\n_registerNode(Line);\nFactory.addGetterSetter(Line, 'closed', false);\nFactory.addGetterSetter(Line, 'bezier', false);\nFactory.addGetterSetter(Line, 'tension', 0, getNumberValidator());\nFactory.addGetterSetter(Line, 'points', [], getNumberArrayValidator());\n"]},"metadata":{},"sourceType":"module"}