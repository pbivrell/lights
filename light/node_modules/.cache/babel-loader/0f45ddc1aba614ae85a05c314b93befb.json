{"ast":null,"code":"import _slicedToArray from \"/Users/pbivrell/light/light/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"/Users/pbivrell/light/light/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/pbivrell/light/light/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/pbivrell/light/light/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _get from \"/Users/pbivrell/light/light/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"/Users/pbivrell/light/light/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/pbivrell/light/light/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/pbivrell/light/light/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _defineProperty from \"/Users/pbivrell/light/light/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _mouse, _touch, _pointer;\n\nimport { Util } from './Util.js';\nimport { Factory } from './Factory.js';\nimport { Container } from './Container.js';\nimport { Konva } from './Global.js';\nimport { SceneCanvas, HitCanvas } from './Canvas.js';\nimport { DD } from './DragAndDrop.js';\nimport { _registerNode } from './Global.js';\nimport * as PointerEvents from './PointerEvents.js';\nvar STAGE = 'Stage',\n    STRING = 'string',\n    PX = 'px',\n    MOUSEOUT = 'mouseout',\n    MOUSELEAVE = 'mouseleave',\n    MOUSEOVER = 'mouseover',\n    MOUSEENTER = 'mouseenter',\n    MOUSEMOVE = 'mousemove',\n    MOUSEDOWN = 'mousedown',\n    MOUSEUP = 'mouseup',\n    POINTERMOVE = 'pointermove',\n    POINTERDOWN = 'pointerdown',\n    POINTERUP = 'pointerup',\n    POINTERCANCEL = 'pointercancel',\n    LOSTPOINTERCAPTURE = 'lostpointercapture',\n    POINTEROUT = 'pointerout',\n    POINTERLEAVE = 'pointerleave',\n    POINTEROVER = 'pointerover',\n    POINTERENTER = 'pointerenter',\n    CONTEXTMENU = 'contextmenu',\n    TOUCHSTART = 'touchstart',\n    TOUCHEND = 'touchend',\n    TOUCHMOVE = 'touchmove',\n    TOUCHCANCEL = 'touchcancel',\n    WHEEL = 'wheel',\n    MAX_LAYERS_NUMBER = 5,\n    EVENTS = [[MOUSEENTER, '_pointerenter'], [MOUSEDOWN, '_pointerdown'], [MOUSEMOVE, '_pointermove'], [MOUSEUP, '_pointerup'], [MOUSELEAVE, '_pointerleave'], [TOUCHSTART, '_pointerdown'], [TOUCHMOVE, '_pointermove'], [TOUCHEND, '_pointerup'], [TOUCHCANCEL, '_pointercancel'], [MOUSEOVER, '_pointerover'], [WHEEL, '_wheel'], [CONTEXTMENU, '_contextmenu'], [POINTERDOWN, '_pointerdown'], [POINTERMOVE, '_pointermove'], [POINTERUP, '_pointerup'], [POINTERCANCEL, '_pointercancel'], [LOSTPOINTERCAPTURE, '_lostpointercapture']];\nvar EVENTS_MAP = {\n  mouse: (_mouse = {}, _defineProperty(_mouse, POINTEROUT, MOUSEOUT), _defineProperty(_mouse, POINTERLEAVE, MOUSELEAVE), _defineProperty(_mouse, POINTEROVER, MOUSEOVER), _defineProperty(_mouse, POINTERENTER, MOUSEENTER), _defineProperty(_mouse, POINTERMOVE, MOUSEMOVE), _defineProperty(_mouse, POINTERDOWN, MOUSEDOWN), _defineProperty(_mouse, POINTERUP, MOUSEUP), _defineProperty(_mouse, POINTERCANCEL, 'mousecancel'), _defineProperty(_mouse, \"pointerclick\", 'click'), _defineProperty(_mouse, \"pointerdblclick\", 'dblclick'), _mouse),\n  touch: (_touch = {}, _defineProperty(_touch, POINTEROUT, 'touchout'), _defineProperty(_touch, POINTERLEAVE, 'touchleave'), _defineProperty(_touch, POINTEROVER, 'touchover'), _defineProperty(_touch, POINTERENTER, 'touchenter'), _defineProperty(_touch, POINTERMOVE, TOUCHMOVE), _defineProperty(_touch, POINTERDOWN, TOUCHSTART), _defineProperty(_touch, POINTERUP, TOUCHEND), _defineProperty(_touch, POINTERCANCEL, TOUCHCANCEL), _defineProperty(_touch, \"pointerclick\", 'tap'), _defineProperty(_touch, \"pointerdblclick\", 'dbltap'), _touch),\n  pointer: (_pointer = {}, _defineProperty(_pointer, POINTEROUT, POINTEROUT), _defineProperty(_pointer, POINTERLEAVE, POINTERLEAVE), _defineProperty(_pointer, POINTEROVER, POINTEROVER), _defineProperty(_pointer, POINTERENTER, POINTERENTER), _defineProperty(_pointer, POINTERMOVE, POINTERMOVE), _defineProperty(_pointer, POINTERDOWN, POINTERDOWN), _defineProperty(_pointer, POINTERUP, POINTERUP), _defineProperty(_pointer, POINTERCANCEL, POINTERCANCEL), _defineProperty(_pointer, \"pointerclick\", 'pointerclick'), _defineProperty(_pointer, \"pointerdblclick\", 'pointerdblclick'), _pointer)\n};\n\nvar getEventType = function getEventType(type) {\n  if (type.indexOf('pointer') >= 0) {\n    return 'pointer';\n  }\n\n  if (type.indexOf('touch') >= 0) {\n    return 'touch';\n  }\n\n  return 'mouse';\n};\n\nvar getEventsMap = function getEventsMap(eventType) {\n  var type = getEventType(eventType);\n\n  if (type === 'pointer') {\n    return Konva.pointerEventsEnabled && EVENTS_MAP.pointer;\n  }\n\n  if (type === 'touch') {\n    return EVENTS_MAP.touch;\n  }\n\n  if (type === 'mouse') {\n    return EVENTS_MAP.mouse;\n  }\n};\n\nfunction checkNoClip() {\n  var attrs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  if (attrs.clipFunc || attrs.clipWidth || attrs.clipHeight) {\n    Util.warn('Stage does not support clipping. Please use clip for Layers or Groups.');\n  }\n\n  return attrs;\n}\n\nvar NO_POINTERS_MESSAGE = \"Pointer position is missing and not registered by the stage. Looks like it is outside of the stage container. You can set it manually from event: stage.setPointersPositions(event);\";\nexport var stages = [];\nexport var Stage = /*#__PURE__*/function (_Container) {\n  _inherits(Stage, _Container);\n\n  var _super = _createSuper(Stage);\n\n  function Stage(config) {\n    var _this;\n\n    _classCallCheck(this, Stage);\n\n    _this = _super.call(this, checkNoClip(config));\n    _this._pointerPositions = [];\n    _this._changedPointerPositions = [];\n\n    _this._buildDOM();\n\n    _this._bindContentEvents();\n\n    stages.push(_assertThisInitialized(_this));\n\n    _this.on('widthChange.konva heightChange.konva', _this._resizeDOM);\n\n    _this.on('visibleChange.konva', _this._checkVisibility);\n\n    _this.on('clipWidthChange.konva clipHeightChange.konva clipFuncChange.konva', function () {\n      checkNoClip(_this.attrs);\n    });\n\n    _this._checkVisibility();\n\n    return _this;\n  }\n\n  _createClass(Stage, [{\n    key: \"_validateAdd\",\n    value: function _validateAdd(child) {\n      var isLayer = child.getType() === 'Layer';\n      var isFastLayer = child.getType() === 'FastLayer';\n      var valid = isLayer || isFastLayer;\n\n      if (!valid) {\n        Util.throw('You may only add layers to the stage.');\n      }\n    }\n  }, {\n    key: \"_checkVisibility\",\n    value: function _checkVisibility() {\n      if (!this.content) {\n        return;\n      }\n\n      var style = this.visible() ? '' : 'none';\n      this.content.style.display = style;\n    }\n  }, {\n    key: \"setContainer\",\n    value: function setContainer(container) {\n      if (typeof container === STRING) {\n        if (container.charAt(0) === '.') {\n          var className = container.slice(1);\n          container = document.getElementsByClassName(className)[0];\n        } else {\n          var id;\n\n          if (container.charAt(0) !== '#') {\n            id = container;\n          } else {\n            id = container.slice(1);\n          }\n\n          container = document.getElementById(id);\n        }\n\n        if (!container) {\n          throw 'Can not find container in document with id ' + id;\n        }\n      }\n\n      this._setAttr('container', container);\n\n      if (this.content) {\n        if (this.content.parentElement) {\n          this.content.parentElement.removeChild(this.content);\n        }\n\n        container.appendChild(this.content);\n      }\n\n      return this;\n    }\n  }, {\n    key: \"shouldDrawHit\",\n    value: function shouldDrawHit() {\n      return true;\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      var layers = this.children,\n          len = layers.length,\n          n;\n\n      for (n = 0; n < len; n++) {\n        layers[n].clear();\n      }\n\n      return this;\n    }\n  }, {\n    key: \"clone\",\n    value: function clone(obj) {\n      if (!obj) {\n        obj = {};\n      }\n\n      obj.container = typeof document !== 'undefined' && document.createElement('div');\n      return Container.prototype.clone.call(this, obj);\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      _get(_getPrototypeOf(Stage.prototype), \"destroy\", this).call(this);\n\n      var content = this.content;\n\n      if (content && Util._isInDocument(content)) {\n        this.container().removeChild(content);\n      }\n\n      var index = stages.indexOf(this);\n\n      if (index > -1) {\n        stages.splice(index, 1);\n      }\n\n      return this;\n    }\n  }, {\n    key: \"getPointerPosition\",\n    value: function getPointerPosition() {\n      var pos = this._pointerPositions[0] || this._changedPointerPositions[0];\n\n      if (!pos) {\n        Util.warn(NO_POINTERS_MESSAGE);\n        return null;\n      }\n\n      return {\n        x: pos.x,\n        y: pos.y\n      };\n    }\n  }, {\n    key: \"_getPointerById\",\n    value: function _getPointerById(id) {\n      return this._pointerPositions.find(function (p) {\n        return p.id === id;\n      });\n    }\n  }, {\n    key: \"getPointersPositions\",\n    value: function getPointersPositions() {\n      return this._pointerPositions;\n    }\n  }, {\n    key: \"getStage\",\n    value: function getStage() {\n      return this;\n    }\n  }, {\n    key: \"getContent\",\n    value: function getContent() {\n      return this.content;\n    }\n  }, {\n    key: \"_toKonvaCanvas\",\n    value: function _toKonvaCanvas(config) {\n      config = config || {};\n      config.x = config.x || 0;\n      config.y = config.y || 0;\n      config.width = config.width || this.width();\n      config.height = config.height || this.height();\n      var canvas = new SceneCanvas({\n        width: config.width,\n        height: config.height,\n        pixelRatio: config.pixelRatio || 1\n      });\n\n      var _context = canvas.getContext()._context;\n\n      var layers = this.children;\n\n      if (config.x || config.y) {\n        _context.translate(-1 * config.x, -1 * config.y);\n      }\n\n      layers.forEach(function (layer) {\n        if (!layer.isVisible()) {\n          return;\n        }\n\n        var layerCanvas = layer._toKonvaCanvas(config);\n\n        _context.drawImage(layerCanvas._canvas, config.x, config.y, layerCanvas.getWidth() / layerCanvas.getPixelRatio(), layerCanvas.getHeight() / layerCanvas.getPixelRatio());\n      });\n      return canvas;\n    }\n  }, {\n    key: \"getIntersection\",\n    value: function getIntersection(pos) {\n      if (!pos) {\n        return null;\n      }\n\n      var layers = this.children,\n          len = layers.length,\n          end = len - 1,\n          n;\n\n      for (n = end; n >= 0; n--) {\n        var shape = layers[n].getIntersection(pos);\n\n        if (shape) {\n          return shape;\n        }\n      }\n\n      return null;\n    }\n  }, {\n    key: \"_resizeDOM\",\n    value: function _resizeDOM() {\n      var width = this.width();\n      var height = this.height();\n\n      if (this.content) {\n        this.content.style.width = width + PX;\n        this.content.style.height = height + PX;\n      }\n\n      this.bufferCanvas.setSize(width, height);\n      this.bufferHitCanvas.setSize(width, height);\n      this.children.forEach(function (layer) {\n        layer.setSize({\n          width: width,\n          height: height\n        });\n        layer.draw();\n      });\n    }\n  }, {\n    key: \"add\",\n    value: function add(layer) {\n      for (var _len = arguments.length, rest = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        rest[_key - 1] = arguments[_key];\n      }\n\n      if (arguments.length > 1) {\n        for (var i = 0; i < arguments.length; i++) {\n          this.add(arguments[i]);\n        }\n\n        return this;\n      }\n\n      _get(_getPrototypeOf(Stage.prototype), \"add\", this).call(this, layer);\n\n      var length = this.children.length;\n\n      if (length > MAX_LAYERS_NUMBER) {\n        Util.warn('The stage has ' + length + ' layers. Recommended maximum number of layers is 3-5. Adding more layers into the stage may drop the performance. Rethink your tree structure, you can use Konva.Group.');\n      }\n\n      layer.setSize({\n        width: this.width(),\n        height: this.height()\n      });\n      layer.draw();\n\n      if (Konva.isBrowser) {\n        this.content.appendChild(layer.canvas._canvas);\n      }\n\n      return this;\n    }\n  }, {\n    key: \"getParent\",\n    value: function getParent() {\n      return null;\n    }\n  }, {\n    key: \"getLayer\",\n    value: function getLayer() {\n      return null;\n    }\n  }, {\n    key: \"hasPointerCapture\",\n    value: function hasPointerCapture(pointerId) {\n      return PointerEvents.hasPointerCapture(pointerId, this);\n    }\n  }, {\n    key: \"setPointerCapture\",\n    value: function setPointerCapture(pointerId) {\n      PointerEvents.setPointerCapture(pointerId, this);\n    }\n  }, {\n    key: \"releaseCapture\",\n    value: function releaseCapture(pointerId) {\n      PointerEvents.releaseCapture(pointerId, this);\n    }\n  }, {\n    key: \"getLayers\",\n    value: function getLayers() {\n      return this.children;\n    }\n  }, {\n    key: \"_bindContentEvents\",\n    value: function _bindContentEvents() {\n      var _this2 = this;\n\n      if (!Konva.isBrowser) {\n        return;\n      }\n\n      EVENTS.forEach(function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 2),\n            event = _ref2[0],\n            methodName = _ref2[1];\n\n        _this2.content.addEventListener(event, function (evt) {\n          _this2[methodName](evt);\n        });\n      });\n    }\n  }, {\n    key: \"_pointerenter\",\n    value: function _pointerenter(evt) {\n      this.setPointersPositions(evt);\n      var events = getEventsMap(evt.type);\n\n      this._fire(events.pointerenter, {\n        evt: evt,\n        target: this,\n        currentTarget: this\n      });\n    }\n  }, {\n    key: \"_pointerover\",\n    value: function _pointerover(evt) {\n      this.setPointersPositions(evt);\n      var events = getEventsMap(evt.type);\n\n      this._fire(events.pointerover, {\n        evt: evt,\n        target: this,\n        currentTarget: this\n      });\n    }\n  }, {\n    key: \"_getTargetShape\",\n    value: function _getTargetShape(evenType) {\n      var shape = this[evenType + 'targetShape'];\n\n      if (shape && !shape.getStage()) {\n        shape = null;\n      }\n\n      return shape;\n    }\n  }, {\n    key: \"_pointerleave\",\n    value: function _pointerleave(evt) {\n      var events = getEventsMap(evt.type);\n      var eventType = getEventType(evt.type);\n\n      if (!events) {\n        return;\n      }\n\n      this.setPointersPositions(evt);\n\n      var targetShape = this._getTargetShape(eventType);\n\n      var eventsEnabled = !DD.isDragging || Konva.hitOnDragEnabled;\n\n      if (targetShape && eventsEnabled) {\n        targetShape._fireAndBubble(events.pointerout, {\n          evt: evt\n        });\n\n        targetShape._fireAndBubble(events.pointerleave, {\n          evt: evt\n        });\n\n        this._fire(events.pointerleave, {\n          evt: evt,\n          target: this,\n          currentTarget: this\n        });\n\n        this[eventType + 'targetShape'] = null;\n      } else if (eventsEnabled) {\n        this._fire(events.pointerleave, {\n          evt: evt,\n          target: this,\n          currentTarget: this\n        });\n\n        this._fire(events.pointerout, {\n          evt: evt,\n          target: this,\n          currentTarget: this\n        });\n      }\n\n      this.pointerPos = undefined;\n      this._pointerPositions = [];\n    }\n  }, {\n    key: \"_pointerdown\",\n    value: function _pointerdown(evt) {\n      var _this3 = this;\n\n      var events = getEventsMap(evt.type);\n      var eventType = getEventType(evt.type);\n\n      if (!events) {\n        return;\n      }\n\n      this.setPointersPositions(evt);\n      var triggeredOnShape = false;\n\n      this._changedPointerPositions.forEach(function (pos) {\n        var shape = _this3.getIntersection(pos);\n\n        DD.justDragged = false;\n        Konva['_' + eventType + 'ListenClick'] = true;\n        var hasShape = shape && shape.isListening();\n\n        if (!hasShape) {\n          return;\n        }\n\n        if (Konva.capturePointerEventsEnabled) {\n          shape.setPointerCapture(pos.id);\n        }\n\n        _this3[eventType + 'ClickStartShape'] = shape;\n\n        shape._fireAndBubble(events.pointerdown, {\n          evt: evt,\n          pointerId: pos.id\n        });\n\n        triggeredOnShape = true;\n        var isTouch = evt.type.indexOf('touch') >= 0;\n\n        if (shape.preventDefault() && evt.cancelable && isTouch) {\n          evt.preventDefault();\n        }\n      });\n\n      if (!triggeredOnShape) {\n        this._fire(events.pointerdown, {\n          evt: evt,\n          target: this,\n          currentTarget: this,\n          pointerId: this._pointerPositions[0].id\n        });\n      }\n    }\n  }, {\n    key: \"_pointermove\",\n    value: function _pointermove(evt) {\n      var _this4 = this;\n\n      var events = getEventsMap(evt.type);\n      var eventType = getEventType(evt.type);\n\n      if (!events) {\n        return;\n      }\n\n      if (DD.isDragging && DD.node.preventDefault() && evt.cancelable) {\n        evt.preventDefault();\n      }\n\n      this.setPointersPositions(evt);\n      var eventsEnabled = !DD.isDragging || Konva.hitOnDragEnabled;\n\n      if (!eventsEnabled) {\n        return;\n      }\n\n      var processedShapesIds = {};\n      var triggeredOnShape = false;\n\n      var targetShape = this._getTargetShape(eventType);\n\n      this._changedPointerPositions.forEach(function (pos) {\n        var shape = PointerEvents.getCapturedShape(pos.id) || _this4.getIntersection(pos);\n\n        var pointerId = pos.id;\n        var event = {\n          evt: evt,\n          pointerId: pointerId\n        };\n        var differentTarget = targetShape !== shape;\n\n        if (differentTarget && targetShape) {\n          targetShape._fireAndBubble(events.pointerout, Object.assign({}, event), shape);\n\n          targetShape._fireAndBubble(events.pointerleave, Object.assign({}, event), shape);\n        }\n\n        if (shape) {\n          if (processedShapesIds[shape._id]) {\n            return;\n          }\n\n          processedShapesIds[shape._id] = true;\n        }\n\n        if (shape && shape.isListening()) {\n          triggeredOnShape = true;\n\n          if (differentTarget) {\n            shape._fireAndBubble(events.pointerover, Object.assign({}, event), targetShape);\n\n            shape._fireAndBubble(events.pointerenter, Object.assign({}, event), targetShape);\n\n            _this4[eventType + 'targetShape'] = shape;\n          }\n\n          shape._fireAndBubble(events.pointermove, Object.assign({}, event));\n        } else {\n          if (targetShape) {\n            _this4._fire(events.pointerover, {\n              evt: evt,\n              target: _this4,\n              currentTarget: _this4,\n              pointerId: pointerId\n            });\n\n            _this4[eventType + 'targetShape'] = null;\n          }\n        }\n      });\n\n      if (!triggeredOnShape) {\n        this._fire(events.pointermove, {\n          evt: evt,\n          target: this,\n          currentTarget: this,\n          pointerId: this._changedPointerPositions[0].id\n        });\n      }\n    }\n  }, {\n    key: \"_pointerup\",\n    value: function _pointerup(evt) {\n      var _this5 = this;\n\n      var events = getEventsMap(evt.type);\n      var eventType = getEventType(evt.type);\n\n      if (!events) {\n        return;\n      }\n\n      this.setPointersPositions(evt);\n      var clickStartShape = this[eventType + 'ClickStartShape'];\n      var clickEndShape = this[eventType + 'ClickEndShape'];\n      var processedShapesIds = {};\n      var triggeredOnShape = false;\n\n      this._changedPointerPositions.forEach(function (pos) {\n        var shape = PointerEvents.getCapturedShape(pos.id) || _this5.getIntersection(pos);\n\n        if (shape) {\n          shape.releaseCapture(pos.id);\n\n          if (processedShapesIds[shape._id]) {\n            return;\n          }\n\n          processedShapesIds[shape._id] = true;\n        }\n\n        var pointerId = pos.id;\n        var event = {\n          evt: evt,\n          pointerId: pointerId\n        };\n        var fireDblClick = false;\n\n        if (Konva['_' + eventType + 'InDblClickWindow'] && Konva['_' + eventType + 'InDblClickWindowId'] === pointerId) {\n          fireDblClick = true;\n          clearTimeout(_this5[eventType + 'DblTimeout']);\n        } else if (!DD.justDragged) {\n          Konva['_' + eventType + 'InDblClickWindow'] = true;\n          Konva['_' + eventType + 'InDblClickWindowId'] = pointerId;\n          clearTimeout(_this5[eventType + 'DblTimeout']);\n        }\n\n        _this5[eventType + 'DblTimeout'] = setTimeout(function () {\n          Konva['_' + eventType + 'InDblClickWindow'] = false;\n        }, Konva.dblClickWindow);\n\n        if (shape && shape.isListening()) {\n          triggeredOnShape = true;\n          _this5[eventType + 'ClickEndShape'] = shape;\n\n          shape._fireAndBubble(events.pointerup, Object.assign({}, event));\n\n          if (Konva['_' + eventType + 'ListenClick'] && clickStartShape && clickStartShape === shape) {\n            shape._fireAndBubble(events.pointerclick, Object.assign({}, event));\n\n            if (fireDblClick && clickEndShape && clickEndShape === shape) {\n              shape._fireAndBubble(events.pointerdblclick, Object.assign({}, event));\n            }\n          }\n        } else {\n          _this5[eventType + 'ClickEndShape'] = null;\n\n          if (Konva['_' + eventType + 'ListenClick']) {\n            _this5._fire(events.pointerclick, {\n              evt: evt,\n              target: _this5,\n              currentTarget: _this5,\n              pointerId: pointerId\n            });\n          }\n\n          if (fireDblClick) {\n            _this5._fire(events.pointerdblclick, {\n              evt: evt,\n              target: _this5,\n              currentTarget: _this5,\n              pointerId: pointerId\n            });\n          }\n        }\n      });\n\n      if (!triggeredOnShape) {\n        this._fire(events.pointerup, {\n          evt: evt,\n          target: this,\n          currentTarget: this,\n          pointerId: this._changedPointerPositions[0].id\n        });\n      }\n\n      Konva['_' + eventType + 'ListenClick'] = false;\n\n      if (evt.cancelable) {\n        evt.preventDefault();\n      }\n    }\n  }, {\n    key: \"_contextmenu\",\n    value: function _contextmenu(evt) {\n      this.setPointersPositions(evt);\n      var shape = this.getIntersection(this.getPointerPosition());\n\n      if (shape && shape.isListening()) {\n        shape._fireAndBubble(CONTEXTMENU, {\n          evt: evt\n        });\n      } else {\n        this._fire(CONTEXTMENU, {\n          evt: evt,\n          target: this,\n          currentTarget: this\n        });\n      }\n    }\n  }, {\n    key: \"_wheel\",\n    value: function _wheel(evt) {\n      this.setPointersPositions(evt);\n      var shape = this.getIntersection(this.getPointerPosition());\n\n      if (shape && shape.isListening()) {\n        shape._fireAndBubble(WHEEL, {\n          evt: evt\n        });\n      } else {\n        this._fire(WHEEL, {\n          evt: evt,\n          target: this,\n          currentTarget: this\n        });\n      }\n    }\n  }, {\n    key: \"_pointercancel\",\n    value: function _pointercancel(evt) {\n      this.setPointersPositions(evt);\n      var shape = PointerEvents.getCapturedShape(evt.pointerId) || this.getIntersection(this.getPointerPosition());\n\n      if (shape) {\n        shape._fireAndBubble(POINTERUP, PointerEvents.createEvent(evt));\n      }\n\n      PointerEvents.releaseCapture(evt.pointerId);\n    }\n  }, {\n    key: \"_lostpointercapture\",\n    value: function _lostpointercapture(evt) {\n      PointerEvents.releaseCapture(evt.pointerId);\n    }\n  }, {\n    key: \"setPointersPositions\",\n    value: function setPointersPositions(evt) {\n      var _this6 = this;\n\n      var contentPosition = this._getContentPosition(),\n          x = null,\n          y = null;\n\n      evt = evt ? evt : window.event;\n\n      if (evt.touches !== undefined) {\n        this._pointerPositions = [];\n        this._changedPointerPositions = [];\n        Array.prototype.forEach.call(evt.touches, function (touch) {\n          _this6._pointerPositions.push({\n            id: touch.identifier,\n            x: (touch.clientX - contentPosition.left) / contentPosition.scaleX,\n            y: (touch.clientY - contentPosition.top) / contentPosition.scaleY\n          });\n        });\n        Array.prototype.forEach.call(evt.changedTouches || evt.touches, function (touch) {\n          _this6._changedPointerPositions.push({\n            id: touch.identifier,\n            x: (touch.clientX - contentPosition.left) / contentPosition.scaleX,\n            y: (touch.clientY - contentPosition.top) / contentPosition.scaleY\n          });\n        });\n      } else {\n        x = (evt.clientX - contentPosition.left) / contentPosition.scaleX;\n        y = (evt.clientY - contentPosition.top) / contentPosition.scaleY;\n        this.pointerPos = {\n          x: x,\n          y: y\n        };\n        this._pointerPositions = [{\n          x: x,\n          y: y,\n          id: Util._getFirstPointerId(evt)\n        }];\n        this._changedPointerPositions = [{\n          x: x,\n          y: y,\n          id: Util._getFirstPointerId(evt)\n        }];\n      }\n    }\n  }, {\n    key: \"_setPointerPosition\",\n    value: function _setPointerPosition(evt) {\n      Util.warn('Method _setPointerPosition is deprecated. Use \"stage.setPointersPositions(event)\" instead.');\n      this.setPointersPositions(evt);\n    }\n  }, {\n    key: \"_getContentPosition\",\n    value: function _getContentPosition() {\n      if (!this.content || !this.content.getBoundingClientRect) {\n        return {\n          top: 0,\n          left: 0,\n          scaleX: 1,\n          scaleY: 1\n        };\n      }\n\n      var rect = this.content.getBoundingClientRect();\n      return {\n        top: rect.top,\n        left: rect.left,\n        scaleX: rect.width / this.content.clientWidth || 1,\n        scaleY: rect.height / this.content.clientHeight || 1\n      };\n    }\n  }, {\n    key: \"_buildDOM\",\n    value: function _buildDOM() {\n      this.bufferCanvas = new SceneCanvas({\n        width: this.width(),\n        height: this.height()\n      });\n      this.bufferHitCanvas = new HitCanvas({\n        pixelRatio: 1,\n        width: this.width(),\n        height: this.height()\n      });\n\n      if (!Konva.isBrowser) {\n        return;\n      }\n\n      var container = this.container();\n\n      if (!container) {\n        throw 'Stage has no container. A container is required.';\n      }\n\n      container.innerHTML = '';\n      this.content = document.createElement('div');\n      this.content.style.position = 'relative';\n      this.content.style.userSelect = 'none';\n      this.content.className = 'konvajs-content';\n      this.content.setAttribute('role', 'presentation');\n      container.appendChild(this.content);\n\n      this._resizeDOM();\n    }\n  }, {\n    key: \"cache\",\n    value: function cache() {\n      Util.warn('Cache function is not allowed for stage. You may use cache only for layers, groups and shapes.');\n      return this;\n    }\n  }, {\n    key: \"clearCache\",\n    value: function clearCache() {\n      return this;\n    }\n  }, {\n    key: \"batchDraw\",\n    value: function batchDraw() {\n      this.getChildren().forEach(function (layer) {\n        layer.batchDraw();\n      });\n      return this;\n    }\n  }]);\n\n  return Stage;\n}(Container);\nStage.prototype.nodeType = STAGE;\n\n_registerNode(Stage);\n\nFactory.addGetterSetter(Stage, 'container');","map":{"version":3,"sources":["/Users/pbivrell/light/light/node_modules/konva/lib/Stage.js"],"names":["Util","Factory","Container","Konva","SceneCanvas","HitCanvas","DD","_registerNode","PointerEvents","STAGE","STRING","PX","MOUSEOUT","MOUSELEAVE","MOUSEOVER","MOUSEENTER","MOUSEMOVE","MOUSEDOWN","MOUSEUP","POINTERMOVE","POINTERDOWN","POINTERUP","POINTERCANCEL","LOSTPOINTERCAPTURE","POINTEROUT","POINTERLEAVE","POINTEROVER","POINTERENTER","CONTEXTMENU","TOUCHSTART","TOUCHEND","TOUCHMOVE","TOUCHCANCEL","WHEEL","MAX_LAYERS_NUMBER","EVENTS","EVENTS_MAP","mouse","touch","pointer","getEventType","type","indexOf","getEventsMap","eventType","pointerEventsEnabled","checkNoClip","attrs","clipFunc","clipWidth","clipHeight","warn","NO_POINTERS_MESSAGE","stages","Stage","config","_pointerPositions","_changedPointerPositions","_buildDOM","_bindContentEvents","push","on","_resizeDOM","_checkVisibility","child","isLayer","getType","isFastLayer","valid","throw","content","style","visible","display","container","charAt","className","slice","document","getElementsByClassName","id","getElementById","_setAttr","parentElement","removeChild","appendChild","layers","children","len","length","n","clear","obj","createElement","prototype","clone","call","_isInDocument","index","splice","pos","x","y","find","p","width","height","canvas","pixelRatio","_context","getContext","translate","forEach","layer","isVisible","layerCanvas","_toKonvaCanvas","drawImage","_canvas","getWidth","getPixelRatio","getHeight","end","shape","getIntersection","bufferCanvas","setSize","bufferHitCanvas","draw","rest","arguments","i","add","isBrowser","pointerId","hasPointerCapture","setPointerCapture","releaseCapture","event","methodName","addEventListener","evt","setPointersPositions","events","_fire","pointerenter","target","currentTarget","pointerover","evenType","getStage","targetShape","_getTargetShape","eventsEnabled","isDragging","hitOnDragEnabled","_fireAndBubble","pointerout","pointerleave","pointerPos","undefined","triggeredOnShape","justDragged","hasShape","isListening","capturePointerEventsEnabled","pointerdown","isTouch","preventDefault","cancelable","node","processedShapesIds","getCapturedShape","differentTarget","Object","assign","_id","pointermove","clickStartShape","clickEndShape","fireDblClick","clearTimeout","setTimeout","dblClickWindow","pointerup","pointerclick","pointerdblclick","getPointerPosition","createEvent","contentPosition","_getContentPosition","window","touches","Array","identifier","clientX","left","scaleX","clientY","top","scaleY","changedTouches","_getFirstPointerId","getBoundingClientRect","rect","clientWidth","clientHeight","innerHTML","position","userSelect","setAttribute","getChildren","batchDraw","nodeType","addGetterSetter"],"mappings":"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","sourcesContent":["import { Util } from './Util.js';\nimport { Factory } from './Factory.js';\nimport { Container } from './Container.js';\nimport { Konva } from './Global.js';\nimport { SceneCanvas, HitCanvas } from './Canvas.js';\nimport { DD } from './DragAndDrop.js';\nimport { _registerNode } from './Global.js';\nimport * as PointerEvents from './PointerEvents.js';\nvar STAGE = 'Stage', STRING = 'string', PX = 'px', MOUSEOUT = 'mouseout', MOUSELEAVE = 'mouseleave', MOUSEOVER = 'mouseover', MOUSEENTER = 'mouseenter', MOUSEMOVE = 'mousemove', MOUSEDOWN = 'mousedown', MOUSEUP = 'mouseup', POINTERMOVE = 'pointermove', POINTERDOWN = 'pointerdown', POINTERUP = 'pointerup', POINTERCANCEL = 'pointercancel', LOSTPOINTERCAPTURE = 'lostpointercapture', POINTEROUT = 'pointerout', POINTERLEAVE = 'pointerleave', POINTEROVER = 'pointerover', POINTERENTER = 'pointerenter', CONTEXTMENU = 'contextmenu', TOUCHSTART = 'touchstart', TOUCHEND = 'touchend', TOUCHMOVE = 'touchmove', TOUCHCANCEL = 'touchcancel', WHEEL = 'wheel', MAX_LAYERS_NUMBER = 5, EVENTS = [\n    [MOUSEENTER, '_pointerenter'],\n    [MOUSEDOWN, '_pointerdown'],\n    [MOUSEMOVE, '_pointermove'],\n    [MOUSEUP, '_pointerup'],\n    [MOUSELEAVE, '_pointerleave'],\n    [TOUCHSTART, '_pointerdown'],\n    [TOUCHMOVE, '_pointermove'],\n    [TOUCHEND, '_pointerup'],\n    [TOUCHCANCEL, '_pointercancel'],\n    [MOUSEOVER, '_pointerover'],\n    [WHEEL, '_wheel'],\n    [CONTEXTMENU, '_contextmenu'],\n    [POINTERDOWN, '_pointerdown'],\n    [POINTERMOVE, '_pointermove'],\n    [POINTERUP, '_pointerup'],\n    [POINTERCANCEL, '_pointercancel'],\n    [LOSTPOINTERCAPTURE, '_lostpointercapture'],\n];\nconst EVENTS_MAP = {\n    mouse: {\n        [POINTEROUT]: MOUSEOUT,\n        [POINTERLEAVE]: MOUSELEAVE,\n        [POINTEROVER]: MOUSEOVER,\n        [POINTERENTER]: MOUSEENTER,\n        [POINTERMOVE]: MOUSEMOVE,\n        [POINTERDOWN]: MOUSEDOWN,\n        [POINTERUP]: MOUSEUP,\n        [POINTERCANCEL]: 'mousecancel',\n        pointerclick: 'click',\n        pointerdblclick: 'dblclick',\n    },\n    touch: {\n        [POINTEROUT]: 'touchout',\n        [POINTERLEAVE]: 'touchleave',\n        [POINTEROVER]: 'touchover',\n        [POINTERENTER]: 'touchenter',\n        [POINTERMOVE]: TOUCHMOVE,\n        [POINTERDOWN]: TOUCHSTART,\n        [POINTERUP]: TOUCHEND,\n        [POINTERCANCEL]: TOUCHCANCEL,\n        pointerclick: 'tap',\n        pointerdblclick: 'dbltap',\n    },\n    pointer: {\n        [POINTEROUT]: POINTEROUT,\n        [POINTERLEAVE]: POINTERLEAVE,\n        [POINTEROVER]: POINTEROVER,\n        [POINTERENTER]: POINTERENTER,\n        [POINTERMOVE]: POINTERMOVE,\n        [POINTERDOWN]: POINTERDOWN,\n        [POINTERUP]: POINTERUP,\n        [POINTERCANCEL]: POINTERCANCEL,\n        pointerclick: 'pointerclick',\n        pointerdblclick: 'pointerdblclick',\n    },\n};\nconst getEventType = (type) => {\n    if (type.indexOf('pointer') >= 0) {\n        return 'pointer';\n    }\n    if (type.indexOf('touch') >= 0) {\n        return 'touch';\n    }\n    return 'mouse';\n};\nconst getEventsMap = (eventType) => {\n    const type = getEventType(eventType);\n    if (type === 'pointer') {\n        return Konva.pointerEventsEnabled && EVENTS_MAP.pointer;\n    }\n    if (type === 'touch') {\n        return EVENTS_MAP.touch;\n    }\n    if (type === 'mouse') {\n        return EVENTS_MAP.mouse;\n    }\n};\nfunction checkNoClip(attrs = {}) {\n    if (attrs.clipFunc || attrs.clipWidth || attrs.clipHeight) {\n        Util.warn('Stage does not support clipping. Please use clip for Layers or Groups.');\n    }\n    return attrs;\n}\nconst NO_POINTERS_MESSAGE = `Pointer position is missing and not registered by the stage. Looks like it is outside of the stage container. You can set it manually from event: stage.setPointersPositions(event);`;\nexport const stages = [];\nexport class Stage extends Container {\n    constructor(config) {\n        super(checkNoClip(config));\n        this._pointerPositions = [];\n        this._changedPointerPositions = [];\n        this._buildDOM();\n        this._bindContentEvents();\n        stages.push(this);\n        this.on('widthChange.konva heightChange.konva', this._resizeDOM);\n        this.on('visibleChange.konva', this._checkVisibility);\n        this.on('clipWidthChange.konva clipHeightChange.konva clipFuncChange.konva', () => {\n            checkNoClip(this.attrs);\n        });\n        this._checkVisibility();\n    }\n    _validateAdd(child) {\n        const isLayer = child.getType() === 'Layer';\n        const isFastLayer = child.getType() === 'FastLayer';\n        const valid = isLayer || isFastLayer;\n        if (!valid) {\n            Util.throw('You may only add layers to the stage.');\n        }\n    }\n    _checkVisibility() {\n        if (!this.content) {\n            return;\n        }\n        const style = this.visible() ? '' : 'none';\n        this.content.style.display = style;\n    }\n    setContainer(container) {\n        if (typeof container === STRING) {\n            if (container.charAt(0) === '.') {\n                var className = container.slice(1);\n                container = document.getElementsByClassName(className)[0];\n            }\n            else {\n                var id;\n                if (container.charAt(0) !== '#') {\n                    id = container;\n                }\n                else {\n                    id = container.slice(1);\n                }\n                container = document.getElementById(id);\n            }\n            if (!container) {\n                throw 'Can not find container in document with id ' + id;\n            }\n        }\n        this._setAttr('container', container);\n        if (this.content) {\n            if (this.content.parentElement) {\n                this.content.parentElement.removeChild(this.content);\n            }\n            container.appendChild(this.content);\n        }\n        return this;\n    }\n    shouldDrawHit() {\n        return true;\n    }\n    clear() {\n        var layers = this.children, len = layers.length, n;\n        for (n = 0; n < len; n++) {\n            layers[n].clear();\n        }\n        return this;\n    }\n    clone(obj) {\n        if (!obj) {\n            obj = {};\n        }\n        obj.container =\n            typeof document !== 'undefined' && document.createElement('div');\n        return Container.prototype.clone.call(this, obj);\n    }\n    destroy() {\n        super.destroy();\n        var content = this.content;\n        if (content && Util._isInDocument(content)) {\n            this.container().removeChild(content);\n        }\n        var index = stages.indexOf(this);\n        if (index > -1) {\n            stages.splice(index, 1);\n        }\n        return this;\n    }\n    getPointerPosition() {\n        const pos = this._pointerPositions[0] || this._changedPointerPositions[0];\n        if (!pos) {\n            Util.warn(NO_POINTERS_MESSAGE);\n            return null;\n        }\n        return {\n            x: pos.x,\n            y: pos.y,\n        };\n    }\n    _getPointerById(id) {\n        return this._pointerPositions.find((p) => p.id === id);\n    }\n    getPointersPositions() {\n        return this._pointerPositions;\n    }\n    getStage() {\n        return this;\n    }\n    getContent() {\n        return this.content;\n    }\n    _toKonvaCanvas(config) {\n        config = config || {};\n        config.x = config.x || 0;\n        config.y = config.y || 0;\n        config.width = config.width || this.width();\n        config.height = config.height || this.height();\n        var canvas = new SceneCanvas({\n            width: config.width,\n            height: config.height,\n            pixelRatio: config.pixelRatio || 1,\n        });\n        var _context = canvas.getContext()._context;\n        var layers = this.children;\n        if (config.x || config.y) {\n            _context.translate(-1 * config.x, -1 * config.y);\n        }\n        layers.forEach(function (layer) {\n            if (!layer.isVisible()) {\n                return;\n            }\n            var layerCanvas = layer._toKonvaCanvas(config);\n            _context.drawImage(layerCanvas._canvas, config.x, config.y, layerCanvas.getWidth() / layerCanvas.getPixelRatio(), layerCanvas.getHeight() / layerCanvas.getPixelRatio());\n        });\n        return canvas;\n    }\n    getIntersection(pos) {\n        if (!pos) {\n            return null;\n        }\n        var layers = this.children, len = layers.length, end = len - 1, n;\n        for (n = end; n >= 0; n--) {\n            const shape = layers[n].getIntersection(pos);\n            if (shape) {\n                return shape;\n            }\n        }\n        return null;\n    }\n    _resizeDOM() {\n        var width = this.width();\n        var height = this.height();\n        if (this.content) {\n            this.content.style.width = width + PX;\n            this.content.style.height = height + PX;\n        }\n        this.bufferCanvas.setSize(width, height);\n        this.bufferHitCanvas.setSize(width, height);\n        this.children.forEach((layer) => {\n            layer.setSize({ width, height });\n            layer.draw();\n        });\n    }\n    add(layer, ...rest) {\n        if (arguments.length > 1) {\n            for (var i = 0; i < arguments.length; i++) {\n                this.add(arguments[i]);\n            }\n            return this;\n        }\n        super.add(layer);\n        var length = this.children.length;\n        if (length > MAX_LAYERS_NUMBER) {\n            Util.warn('The stage has ' +\n                length +\n                ' layers. Recommended maximum number of layers is 3-5. Adding more layers into the stage may drop the performance. Rethink your tree structure, you can use Konva.Group.');\n        }\n        layer.setSize({ width: this.width(), height: this.height() });\n        layer.draw();\n        if (Konva.isBrowser) {\n            this.content.appendChild(layer.canvas._canvas);\n        }\n        return this;\n    }\n    getParent() {\n        return null;\n    }\n    getLayer() {\n        return null;\n    }\n    hasPointerCapture(pointerId) {\n        return PointerEvents.hasPointerCapture(pointerId, this);\n    }\n    setPointerCapture(pointerId) {\n        PointerEvents.setPointerCapture(pointerId, this);\n    }\n    releaseCapture(pointerId) {\n        PointerEvents.releaseCapture(pointerId, this);\n    }\n    getLayers() {\n        return this.children;\n    }\n    _bindContentEvents() {\n        if (!Konva.isBrowser) {\n            return;\n        }\n        EVENTS.forEach(([event, methodName]) => {\n            this.content.addEventListener(event, (evt) => {\n                this[methodName](evt);\n            });\n        });\n    }\n    _pointerenter(evt) {\n        this.setPointersPositions(evt);\n        const events = getEventsMap(evt.type);\n        this._fire(events.pointerenter, {\n            evt: evt,\n            target: this,\n            currentTarget: this,\n        });\n    }\n    _pointerover(evt) {\n        this.setPointersPositions(evt);\n        const events = getEventsMap(evt.type);\n        this._fire(events.pointerover, {\n            evt: evt,\n            target: this,\n            currentTarget: this,\n        });\n    }\n    _getTargetShape(evenType) {\n        let shape = this[evenType + 'targetShape'];\n        if (shape && !shape.getStage()) {\n            shape = null;\n        }\n        return shape;\n    }\n    _pointerleave(evt) {\n        const events = getEventsMap(evt.type);\n        const eventType = getEventType(evt.type);\n        if (!events) {\n            return;\n        }\n        this.setPointersPositions(evt);\n        var targetShape = this._getTargetShape(eventType);\n        var eventsEnabled = !DD.isDragging || Konva.hitOnDragEnabled;\n        if (targetShape && eventsEnabled) {\n            targetShape._fireAndBubble(events.pointerout, { evt: evt });\n            targetShape._fireAndBubble(events.pointerleave, { evt: evt });\n            this._fire(events.pointerleave, {\n                evt: evt,\n                target: this,\n                currentTarget: this,\n            });\n            this[eventType + 'targetShape'] = null;\n        }\n        else if (eventsEnabled) {\n            this._fire(events.pointerleave, {\n                evt: evt,\n                target: this,\n                currentTarget: this,\n            });\n            this._fire(events.pointerout, {\n                evt: evt,\n                target: this,\n                currentTarget: this,\n            });\n        }\n        this.pointerPos = undefined;\n        this._pointerPositions = [];\n    }\n    _pointerdown(evt) {\n        const events = getEventsMap(evt.type);\n        const eventType = getEventType(evt.type);\n        if (!events) {\n            return;\n        }\n        this.setPointersPositions(evt);\n        var triggeredOnShape = false;\n        this._changedPointerPositions.forEach((pos) => {\n            var shape = this.getIntersection(pos);\n            DD.justDragged = false;\n            Konva['_' + eventType + 'ListenClick'] = true;\n            const hasShape = shape && shape.isListening();\n            if (!hasShape) {\n                return;\n            }\n            if (Konva.capturePointerEventsEnabled) {\n                shape.setPointerCapture(pos.id);\n            }\n            this[eventType + 'ClickStartShape'] = shape;\n            shape._fireAndBubble(events.pointerdown, {\n                evt: evt,\n                pointerId: pos.id,\n            });\n            triggeredOnShape = true;\n            const isTouch = evt.type.indexOf('touch') >= 0;\n            if (shape.preventDefault() && evt.cancelable && isTouch) {\n                evt.preventDefault();\n            }\n        });\n        if (!triggeredOnShape) {\n            this._fire(events.pointerdown, {\n                evt: evt,\n                target: this,\n                currentTarget: this,\n                pointerId: this._pointerPositions[0].id,\n            });\n        }\n    }\n    _pointermove(evt) {\n        const events = getEventsMap(evt.type);\n        const eventType = getEventType(evt.type);\n        if (!events) {\n            return;\n        }\n        if (DD.isDragging && DD.node.preventDefault() && evt.cancelable) {\n            evt.preventDefault();\n        }\n        this.setPointersPositions(evt);\n        var eventsEnabled = !DD.isDragging || Konva.hitOnDragEnabled;\n        if (!eventsEnabled) {\n            return;\n        }\n        var processedShapesIds = {};\n        let triggeredOnShape = false;\n        var targetShape = this._getTargetShape(eventType);\n        this._changedPointerPositions.forEach((pos) => {\n            const shape = (PointerEvents.getCapturedShape(pos.id) ||\n                this.getIntersection(pos));\n            const pointerId = pos.id;\n            const event = { evt: evt, pointerId };\n            var differentTarget = targetShape !== shape;\n            if (differentTarget && targetShape) {\n                targetShape._fireAndBubble(events.pointerout, Object.assign({}, event), shape);\n                targetShape._fireAndBubble(events.pointerleave, Object.assign({}, event), shape);\n            }\n            if (shape) {\n                if (processedShapesIds[shape._id]) {\n                    return;\n                }\n                processedShapesIds[shape._id] = true;\n            }\n            if (shape && shape.isListening()) {\n                triggeredOnShape = true;\n                if (differentTarget) {\n                    shape._fireAndBubble(events.pointerover, Object.assign({}, event), targetShape);\n                    shape._fireAndBubble(events.pointerenter, Object.assign({}, event), targetShape);\n                    this[eventType + 'targetShape'] = shape;\n                }\n                shape._fireAndBubble(events.pointermove, Object.assign({}, event));\n            }\n            else {\n                if (targetShape) {\n                    this._fire(events.pointerover, {\n                        evt: evt,\n                        target: this,\n                        currentTarget: this,\n                        pointerId,\n                    });\n                    this[eventType + 'targetShape'] = null;\n                }\n            }\n        });\n        if (!triggeredOnShape) {\n            this._fire(events.pointermove, {\n                evt: evt,\n                target: this,\n                currentTarget: this,\n                pointerId: this._changedPointerPositions[0].id,\n            });\n        }\n    }\n    _pointerup(evt) {\n        const events = getEventsMap(evt.type);\n        const eventType = getEventType(evt.type);\n        if (!events) {\n            return;\n        }\n        this.setPointersPositions(evt);\n        const clickStartShape = this[eventType + 'ClickStartShape'];\n        const clickEndShape = this[eventType + 'ClickEndShape'];\n        var processedShapesIds = {};\n        let triggeredOnShape = false;\n        this._changedPointerPositions.forEach((pos) => {\n            const shape = (PointerEvents.getCapturedShape(pos.id) ||\n                this.getIntersection(pos));\n            if (shape) {\n                shape.releaseCapture(pos.id);\n                if (processedShapesIds[shape._id]) {\n                    return;\n                }\n                processedShapesIds[shape._id] = true;\n            }\n            const pointerId = pos.id;\n            const event = { evt: evt, pointerId };\n            let fireDblClick = false;\n            if (Konva['_' + eventType + 'InDblClickWindow'] &&\n                Konva['_' + eventType + 'InDblClickWindowId'] === pointerId) {\n                fireDblClick = true;\n                clearTimeout(this[eventType + 'DblTimeout']);\n            }\n            else if (!DD.justDragged) {\n                Konva['_' + eventType + 'InDblClickWindow'] = true;\n                Konva['_' + eventType + 'InDblClickWindowId'] = pointerId;\n                clearTimeout(this[eventType + 'DblTimeout']);\n            }\n            this[eventType + 'DblTimeout'] = setTimeout(function () {\n                Konva['_' + eventType + 'InDblClickWindow'] = false;\n            }, Konva.dblClickWindow);\n            if (shape && shape.isListening()) {\n                triggeredOnShape = true;\n                this[eventType + 'ClickEndShape'] = shape;\n                shape._fireAndBubble(events.pointerup, Object.assign({}, event));\n                if (Konva['_' + eventType + 'ListenClick'] &&\n                    clickStartShape &&\n                    clickStartShape === shape) {\n                    shape._fireAndBubble(events.pointerclick, Object.assign({}, event));\n                    if (fireDblClick && clickEndShape && clickEndShape === shape) {\n                        shape._fireAndBubble(events.pointerdblclick, Object.assign({}, event));\n                    }\n                }\n            }\n            else {\n                this[eventType + 'ClickEndShape'] = null;\n                if (Konva['_' + eventType + 'ListenClick']) {\n                    this._fire(events.pointerclick, {\n                        evt: evt,\n                        target: this,\n                        currentTarget: this,\n                        pointerId,\n                    });\n                }\n                if (fireDblClick) {\n                    this._fire(events.pointerdblclick, {\n                        evt: evt,\n                        target: this,\n                        currentTarget: this,\n                        pointerId,\n                    });\n                }\n            }\n        });\n        if (!triggeredOnShape) {\n            this._fire(events.pointerup, {\n                evt: evt,\n                target: this,\n                currentTarget: this,\n                pointerId: this._changedPointerPositions[0].id,\n            });\n        }\n        Konva['_' + eventType + 'ListenClick'] = false;\n        if (evt.cancelable) {\n            evt.preventDefault();\n        }\n    }\n    _contextmenu(evt) {\n        this.setPointersPositions(evt);\n        var shape = this.getIntersection(this.getPointerPosition());\n        if (shape && shape.isListening()) {\n            shape._fireAndBubble(CONTEXTMENU, { evt: evt });\n        }\n        else {\n            this._fire(CONTEXTMENU, {\n                evt: evt,\n                target: this,\n                currentTarget: this,\n            });\n        }\n    }\n    _wheel(evt) {\n        this.setPointersPositions(evt);\n        var shape = this.getIntersection(this.getPointerPosition());\n        if (shape && shape.isListening()) {\n            shape._fireAndBubble(WHEEL, { evt: evt });\n        }\n        else {\n            this._fire(WHEEL, {\n                evt: evt,\n                target: this,\n                currentTarget: this,\n            });\n        }\n    }\n    _pointercancel(evt) {\n        this.setPointersPositions(evt);\n        const shape = PointerEvents.getCapturedShape(evt.pointerId) ||\n            this.getIntersection(this.getPointerPosition());\n        if (shape) {\n            shape._fireAndBubble(POINTERUP, PointerEvents.createEvent(evt));\n        }\n        PointerEvents.releaseCapture(evt.pointerId);\n    }\n    _lostpointercapture(evt) {\n        PointerEvents.releaseCapture(evt.pointerId);\n    }\n    setPointersPositions(evt) {\n        var contentPosition = this._getContentPosition(), x = null, y = null;\n        evt = evt ? evt : window.event;\n        if (evt.touches !== undefined) {\n            this._pointerPositions = [];\n            this._changedPointerPositions = [];\n            Array.prototype.forEach.call(evt.touches, (touch) => {\n                this._pointerPositions.push({\n                    id: touch.identifier,\n                    x: (touch.clientX - contentPosition.left) / contentPosition.scaleX,\n                    y: (touch.clientY - contentPosition.top) / contentPosition.scaleY,\n                });\n            });\n            Array.prototype.forEach.call(evt.changedTouches || evt.touches, (touch) => {\n                this._changedPointerPositions.push({\n                    id: touch.identifier,\n                    x: (touch.clientX - contentPosition.left) / contentPosition.scaleX,\n                    y: (touch.clientY - contentPosition.top) / contentPosition.scaleY,\n                });\n            });\n        }\n        else {\n            x = (evt.clientX - contentPosition.left) / contentPosition.scaleX;\n            y = (evt.clientY - contentPosition.top) / contentPosition.scaleY;\n            this.pointerPos = {\n                x: x,\n                y: y,\n            };\n            this._pointerPositions = [{ x, y, id: Util._getFirstPointerId(evt) }];\n            this._changedPointerPositions = [\n                { x, y, id: Util._getFirstPointerId(evt) },\n            ];\n        }\n    }\n    _setPointerPosition(evt) {\n        Util.warn('Method _setPointerPosition is deprecated. Use \"stage.setPointersPositions(event)\" instead.');\n        this.setPointersPositions(evt);\n    }\n    _getContentPosition() {\n        if (!this.content || !this.content.getBoundingClientRect) {\n            return {\n                top: 0,\n                left: 0,\n                scaleX: 1,\n                scaleY: 1,\n            };\n        }\n        var rect = this.content.getBoundingClientRect();\n        return {\n            top: rect.top,\n            left: rect.left,\n            scaleX: rect.width / this.content.clientWidth || 1,\n            scaleY: rect.height / this.content.clientHeight || 1,\n        };\n    }\n    _buildDOM() {\n        this.bufferCanvas = new SceneCanvas({\n            width: this.width(),\n            height: this.height(),\n        });\n        this.bufferHitCanvas = new HitCanvas({\n            pixelRatio: 1,\n            width: this.width(),\n            height: this.height(),\n        });\n        if (!Konva.isBrowser) {\n            return;\n        }\n        var container = this.container();\n        if (!container) {\n            throw 'Stage has no container. A container is required.';\n        }\n        container.innerHTML = '';\n        this.content = document.createElement('div');\n        this.content.style.position = 'relative';\n        this.content.style.userSelect = 'none';\n        this.content.className = 'konvajs-content';\n        this.content.setAttribute('role', 'presentation');\n        container.appendChild(this.content);\n        this._resizeDOM();\n    }\n    cache() {\n        Util.warn('Cache function is not allowed for stage. You may use cache only for layers, groups and shapes.');\n        return this;\n    }\n    clearCache() {\n        return this;\n    }\n    batchDraw() {\n        this.getChildren().forEach(function (layer) {\n            layer.batchDraw();\n        });\n        return this;\n    }\n}\nStage.prototype.nodeType = STAGE;\n_registerNode(Stage);\nFactory.addGetterSetter(Stage, 'container');\n"]},"metadata":{},"sourceType":"module"}