{"ast":null,"code":"import _classCallCheck from \"/Users/pbivrell/light/light/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/pbivrell/light/light/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/pbivrell/light/light/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/pbivrell/light/light/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { Util } from './Util.js';\nimport { Container } from './Container.js';\nimport { _registerNode } from './Global.js';\nexport var Group = /*#__PURE__*/function (_Container) {\n  _inherits(Group, _Container);\n\n  var _super = _createSuper(Group);\n\n  function Group() {\n    _classCallCheck(this, Group);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Group, [{\n    key: \"_validateAdd\",\n    value: function _validateAdd(child) {\n      var type = child.getType();\n\n      if (type !== 'Group' && type !== 'Shape') {\n        Util.throw('You may only add groups and shapes to groups.');\n      }\n    }\n  }]);\n\n  return Group;\n}(Container);\nGroup.prototype.nodeType = 'Group';\n\n_registerNode(Group);","map":{"version":3,"sources":["/Users/pbivrell/light/light/node_modules/konva/lib/Group.js"],"names":["Util","Container","_registerNode","Group","child","type","getType","throw","prototype","nodeType"],"mappings":";;;;AAAA,SAASA,IAAT,QAAqB,WAArB;AACA,SAASC,SAAT,QAA0B,gBAA1B;AACA,SAASC,aAAT,QAA8B,aAA9B;AACA,WAAaC,KAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,WACI,sBAAaC,KAAb,EAAoB;AAChB,UAAIC,IAAI,GAAGD,KAAK,CAACE,OAAN,EAAX;;AACA,UAAID,IAAI,KAAK,OAAT,IAAoBA,IAAI,KAAK,OAAjC,EAA0C;AACtCL,QAAAA,IAAI,CAACO,KAAL,CAAW,+CAAX;AACH;AACJ;AANL;;AAAA;AAAA,EAA2BN,SAA3B;AAQAE,KAAK,CAACK,SAAN,CAAgBC,QAAhB,GAA2B,OAA3B;;AACAP,aAAa,CAACC,KAAD,CAAb","sourcesContent":["import { Util } from './Util.js';\nimport { Container } from './Container.js';\nimport { _registerNode } from './Global.js';\nexport class Group extends Container {\n    _validateAdd(child) {\n        var type = child.getType();\n        if (type !== 'Group' && type !== 'Shape') {\n            Util.throw('You may only add groups and shapes to groups.');\n        }\n    }\n}\nGroup.prototype.nodeType = 'Group';\n_registerNode(Group);\n"]},"metadata":{},"sourceType":"module"}