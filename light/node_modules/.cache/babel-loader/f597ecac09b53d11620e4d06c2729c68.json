{"ast":null,"code":"import _classCallCheck from \"/Users/pbivrell/light/light/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/pbivrell/light/light/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _get from \"/Users/pbivrell/light/light/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"/Users/pbivrell/light/light/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/pbivrell/light/light/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/pbivrell/light/light/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { Factory } from '../Factory.js';\nimport { Shape } from '../Shape.js';\nimport { Animation } from '../Animation.js';\nimport { getNumberValidator } from '../Validators.js';\nimport { _registerNode } from '../Global.js';\nexport var Sprite = /*#__PURE__*/function (_Shape) {\n  _inherits(Sprite, _Shape);\n\n  var _super = _createSuper(Sprite);\n\n  function Sprite(config) {\n    var _this;\n\n    _classCallCheck(this, Sprite);\n\n    _this = _super.call(this, config);\n    _this._updated = true;\n    _this.anim = new Animation(function () {\n      var updated = _this._updated;\n      _this._updated = false;\n      return updated;\n    });\n\n    _this.on('animationChange.konva', function () {\n      this.frameIndex(0);\n    });\n\n    _this.on('frameIndexChange.konva', function () {\n      this._updated = true;\n    });\n\n    _this.on('frameRateChange.konva', function () {\n      if (!this.anim.isRunning()) {\n        return;\n      }\n\n      clearInterval(this.interval);\n\n      this._setInterval();\n    });\n\n    return _this;\n  }\n\n  _createClass(Sprite, [{\n    key: \"_sceneFunc\",\n    value: function _sceneFunc(context) {\n      var anim = this.animation(),\n          index = this.frameIndex(),\n          ix4 = index * 4,\n          set = this.animations()[anim],\n          offsets = this.frameOffsets(),\n          x = set[ix4 + 0],\n          y = set[ix4 + 1],\n          width = set[ix4 + 2],\n          height = set[ix4 + 3],\n          image = this.image();\n\n      if (this.hasFill() || this.hasStroke()) {\n        context.beginPath();\n        context.rect(0, 0, width, height);\n        context.closePath();\n        context.fillStrokeShape(this);\n      }\n\n      if (image) {\n        if (offsets) {\n          var offset = offsets[anim],\n              ix2 = index * 2;\n          context.drawImage(image, x, y, width, height, offset[ix2 + 0], offset[ix2 + 1], width, height);\n        } else {\n          context.drawImage(image, x, y, width, height, 0, 0, width, height);\n        }\n      }\n    }\n  }, {\n    key: \"_hitFunc\",\n    value: function _hitFunc(context) {\n      var anim = this.animation(),\n          index = this.frameIndex(),\n          ix4 = index * 4,\n          set = this.animations()[anim],\n          offsets = this.frameOffsets(),\n          width = set[ix4 + 2],\n          height = set[ix4 + 3];\n      context.beginPath();\n\n      if (offsets) {\n        var offset = offsets[anim];\n        var ix2 = index * 2;\n        context.rect(offset[ix2 + 0], offset[ix2 + 1], width, height);\n      } else {\n        context.rect(0, 0, width, height);\n      }\n\n      context.closePath();\n      context.fillShape(this);\n    }\n  }, {\n    key: \"_useBufferCanvas\",\n    value: function _useBufferCanvas() {\n      return _get(_getPrototypeOf(Sprite.prototype), \"_useBufferCanvas\", this).call(this, true);\n    }\n  }, {\n    key: \"_setInterval\",\n    value: function _setInterval() {\n      var that = this;\n      this.interval = setInterval(function () {\n        that._updateIndex();\n      }, 1000 / this.frameRate());\n    }\n  }, {\n    key: \"start\",\n    value: function start() {\n      if (this.isRunning()) {\n        return;\n      }\n\n      var layer = this.getLayer();\n      this.anim.setLayers(layer);\n\n      this._setInterval();\n\n      this.anim.start();\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      this.anim.stop();\n      clearInterval(this.interval);\n    }\n  }, {\n    key: \"isRunning\",\n    value: function isRunning() {\n      return this.anim.isRunning();\n    }\n  }, {\n    key: \"_updateIndex\",\n    value: function _updateIndex() {\n      var index = this.frameIndex(),\n          animation = this.animation(),\n          animations = this.animations(),\n          anim = animations[animation],\n          len = anim.length / 4;\n\n      if (index < len - 1) {\n        this.frameIndex(index + 1);\n      } else {\n        this.frameIndex(0);\n      }\n    }\n  }]);\n\n  return Sprite;\n}(Shape);\nSprite.prototype.className = 'Sprite';\n\n_registerNode(Sprite);\n\nFactory.addGetterSetter(Sprite, 'animation');\nFactory.addGetterSetter(Sprite, 'animations');\nFactory.addGetterSetter(Sprite, 'frameOffsets');\nFactory.addGetterSetter(Sprite, 'image');\nFactory.addGetterSetter(Sprite, 'frameIndex', 0, getNumberValidator());\nFactory.addGetterSetter(Sprite, 'frameRate', 17, getNumberValidator());\nFactory.backCompat(Sprite, {\n  index: 'frameIndex',\n  getIndex: 'getFrameIndex',\n  setIndex: 'setFrameIndex'\n});","map":{"version":3,"sources":["/Users/pbivrell/light/light/node_modules/konva/lib/shapes/Sprite.js"],"names":["Factory","Shape","Animation","getNumberValidator","_registerNode","Sprite","config","_updated","anim","updated","on","frameIndex","isRunning","clearInterval","interval","_setInterval","context","animation","index","ix4","set","animations","offsets","frameOffsets","x","y","width","height","image","hasFill","hasStroke","beginPath","rect","closePath","fillStrokeShape","offset","ix2","drawImage","fillShape","that","setInterval","_updateIndex","frameRate","layer","getLayer","setLayers","start","stop","len","length","prototype","className","addGetterSetter","backCompat","getIndex","setIndex"],"mappings":"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","sourcesContent":["import { Factory } from '../Factory.js';\nimport { Shape } from '../Shape.js';\nimport { Animation } from '../Animation.js';\nimport { getNumberValidator } from '../Validators.js';\nimport { _registerNode } from '../Global.js';\nexport class Sprite extends Shape {\n    constructor(config) {\n        super(config);\n        this._updated = true;\n        this.anim = new Animation(() => {\n            var updated = this._updated;\n            this._updated = false;\n            return updated;\n        });\n        this.on('animationChange.konva', function () {\n            this.frameIndex(0);\n        });\n        this.on('frameIndexChange.konva', function () {\n            this._updated = true;\n        });\n        this.on('frameRateChange.konva', function () {\n            if (!this.anim.isRunning()) {\n                return;\n            }\n            clearInterval(this.interval);\n            this._setInterval();\n        });\n    }\n    _sceneFunc(context) {\n        var anim = this.animation(), index = this.frameIndex(), ix4 = index * 4, set = this.animations()[anim], offsets = this.frameOffsets(), x = set[ix4 + 0], y = set[ix4 + 1], width = set[ix4 + 2], height = set[ix4 + 3], image = this.image();\n        if (this.hasFill() || this.hasStroke()) {\n            context.beginPath();\n            context.rect(0, 0, width, height);\n            context.closePath();\n            context.fillStrokeShape(this);\n        }\n        if (image) {\n            if (offsets) {\n                var offset = offsets[anim], ix2 = index * 2;\n                context.drawImage(image, x, y, width, height, offset[ix2 + 0], offset[ix2 + 1], width, height);\n            }\n            else {\n                context.drawImage(image, x, y, width, height, 0, 0, width, height);\n            }\n        }\n    }\n    _hitFunc(context) {\n        var anim = this.animation(), index = this.frameIndex(), ix4 = index * 4, set = this.animations()[anim], offsets = this.frameOffsets(), width = set[ix4 + 2], height = set[ix4 + 3];\n        context.beginPath();\n        if (offsets) {\n            var offset = offsets[anim];\n            var ix2 = index * 2;\n            context.rect(offset[ix2 + 0], offset[ix2 + 1], width, height);\n        }\n        else {\n            context.rect(0, 0, width, height);\n        }\n        context.closePath();\n        context.fillShape(this);\n    }\n    _useBufferCanvas() {\n        return super._useBufferCanvas(true);\n    }\n    _setInterval() {\n        var that = this;\n        this.interval = setInterval(function () {\n            that._updateIndex();\n        }, 1000 / this.frameRate());\n    }\n    start() {\n        if (this.isRunning()) {\n            return;\n        }\n        var layer = this.getLayer();\n        this.anim.setLayers(layer);\n        this._setInterval();\n        this.anim.start();\n    }\n    stop() {\n        this.anim.stop();\n        clearInterval(this.interval);\n    }\n    isRunning() {\n        return this.anim.isRunning();\n    }\n    _updateIndex() {\n        var index = this.frameIndex(), animation = this.animation(), animations = this.animations(), anim = animations[animation], len = anim.length / 4;\n        if (index < len - 1) {\n            this.frameIndex(index + 1);\n        }\n        else {\n            this.frameIndex(0);\n        }\n    }\n}\nSprite.prototype.className = 'Sprite';\n_registerNode(Sprite);\nFactory.addGetterSetter(Sprite, 'animation');\nFactory.addGetterSetter(Sprite, 'animations');\nFactory.addGetterSetter(Sprite, 'frameOffsets');\nFactory.addGetterSetter(Sprite, 'image');\nFactory.addGetterSetter(Sprite, 'frameIndex', 0, getNumberValidator());\nFactory.addGetterSetter(Sprite, 'frameRate', 17, getNumberValidator());\nFactory.backCompat(Sprite, {\n    index: 'frameIndex',\n    getIndex: 'getFrameIndex',\n    setIndex: 'setFrameIndex',\n});\n"]},"metadata":{},"sourceType":"module"}