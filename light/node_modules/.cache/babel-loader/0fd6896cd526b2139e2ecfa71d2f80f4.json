{"ast":null,"code":"import _classCallCheck from \"/Users/pbivrell/light/light/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/pbivrell/light/light/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { Util, Transform } from './Util.js';\nimport { Factory } from './Factory.js';\nimport { SceneCanvas, HitCanvas } from './Canvas.js';\nimport { Konva } from './Global.js';\nimport { DD } from './DragAndDrop.js';\nimport { getNumberValidator, getStringValidator, getBooleanValidator } from './Validators.js';\nvar ABSOLUTE_OPACITY = 'absoluteOpacity',\n    ALL_LISTENERS = 'allEventListeners',\n    ABSOLUTE_TRANSFORM = 'absoluteTransform',\n    ABSOLUTE_SCALE = 'absoluteScale',\n    CANVAS = 'canvas',\n    CHANGE = 'Change',\n    CHILDREN = 'children',\n    KONVA = 'konva',\n    LISTENING = 'listening',\n    MOUSEENTER = 'mouseenter',\n    MOUSELEAVE = 'mouseleave',\n    NAME = 'name',\n    SET = 'set',\n    SHAPE = 'Shape',\n    SPACE = ' ',\n    STAGE = 'stage',\n    TRANSFORM = 'transform',\n    UPPER_STAGE = 'Stage',\n    VISIBLE = 'visible',\n    TRANSFORM_CHANGE_STR = ['xChange.konva', 'yChange.konva', 'scaleXChange.konva', 'scaleYChange.konva', 'skewXChange.konva', 'skewYChange.konva', 'rotationChange.konva', 'offsetXChange.konva', 'offsetYChange.konva', 'transformsEnabledChange.konva'].join(SPACE);\nvar idCounter = 1;\nexport var Node = /*#__PURE__*/function () {\n  function Node(config) {\n    _classCallCheck(this, Node);\n\n    this._id = idCounter++;\n    this.eventListeners = {};\n    this.attrs = {};\n    this.index = 0;\n    this._allEventListeners = null;\n    this.parent = null;\n    this._cache = new Map();\n    this._attachedDepsListeners = new Map();\n    this._lastPos = null;\n    this._batchingTransformChange = false;\n    this._needClearTransformCache = false;\n    this._filterUpToDate = false;\n    this._isUnderCache = false;\n    this._dragEventId = null;\n    this._shouldFireChangeEvents = false;\n    this.setAttrs(config);\n    this._shouldFireChangeEvents = true;\n  }\n\n  _createClass(Node, [{\n    key: \"hasChildren\",\n    value: function hasChildren() {\n      return false;\n    }\n  }, {\n    key: \"_clearCache\",\n    value: function _clearCache(attr) {\n      if ((attr === TRANSFORM || attr === ABSOLUTE_TRANSFORM) && this._cache.get(attr)) {\n        this._cache.get(attr).dirty = true;\n      } else if (attr) {\n        this._cache.delete(attr);\n      } else {\n        this._cache.clear();\n      }\n    }\n  }, {\n    key: \"_getCache\",\n    value: function _getCache(attr, privateGetter) {\n      var cache = this._cache.get(attr);\n\n      var isTransform = attr === TRANSFORM || attr === ABSOLUTE_TRANSFORM;\n      var invalid = cache === undefined || isTransform && cache.dirty === true;\n\n      if (invalid) {\n        cache = privateGetter.call(this);\n\n        this._cache.set(attr, cache);\n      }\n\n      return cache;\n    }\n  }, {\n    key: \"_calculate\",\n    value: function _calculate(name, deps, getter) {\n      var _this = this;\n\n      if (!this._attachedDepsListeners.get(name)) {\n        var depsString = deps.map(function (dep) {\n          return dep + 'Change.konva';\n        }).join(SPACE);\n        this.on(depsString, function () {\n          _this._clearCache(name);\n        });\n\n        this._attachedDepsListeners.set(name, true);\n      }\n\n      return this._getCache(name, getter);\n    }\n  }, {\n    key: \"_getCanvasCache\",\n    value: function _getCanvasCache() {\n      return this._cache.get(CANVAS);\n    }\n  }, {\n    key: \"_clearSelfAndDescendantCache\",\n    value: function _clearSelfAndDescendantCache(attr) {\n      this._clearCache(attr);\n\n      if (attr === ABSOLUTE_TRANSFORM) {\n        this.fire('absoluteTransformChange');\n      }\n    }\n  }, {\n    key: \"clearCache\",\n    value: function clearCache() {\n      this._cache.delete(CANVAS);\n\n      this._clearSelfAndDescendantCache();\n\n      this._requestDraw();\n\n      return this;\n    }\n  }, {\n    key: \"cache\",\n    value: function cache(config) {\n      var conf = config || {};\n      var rect = {};\n\n      if (conf.x === undefined || conf.y === undefined || conf.width === undefined || conf.height === undefined) {\n        rect = this.getClientRect({\n          skipTransform: true,\n          relativeTo: this.getParent()\n        });\n      }\n\n      var width = Math.ceil(conf.width || rect.width),\n          height = Math.ceil(conf.height || rect.height),\n          pixelRatio = conf.pixelRatio,\n          x = conf.x === undefined ? rect.x : conf.x,\n          y = conf.y === undefined ? rect.y : conf.y,\n          offset = conf.offset || 0,\n          drawBorder = conf.drawBorder || false,\n          hitCanvasPixelRatio = conf.hitCanvasPixelRatio || 1;\n\n      if (!width || !height) {\n        Util.error('Can not cache the node. Width or height of the node equals 0. Caching is skipped.');\n        return;\n      }\n\n      width += offset * 2;\n      height += offset * 2;\n      x -= offset;\n      y -= offset;\n      var cachedSceneCanvas = new SceneCanvas({\n        pixelRatio: pixelRatio,\n        width: width,\n        height: height\n      }),\n          cachedFilterCanvas = new SceneCanvas({\n        pixelRatio: pixelRatio,\n        width: 0,\n        height: 0\n      }),\n          cachedHitCanvas = new HitCanvas({\n        pixelRatio: hitCanvasPixelRatio,\n        width: width,\n        height: height\n      }),\n          sceneContext = cachedSceneCanvas.getContext(),\n          hitContext = cachedHitCanvas.getContext();\n      cachedHitCanvas.isCache = true;\n      cachedSceneCanvas.isCache = true;\n\n      this._cache.delete(CANVAS);\n\n      this._filterUpToDate = false;\n\n      if (conf.imageSmoothingEnabled === false) {\n        cachedSceneCanvas.getContext()._context.imageSmoothingEnabled = false;\n        cachedFilterCanvas.getContext()._context.imageSmoothingEnabled = false;\n      }\n\n      sceneContext.save();\n      hitContext.save();\n      sceneContext.translate(-x, -y);\n      hitContext.translate(-x, -y);\n      this._isUnderCache = true;\n\n      this._clearSelfAndDescendantCache(ABSOLUTE_OPACITY);\n\n      this._clearSelfAndDescendantCache(ABSOLUTE_SCALE);\n\n      this.drawScene(cachedSceneCanvas, this);\n      this.drawHit(cachedHitCanvas, this);\n      this._isUnderCache = false;\n      sceneContext.restore();\n      hitContext.restore();\n\n      if (drawBorder) {\n        sceneContext.save();\n        sceneContext.beginPath();\n        sceneContext.rect(0, 0, width, height);\n        sceneContext.closePath();\n        sceneContext.setAttr('strokeStyle', 'red');\n        sceneContext.setAttr('lineWidth', 5);\n        sceneContext.stroke();\n        sceneContext.restore();\n      }\n\n      this._cache.set(CANVAS, {\n        scene: cachedSceneCanvas,\n        filter: cachedFilterCanvas,\n        hit: cachedHitCanvas,\n        x: x,\n        y: y\n      });\n\n      this._requestDraw();\n\n      return this;\n    }\n  }, {\n    key: \"isCached\",\n    value: function isCached() {\n      return this._cache.has(CANVAS);\n    }\n  }, {\n    key: \"getClientRect\",\n    value: function getClientRect(config) {\n      throw new Error('abstract \"getClientRect\" method call');\n    }\n  }, {\n    key: \"_transformedRect\",\n    value: function _transformedRect(rect, top) {\n      var points = [{\n        x: rect.x,\n        y: rect.y\n      }, {\n        x: rect.x + rect.width,\n        y: rect.y\n      }, {\n        x: rect.x + rect.width,\n        y: rect.y + rect.height\n      }, {\n        x: rect.x,\n        y: rect.y + rect.height\n      }];\n      var minX, minY, maxX, maxY;\n      var trans = this.getAbsoluteTransform(top);\n      points.forEach(function (point) {\n        var transformed = trans.point(point);\n\n        if (minX === undefined) {\n          minX = maxX = transformed.x;\n          minY = maxY = transformed.y;\n        }\n\n        minX = Math.min(minX, transformed.x);\n        minY = Math.min(minY, transformed.y);\n        maxX = Math.max(maxX, transformed.x);\n        maxY = Math.max(maxY, transformed.y);\n      });\n      return {\n        x: minX,\n        y: minY,\n        width: maxX - minX,\n        height: maxY - minY\n      };\n    }\n  }, {\n    key: \"_drawCachedSceneCanvas\",\n    value: function _drawCachedSceneCanvas(context) {\n      context.save();\n\n      context._applyOpacity(this);\n\n      context._applyGlobalCompositeOperation(this);\n\n      var canvasCache = this._getCanvasCache();\n\n      context.translate(canvasCache.x, canvasCache.y);\n\n      var cacheCanvas = this._getCachedSceneCanvas();\n\n      var ratio = cacheCanvas.pixelRatio;\n      context.drawImage(cacheCanvas._canvas, 0, 0, cacheCanvas.width / ratio, cacheCanvas.height / ratio);\n      context.restore();\n    }\n  }, {\n    key: \"_drawCachedHitCanvas\",\n    value: function _drawCachedHitCanvas(context) {\n      var canvasCache = this._getCanvasCache(),\n          hitCanvas = canvasCache.hit;\n\n      context.save();\n      context.translate(canvasCache.x, canvasCache.y);\n      context.drawImage(hitCanvas._canvas, 0, 0, hitCanvas.width / hitCanvas.pixelRatio, hitCanvas.height / hitCanvas.pixelRatio);\n      context.restore();\n    }\n  }, {\n    key: \"_getCachedSceneCanvas\",\n    value: function _getCachedSceneCanvas() {\n      var filters = this.filters(),\n          cachedCanvas = this._getCanvasCache(),\n          sceneCanvas = cachedCanvas.scene,\n          filterCanvas = cachedCanvas.filter,\n          filterContext = filterCanvas.getContext(),\n          len,\n          imageData,\n          n,\n          filter;\n\n      if (filters) {\n        if (!this._filterUpToDate) {\n          var ratio = sceneCanvas.pixelRatio;\n          filterCanvas.setSize(sceneCanvas.width / sceneCanvas.pixelRatio, sceneCanvas.height / sceneCanvas.pixelRatio);\n\n          try {\n            len = filters.length;\n            filterContext.clear();\n            filterContext.drawImage(sceneCanvas._canvas, 0, 0, sceneCanvas.getWidth() / ratio, sceneCanvas.getHeight() / ratio);\n            imageData = filterContext.getImageData(0, 0, filterCanvas.getWidth(), filterCanvas.getHeight());\n\n            for (n = 0; n < len; n++) {\n              filter = filters[n];\n\n              if (typeof filter !== 'function') {\n                Util.error('Filter should be type of function, but got ' + typeof filter + ' instead. Please check correct filters');\n                continue;\n              }\n\n              filter.call(this, imageData);\n              filterContext.putImageData(imageData, 0, 0);\n            }\n          } catch (e) {\n            Util.error('Unable to apply filter. ' + e.message + ' This post my help you https://konvajs.org/docs/posts/Tainted_Canvas.html.');\n          }\n\n          this._filterUpToDate = true;\n        }\n\n        return filterCanvas;\n      }\n\n      return sceneCanvas;\n    }\n  }, {\n    key: \"on\",\n    value: function on(evtStr, handler) {\n      this._cache && this._cache.delete(ALL_LISTENERS);\n\n      if (arguments.length === 3) {\n        return this._delegate.apply(this, arguments);\n      }\n\n      var events = evtStr.split(SPACE),\n          len = events.length,\n          n,\n          event,\n          parts,\n          baseEvent,\n          name;\n\n      for (n = 0; n < len; n++) {\n        event = events[n];\n        parts = event.split('.');\n        baseEvent = parts[0];\n        name = parts[1] || '';\n\n        if (!this.eventListeners[baseEvent]) {\n          this.eventListeners[baseEvent] = [];\n        }\n\n        this.eventListeners[baseEvent].push({\n          name: name,\n          handler: handler\n        });\n      }\n\n      return this;\n    }\n  }, {\n    key: \"off\",\n    value: function off(evtStr, callback) {\n      var events = (evtStr || '').split(SPACE),\n          len = events.length,\n          n,\n          t,\n          event,\n          parts,\n          baseEvent,\n          name;\n      this._cache && this._cache.delete(ALL_LISTENERS);\n\n      if (!evtStr) {\n        for (t in this.eventListeners) {\n          this._off(t);\n        }\n      }\n\n      for (n = 0; n < len; n++) {\n        event = events[n];\n        parts = event.split('.');\n        baseEvent = parts[0];\n        name = parts[1];\n\n        if (baseEvent) {\n          if (this.eventListeners[baseEvent]) {\n            this._off(baseEvent, name, callback);\n          }\n        } else {\n          for (t in this.eventListeners) {\n            this._off(t, name, callback);\n          }\n        }\n      }\n\n      return this;\n    }\n  }, {\n    key: \"dispatchEvent\",\n    value: function dispatchEvent(evt) {\n      var e = {\n        target: this,\n        type: evt.type,\n        evt: evt\n      };\n      this.fire(evt.type, e);\n      return this;\n    }\n  }, {\n    key: \"addEventListener\",\n    value: function addEventListener(type, handler) {\n      this.on(type, function (evt) {\n        handler.call(this, evt.evt);\n      });\n      return this;\n    }\n  }, {\n    key: \"removeEventListener\",\n    value: function removeEventListener(type) {\n      this.off(type);\n      return this;\n    }\n  }, {\n    key: \"_delegate\",\n    value: function _delegate(event, selector, handler) {\n      var stopNode = this;\n      this.on(event, function (evt) {\n        var targets = evt.target.findAncestors(selector, true, stopNode);\n\n        for (var i = 0; i < targets.length; i++) {\n          evt = Util.cloneObject(evt);\n          evt.currentTarget = targets[i];\n          handler.call(targets[i], evt);\n        }\n      });\n    }\n  }, {\n    key: \"remove\",\n    value: function remove() {\n      if (this.isDragging()) {\n        this.stopDrag();\n      }\n\n      DD._dragElements.delete(this._id);\n\n      this._remove();\n\n      return this;\n    }\n  }, {\n    key: \"_clearCaches\",\n    value: function _clearCaches() {\n      this._clearSelfAndDescendantCache(ABSOLUTE_TRANSFORM);\n\n      this._clearSelfAndDescendantCache(ABSOLUTE_OPACITY);\n\n      this._clearSelfAndDescendantCache(ABSOLUTE_SCALE);\n\n      this._clearSelfAndDescendantCache(STAGE);\n\n      this._clearSelfAndDescendantCache(VISIBLE);\n\n      this._clearSelfAndDescendantCache(LISTENING);\n    }\n  }, {\n    key: \"_remove\",\n    value: function _remove() {\n      this._clearCaches();\n\n      var parent = this.getParent();\n\n      if (parent && parent.children) {\n        parent.children.splice(this.index, 1);\n\n        parent._setChildrenIndices();\n\n        this.parent = null;\n      }\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.remove();\n      return this;\n    }\n  }, {\n    key: \"getAttr\",\n    value: function getAttr(attr) {\n      var method = 'get' + Util._capitalize(attr);\n\n      if (Util._isFunction(this[method])) {\n        return this[method]();\n      }\n\n      return this.attrs[attr];\n    }\n  }, {\n    key: \"getAncestors\",\n    value: function getAncestors() {\n      var parent = this.getParent(),\n          ancestors = [];\n\n      while (parent) {\n        ancestors.push(parent);\n        parent = parent.getParent();\n      }\n\n      return ancestors;\n    }\n  }, {\n    key: \"getAttrs\",\n    value: function getAttrs() {\n      return this.attrs || {};\n    }\n  }, {\n    key: \"setAttrs\",\n    value: function setAttrs(config) {\n      var _this2 = this;\n\n      this._batchTransformChanges(function () {\n        var key, method;\n\n        if (!config) {\n          return _this2;\n        }\n\n        for (key in config) {\n          if (key === CHILDREN) {\n            continue;\n          }\n\n          method = SET + Util._capitalize(key);\n\n          if (Util._isFunction(_this2[method])) {\n            _this2[method](config[key]);\n          } else {\n            _this2._setAttr(key, config[key]);\n          }\n        }\n      });\n\n      return this;\n    }\n  }, {\n    key: \"isListening\",\n    value: function isListening() {\n      return this._getCache(LISTENING, this._isListening);\n    }\n  }, {\n    key: \"_isListening\",\n    value: function _isListening(relativeTo) {\n      var listening = this.listening();\n\n      if (!listening) {\n        return false;\n      }\n\n      var parent = this.getParent();\n\n      if (parent && parent !== relativeTo && this !== relativeTo) {\n        return parent._isListening(relativeTo);\n      } else {\n        return true;\n      }\n    }\n  }, {\n    key: \"isVisible\",\n    value: function isVisible() {\n      return this._getCache(VISIBLE, this._isVisible);\n    }\n  }, {\n    key: \"_isVisible\",\n    value: function _isVisible(relativeTo) {\n      var visible = this.visible();\n\n      if (!visible) {\n        return false;\n      }\n\n      var parent = this.getParent();\n\n      if (parent && parent !== relativeTo && this !== relativeTo) {\n        return parent._isVisible(relativeTo);\n      } else {\n        return true;\n      }\n    }\n  }, {\n    key: \"shouldDrawHit\",\n    value: function shouldDrawHit(top) {\n      var skipDragCheck = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (top) {\n        return this._isVisible(top) && this._isListening(top);\n      }\n\n      var layer = this.getLayer();\n      var layerUnderDrag = false;\n\n      DD._dragElements.forEach(function (elem) {\n        if (elem.dragStatus !== 'dragging') {\n          return;\n        } else if (elem.node.nodeType === 'Stage') {\n          layerUnderDrag = true;\n        } else if (elem.node.getLayer() === layer) {\n          layerUnderDrag = true;\n        }\n      });\n\n      var dragSkip = !skipDragCheck && !Konva.hitOnDragEnabled && layerUnderDrag;\n      return this.isListening() && this.isVisible() && !dragSkip;\n    }\n  }, {\n    key: \"show\",\n    value: function show() {\n      this.visible(true);\n      return this;\n    }\n  }, {\n    key: \"hide\",\n    value: function hide() {\n      this.visible(false);\n      return this;\n    }\n  }, {\n    key: \"getZIndex\",\n    value: function getZIndex() {\n      return this.index || 0;\n    }\n  }, {\n    key: \"getAbsoluteZIndex\",\n    value: function getAbsoluteZIndex() {\n      var depth = this.getDepth(),\n          that = this,\n          index = 0,\n          nodes,\n          len,\n          n,\n          child;\n\n      function addChildren(children) {\n        nodes = [];\n        len = children.length;\n\n        for (n = 0; n < len; n++) {\n          child = children[n];\n          index++;\n\n          if (child.nodeType !== SHAPE) {\n            nodes = nodes.concat(child.getChildren().slice());\n          }\n\n          if (child._id === that._id) {\n            n = len;\n          }\n        }\n\n        if (nodes.length > 0 && nodes[0].getDepth() <= depth) {\n          addChildren(nodes);\n        }\n      }\n\n      if (that.nodeType !== UPPER_STAGE) {\n        addChildren(that.getStage().getChildren());\n      }\n\n      return index;\n    }\n  }, {\n    key: \"getDepth\",\n    value: function getDepth() {\n      var depth = 0,\n          parent = this.parent;\n\n      while (parent) {\n        depth++;\n        parent = parent.parent;\n      }\n\n      return depth;\n    }\n  }, {\n    key: \"_batchTransformChanges\",\n    value: function _batchTransformChanges(func) {\n      this._batchingTransformChange = true;\n      func();\n      this._batchingTransformChange = false;\n\n      if (this._needClearTransformCache) {\n        this._clearCache(TRANSFORM);\n\n        this._clearSelfAndDescendantCache(ABSOLUTE_TRANSFORM);\n      }\n\n      this._needClearTransformCache = false;\n    }\n  }, {\n    key: \"setPosition\",\n    value: function setPosition(pos) {\n      var _this3 = this;\n\n      this._batchTransformChanges(function () {\n        _this3.x(pos.x);\n\n        _this3.y(pos.y);\n      });\n\n      return this;\n    }\n  }, {\n    key: \"getPosition\",\n    value: function getPosition() {\n      return {\n        x: this.x(),\n        y: this.y()\n      };\n    }\n  }, {\n    key: \"getRelativePointerPosition\",\n    value: function getRelativePointerPosition() {\n      if (!this.getStage()) {\n        return null;\n      }\n\n      var pos = this.getStage().getPointerPosition();\n\n      if (!pos) {\n        return null;\n      }\n\n      var transform = this.getAbsoluteTransform().copy();\n      transform.invert();\n      return transform.point(pos);\n    }\n  }, {\n    key: \"getAbsolutePosition\",\n    value: function getAbsolutePosition(top) {\n      var haveCachedParent = false;\n      var parent = this.parent;\n\n      while (parent) {\n        if (parent.isCached()) {\n          haveCachedParent = true;\n          break;\n        }\n\n        parent = parent.parent;\n      }\n\n      if (haveCachedParent && !top) {\n        top = true;\n      }\n\n      var absoluteMatrix = this.getAbsoluteTransform(top).getMatrix(),\n          absoluteTransform = new Transform(),\n          offset = this.offset();\n      absoluteTransform.m = absoluteMatrix.slice();\n      absoluteTransform.translate(offset.x, offset.y);\n      return absoluteTransform.getTranslation();\n    }\n  }, {\n    key: \"setAbsolutePosition\",\n    value: function setAbsolutePosition(pos) {\n      var origTrans = this._clearTransform();\n\n      this.attrs.x = origTrans.x;\n      this.attrs.y = origTrans.y;\n      delete origTrans.x;\n      delete origTrans.y;\n\n      this._clearCache(TRANSFORM);\n\n      var it = this._getAbsoluteTransform().copy();\n\n      it.invert();\n      it.translate(pos.x, pos.y);\n      pos = {\n        x: this.attrs.x + it.getTranslation().x,\n        y: this.attrs.y + it.getTranslation().y\n      };\n\n      this._setTransform(origTrans);\n\n      this.setPosition({\n        x: pos.x,\n        y: pos.y\n      });\n\n      this._clearCache(TRANSFORM);\n\n      this._clearSelfAndDescendantCache(ABSOLUTE_TRANSFORM);\n\n      return this;\n    }\n  }, {\n    key: \"_setTransform\",\n    value: function _setTransform(trans) {\n      var key;\n\n      for (key in trans) {\n        this.attrs[key] = trans[key];\n      }\n    }\n  }, {\n    key: \"_clearTransform\",\n    value: function _clearTransform() {\n      var trans = {\n        x: this.x(),\n        y: this.y(),\n        rotation: this.rotation(),\n        scaleX: this.scaleX(),\n        scaleY: this.scaleY(),\n        offsetX: this.offsetX(),\n        offsetY: this.offsetY(),\n        skewX: this.skewX(),\n        skewY: this.skewY()\n      };\n      this.attrs.x = 0;\n      this.attrs.y = 0;\n      this.attrs.rotation = 0;\n      this.attrs.scaleX = 1;\n      this.attrs.scaleY = 1;\n      this.attrs.offsetX = 0;\n      this.attrs.offsetY = 0;\n      this.attrs.skewX = 0;\n      this.attrs.skewY = 0;\n      return trans;\n    }\n  }, {\n    key: \"move\",\n    value: function move(change) {\n      var changeX = change.x,\n          changeY = change.y,\n          x = this.x(),\n          y = this.y();\n\n      if (changeX !== undefined) {\n        x += changeX;\n      }\n\n      if (changeY !== undefined) {\n        y += changeY;\n      }\n\n      this.setPosition({\n        x: x,\n        y: y\n      });\n      return this;\n    }\n  }, {\n    key: \"_eachAncestorReverse\",\n    value: function _eachAncestorReverse(func, top) {\n      var family = [],\n          parent = this.getParent(),\n          len,\n          n;\n\n      if (top && top._id === this._id) {\n        return;\n      }\n\n      family.unshift(this);\n\n      while (parent && (!top || parent._id !== top._id)) {\n        family.unshift(parent);\n        parent = parent.parent;\n      }\n\n      len = family.length;\n\n      for (n = 0; n < len; n++) {\n        func(family[n]);\n      }\n    }\n  }, {\n    key: \"rotate\",\n    value: function rotate(theta) {\n      this.rotation(this.rotation() + theta);\n      return this;\n    }\n  }, {\n    key: \"moveToTop\",\n    value: function moveToTop() {\n      if (!this.parent) {\n        Util.warn('Node has no parent. moveToTop function is ignored.');\n        return false;\n      }\n\n      var index = this.index;\n      this.parent.children.splice(index, 1);\n      this.parent.children.push(this);\n\n      this.parent._setChildrenIndices();\n\n      return true;\n    }\n  }, {\n    key: \"moveUp\",\n    value: function moveUp() {\n      if (!this.parent) {\n        Util.warn('Node has no parent. moveUp function is ignored.');\n        return false;\n      }\n\n      var index = this.index,\n          len = this.parent.getChildren().length;\n\n      if (index < len - 1) {\n        this.parent.children.splice(index, 1);\n        this.parent.children.splice(index + 1, 0, this);\n\n        this.parent._setChildrenIndices();\n\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"moveDown\",\n    value: function moveDown() {\n      if (!this.parent) {\n        Util.warn('Node has no parent. moveDown function is ignored.');\n        return false;\n      }\n\n      var index = this.index;\n\n      if (index > 0) {\n        this.parent.children.splice(index, 1);\n        this.parent.children.splice(index - 1, 0, this);\n\n        this.parent._setChildrenIndices();\n\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"moveToBottom\",\n    value: function moveToBottom() {\n      if (!this.parent) {\n        Util.warn('Node has no parent. moveToBottom function is ignored.');\n        return false;\n      }\n\n      var index = this.index;\n\n      if (index > 0) {\n        this.parent.children.splice(index, 1);\n        this.parent.children.unshift(this);\n\n        this.parent._setChildrenIndices();\n\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"setZIndex\",\n    value: function setZIndex(zIndex) {\n      if (!this.parent) {\n        Util.warn('Node has no parent. zIndex parameter is ignored.');\n        return this;\n      }\n\n      if (zIndex < 0 || zIndex >= this.parent.children.length) {\n        Util.warn('Unexpected value ' + zIndex + ' for zIndex property. zIndex is just index of a node in children of its parent. Expected value is from 0 to ' + (this.parent.children.length - 1) + '.');\n      }\n\n      var index = this.index;\n      this.parent.children.splice(index, 1);\n      this.parent.children.splice(zIndex, 0, this);\n\n      this.parent._setChildrenIndices();\n\n      return this;\n    }\n  }, {\n    key: \"getAbsoluteOpacity\",\n    value: function getAbsoluteOpacity() {\n      return this._getCache(ABSOLUTE_OPACITY, this._getAbsoluteOpacity);\n    }\n  }, {\n    key: \"_getAbsoluteOpacity\",\n    value: function _getAbsoluteOpacity() {\n      var absOpacity = this.opacity();\n      var parent = this.getParent();\n\n      if (parent && !parent._isUnderCache) {\n        absOpacity *= parent.getAbsoluteOpacity();\n      }\n\n      return absOpacity;\n    }\n  }, {\n    key: \"moveTo\",\n    value: function moveTo(newContainer) {\n      if (this.getParent() !== newContainer) {\n        this._remove();\n\n        newContainer.add(this);\n      }\n\n      return this;\n    }\n  }, {\n    key: \"toObject\",\n    value: function toObject() {\n      var obj = {},\n          attrs = this.getAttrs(),\n          key,\n          val,\n          getter,\n          defaultValue,\n          nonPlainObject;\n      obj.attrs = {};\n\n      for (key in attrs) {\n        val = attrs[key];\n        nonPlainObject = Util.isObject(val) && !Util._isPlainObject(val) && !Util._isArray(val);\n\n        if (nonPlainObject) {\n          continue;\n        }\n\n        getter = typeof this[key] === 'function' && this[key];\n        delete attrs[key];\n        defaultValue = getter ? getter.call(this) : null;\n        attrs[key] = val;\n\n        if (defaultValue !== val) {\n          obj.attrs[key] = val;\n        }\n      }\n\n      obj.className = this.getClassName();\n      return Util._prepareToStringify(obj);\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return JSON.stringify(this.toObject());\n    }\n  }, {\n    key: \"getParent\",\n    value: function getParent() {\n      return this.parent;\n    }\n  }, {\n    key: \"findAncestors\",\n    value: function findAncestors(selector, includeSelf, stopNode) {\n      var res = [];\n\n      if (includeSelf && this._isMatch(selector)) {\n        res.push(this);\n      }\n\n      var ancestor = this.parent;\n\n      while (ancestor) {\n        if (ancestor === stopNode) {\n          return res;\n        }\n\n        if (ancestor._isMatch(selector)) {\n          res.push(ancestor);\n        }\n\n        ancestor = ancestor.parent;\n      }\n\n      return res;\n    }\n  }, {\n    key: \"isAncestorOf\",\n    value: function isAncestorOf(node) {\n      return false;\n    }\n  }, {\n    key: \"findAncestor\",\n    value: function findAncestor(selector, includeSelf, stopNode) {\n      return this.findAncestors(selector, includeSelf, stopNode)[0];\n    }\n  }, {\n    key: \"_isMatch\",\n    value: function _isMatch(selector) {\n      if (!selector) {\n        return false;\n      }\n\n      if (typeof selector === 'function') {\n        return selector(this);\n      }\n\n      var selectorArr = selector.replace(/ /g, '').split(','),\n          len = selectorArr.length,\n          n,\n          sel;\n\n      for (n = 0; n < len; n++) {\n        sel = selectorArr[n];\n\n        if (!Util.isValidSelector(sel)) {\n          Util.warn('Selector \"' + sel + '\" is invalid. Allowed selectors examples are \"#foo\", \".bar\" or \"Group\".');\n          Util.warn('If you have a custom shape with such className, please change it to start with upper letter like \"Triangle\".');\n          Util.warn('Konva is awesome, right?');\n        }\n\n        if (sel.charAt(0) === '#') {\n          if (this.id() === sel.slice(1)) {\n            return true;\n          }\n        } else if (sel.charAt(0) === '.') {\n          if (this.hasName(sel.slice(1))) {\n            return true;\n          }\n        } else if (this.className === sel || this.nodeType === sel) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n  }, {\n    key: \"getLayer\",\n    value: function getLayer() {\n      var parent = this.getParent();\n      return parent ? parent.getLayer() : null;\n    }\n  }, {\n    key: \"getStage\",\n    value: function getStage() {\n      return this._getCache(STAGE, this._getStage);\n    }\n  }, {\n    key: \"_getStage\",\n    value: function _getStage() {\n      var parent = this.getParent();\n\n      if (parent) {\n        return parent.getStage();\n      } else {\n        return undefined;\n      }\n    }\n  }, {\n    key: \"fire\",\n    value: function fire(eventType) {\n      var evt = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var bubble = arguments.length > 2 ? arguments[2] : undefined;\n      evt.target = evt.target || this;\n\n      if (bubble) {\n        this._fireAndBubble(eventType, evt);\n      } else {\n        this._fire(eventType, evt);\n      }\n\n      return this;\n    }\n  }, {\n    key: \"getAbsoluteTransform\",\n    value: function getAbsoluteTransform(top) {\n      if (top) {\n        return this._getAbsoluteTransform(top);\n      } else {\n        return this._getCache(ABSOLUTE_TRANSFORM, this._getAbsoluteTransform);\n      }\n    }\n  }, {\n    key: \"_getAbsoluteTransform\",\n    value: function _getAbsoluteTransform(top) {\n      var at;\n\n      if (top) {\n        at = new Transform();\n\n        this._eachAncestorReverse(function (node) {\n          var transformsEnabled = node.transformsEnabled();\n\n          if (transformsEnabled === 'all') {\n            at.multiply(node.getTransform());\n          } else if (transformsEnabled === 'position') {\n            at.translate(node.x() - node.offsetX(), node.y() - node.offsetY());\n          }\n        }, top);\n\n        return at;\n      } else {\n        at = this._cache.get(ABSOLUTE_TRANSFORM) || new Transform();\n\n        if (this.parent) {\n          this.parent.getAbsoluteTransform().copyInto(at);\n        } else {\n          at.reset();\n        }\n\n        var transformsEnabled = this.transformsEnabled();\n\n        if (transformsEnabled === 'all') {\n          at.multiply(this.getTransform());\n        } else if (transformsEnabled === 'position') {\n          var x = this.attrs.x || 0;\n          var y = this.attrs.y || 0;\n          var offsetX = this.attrs.offsetX || 0;\n          var offsetY = this.attrs.offsetY || 0;\n          at.translate(x - offsetX, y - offsetY);\n        }\n\n        at.dirty = false;\n        return at;\n      }\n    }\n  }, {\n    key: \"getAbsoluteScale\",\n    value: function getAbsoluteScale(top) {\n      var parent = this;\n\n      while (parent) {\n        if (parent._isUnderCache) {\n          top = parent;\n        }\n\n        parent = parent.getParent();\n      }\n\n      var transform = this.getAbsoluteTransform(top);\n      var attrs = transform.decompose();\n      return {\n        x: attrs.scaleX,\n        y: attrs.scaleY\n      };\n    }\n  }, {\n    key: \"getAbsoluteRotation\",\n    value: function getAbsoluteRotation() {\n      return this.getAbsoluteTransform().decompose().rotation;\n    }\n  }, {\n    key: \"getTransform\",\n    value: function getTransform() {\n      return this._getCache(TRANSFORM, this._getTransform);\n    }\n  }, {\n    key: \"_getTransform\",\n    value: function _getTransform() {\n      var _a, _b;\n\n      var m = this._cache.get(TRANSFORM) || new Transform();\n      m.reset();\n      var x = this.x(),\n          y = this.y(),\n          rotation = Konva.getAngle(this.rotation()),\n          scaleX = (_a = this.attrs.scaleX) !== null && _a !== void 0 ? _a : 1,\n          scaleY = (_b = this.attrs.scaleY) !== null && _b !== void 0 ? _b : 1,\n          skewX = this.attrs.skewX || 0,\n          skewY = this.attrs.skewY || 0,\n          offsetX = this.attrs.offsetX || 0,\n          offsetY = this.attrs.offsetY || 0;\n\n      if (x !== 0 || y !== 0) {\n        m.translate(x, y);\n      }\n\n      if (rotation !== 0) {\n        m.rotate(rotation);\n      }\n\n      if (skewX !== 0 || skewY !== 0) {\n        m.skew(skewX, skewY);\n      }\n\n      if (scaleX !== 1 || scaleY !== 1) {\n        m.scale(scaleX, scaleY);\n      }\n\n      if (offsetX !== 0 || offsetY !== 0) {\n        m.translate(-1 * offsetX, -1 * offsetY);\n      }\n\n      m.dirty = false;\n      return m;\n    }\n  }, {\n    key: \"clone\",\n    value: function clone(obj) {\n      var attrs = Util.cloneObject(this.attrs),\n          key,\n          allListeners,\n          len,\n          n,\n          listener;\n\n      for (key in obj) {\n        attrs[key] = obj[key];\n      }\n\n      var node = new this.constructor(attrs);\n\n      for (key in this.eventListeners) {\n        allListeners = this.eventListeners[key];\n        len = allListeners.length;\n\n        for (n = 0; n < len; n++) {\n          listener = allListeners[n];\n\n          if (listener.name.indexOf(KONVA) < 0) {\n            if (!node.eventListeners[key]) {\n              node.eventListeners[key] = [];\n            }\n\n            node.eventListeners[key].push(listener);\n          }\n        }\n      }\n\n      return node;\n    }\n  }, {\n    key: \"_toKonvaCanvas\",\n    value: function _toKonvaCanvas(config) {\n      config = config || {};\n      var box = this.getClientRect();\n      var stage = this.getStage(),\n          x = config.x !== undefined ? config.x : box.x,\n          y = config.y !== undefined ? config.y : box.y,\n          pixelRatio = config.pixelRatio || 1,\n          canvas = new SceneCanvas({\n        width: config.width || box.width || (stage ? stage.width() : 0),\n        height: config.height || box.height || (stage ? stage.height() : 0),\n        pixelRatio: pixelRatio\n      }),\n          context = canvas.getContext();\n      context.save();\n\n      if (x || y) {\n        context.translate(-1 * x, -1 * y);\n      }\n\n      this.drawScene(canvas);\n      context.restore();\n      return canvas;\n    }\n  }, {\n    key: \"toCanvas\",\n    value: function toCanvas(config) {\n      return this._toKonvaCanvas(config)._canvas;\n    }\n  }, {\n    key: \"toDataURL\",\n    value: function toDataURL(config) {\n      config = config || {};\n      var mimeType = config.mimeType || null,\n          quality = config.quality || null;\n\n      var url = this._toKonvaCanvas(config).toDataURL(mimeType, quality);\n\n      if (config.callback) {\n        config.callback(url);\n      }\n\n      return url;\n    }\n  }, {\n    key: \"toImage\",\n    value: function toImage(config) {\n      if (!config || !config.callback) {\n        throw 'callback required for toImage method config argument';\n      }\n\n      var callback = config.callback;\n      delete config.callback;\n\n      Util._urlToImage(this.toDataURL(config), function (img) {\n        callback(img);\n      });\n    }\n  }, {\n    key: \"setSize\",\n    value: function setSize(size) {\n      this.width(size.width);\n      this.height(size.height);\n      return this;\n    }\n  }, {\n    key: \"getSize\",\n    value: function getSize() {\n      return {\n        width: this.width(),\n        height: this.height()\n      };\n    }\n  }, {\n    key: \"getClassName\",\n    value: function getClassName() {\n      return this.className || this.nodeType;\n    }\n  }, {\n    key: \"getType\",\n    value: function getType() {\n      return this.nodeType;\n    }\n  }, {\n    key: \"getDragDistance\",\n    value: function getDragDistance() {\n      if (this.attrs.dragDistance !== undefined) {\n        return this.attrs.dragDistance;\n      } else if (this.parent) {\n        return this.parent.getDragDistance();\n      } else {\n        return Konva.dragDistance;\n      }\n    }\n  }, {\n    key: \"_off\",\n    value: function _off(type, name, callback) {\n      var evtListeners = this.eventListeners[type],\n          i,\n          evtName,\n          handler;\n\n      for (i = 0; i < evtListeners.length; i++) {\n        evtName = evtListeners[i].name;\n        handler = evtListeners[i].handler;\n\n        if ((evtName !== 'konva' || name === 'konva') && (!name || evtName === name) && (!callback || callback === handler)) {\n          evtListeners.splice(i, 1);\n\n          if (evtListeners.length === 0) {\n            delete this.eventListeners[type];\n            break;\n          }\n\n          i--;\n        }\n      }\n    }\n  }, {\n    key: \"_fireChangeEvent\",\n    value: function _fireChangeEvent(attr, oldVal, newVal) {\n      this._fire(attr + CHANGE, {\n        oldVal: oldVal,\n        newVal: newVal\n      });\n    }\n  }, {\n    key: \"addName\",\n    value: function addName(name) {\n      if (!this.hasName(name)) {\n        var oldName = this.name();\n        var newName = oldName ? oldName + ' ' + name : name;\n        this.name(newName);\n      }\n\n      return this;\n    }\n  }, {\n    key: \"hasName\",\n    value: function hasName(name) {\n      if (!name) {\n        return false;\n      }\n\n      var fullName = this.name();\n\n      if (!fullName) {\n        return false;\n      }\n\n      var names = (fullName || '').split(/\\s/g);\n      return names.indexOf(name) !== -1;\n    }\n  }, {\n    key: \"removeName\",\n    value: function removeName(name) {\n      var names = (this.name() || '').split(/\\s/g);\n      var index = names.indexOf(name);\n\n      if (index !== -1) {\n        names.splice(index, 1);\n        this.name(names.join(' '));\n      }\n\n      return this;\n    }\n  }, {\n    key: \"setAttr\",\n    value: function setAttr(attr, val) {\n      var func = this[SET + Util._capitalize(attr)];\n\n      if (Util._isFunction(func)) {\n        func.call(this, val);\n      } else {\n        this._setAttr(attr, val);\n      }\n\n      return this;\n    }\n  }, {\n    key: \"_requestDraw\",\n    value: function _requestDraw() {\n      if (Konva.autoDrawEnabled) {\n        var drawNode = this.getLayer() || this.getStage();\n        drawNode === null || drawNode === void 0 ? void 0 : drawNode.batchDraw();\n      }\n    }\n  }, {\n    key: \"_setAttr\",\n    value: function _setAttr(key, val) {\n      var oldVal = this.attrs[key];\n\n      if (oldVal === val && !Util.isObject(val)) {\n        return;\n      }\n\n      if (val === undefined || val === null) {\n        delete this.attrs[key];\n      } else {\n        this.attrs[key] = val;\n      }\n\n      if (this._shouldFireChangeEvents) {\n        this._fireChangeEvent(key, oldVal, val);\n      }\n\n      this._requestDraw();\n    }\n  }, {\n    key: \"_setComponentAttr\",\n    value: function _setComponentAttr(key, component, val) {\n      var oldVal;\n\n      if (val !== undefined) {\n        oldVal = this.attrs[key];\n\n        if (!oldVal) {\n          this.attrs[key] = this.getAttr(key);\n        }\n\n        this.attrs[key][component] = val;\n\n        this._fireChangeEvent(key, oldVal, val);\n      }\n    }\n  }, {\n    key: \"_fireAndBubble\",\n    value: function _fireAndBubble(eventType, evt, compareShape) {\n      if (evt && this.nodeType === SHAPE) {\n        evt.target = this;\n      }\n\n      var shouldStop = (eventType === MOUSEENTER || eventType === MOUSELEAVE) && (compareShape && (this === compareShape || this.isAncestorOf && this.isAncestorOf(compareShape)) || this.nodeType === 'Stage' && !compareShape);\n\n      if (!shouldStop) {\n        this._fire(eventType, evt);\n\n        var stopBubble = (eventType === MOUSEENTER || eventType === MOUSELEAVE) && compareShape && compareShape.isAncestorOf && compareShape.isAncestorOf(this) && !compareShape.isAncestorOf(this.parent);\n\n        if ((evt && !evt.cancelBubble || !evt) && this.parent && this.parent.isListening() && !stopBubble) {\n          if (compareShape && compareShape.parent) {\n            this._fireAndBubble.call(this.parent, eventType, evt, compareShape);\n          } else {\n            this._fireAndBubble.call(this.parent, eventType, evt);\n          }\n        }\n      }\n    }\n  }, {\n    key: \"_getProtoListeners\",\n    value: function _getProtoListeners(eventType) {\n      var listeners = this._cache.get(ALL_LISTENERS);\n\n      if (!listeners) {\n        listeners = {};\n        var obj = Object.getPrototypeOf(this);\n\n        while (obj) {\n          if (!obj.eventListeners) {\n            obj = Object.getPrototypeOf(obj);\n            continue;\n          }\n\n          for (var event in obj.eventListeners) {\n            var newEvents = obj.eventListeners[event];\n            var oldEvents = listeners[event] || [];\n            listeners[event] = newEvents.concat(oldEvents);\n          }\n\n          obj = Object.getPrototypeOf(obj);\n        }\n\n        this._cache.set(ALL_LISTENERS, listeners);\n      }\n\n      return listeners[eventType];\n    }\n  }, {\n    key: \"_fire\",\n    value: function _fire(eventType, evt) {\n      evt = evt || {};\n      evt.currentTarget = this;\n      evt.type = eventType;\n\n      var topListeners = this._getProtoListeners(eventType);\n\n      if (topListeners) {\n        for (var i = 0; i < topListeners.length; i++) {\n          topListeners[i].handler.call(this, evt);\n        }\n      }\n\n      var selfListeners = this.eventListeners[eventType];\n\n      if (selfListeners) {\n        for (var i = 0; i < selfListeners.length; i++) {\n          selfListeners[i].handler.call(this, evt);\n        }\n      }\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      this.drawScene();\n      this.drawHit();\n      return this;\n    }\n  }, {\n    key: \"_createDragElement\",\n    value: function _createDragElement(evt) {\n      var pointerId = evt ? evt.pointerId : undefined;\n      var stage = this.getStage();\n      var ap = this.getAbsolutePosition();\n      var pos = stage._getPointerById(pointerId) || stage._changedPointerPositions[0] || ap;\n\n      DD._dragElements.set(this._id, {\n        node: this,\n        startPointerPos: pos,\n        offset: {\n          x: pos.x - ap.x,\n          y: pos.y - ap.y\n        },\n        dragStatus: 'ready',\n        pointerId: pointerId\n      });\n    }\n  }, {\n    key: \"startDrag\",\n    value: function startDrag(evt) {\n      var bubbleEvent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n      if (!DD._dragElements.has(this._id)) {\n        this._createDragElement(evt);\n      }\n\n      var elem = DD._dragElements.get(this._id);\n\n      elem.dragStatus = 'dragging';\n      this.fire('dragstart', {\n        type: 'dragstart',\n        target: this,\n        evt: evt && evt.evt\n      }, bubbleEvent);\n    }\n  }, {\n    key: \"_setDragPosition\",\n    value: function _setDragPosition(evt, elem) {\n      var pos = this.getStage()._getPointerById(elem.pointerId);\n\n      if (!pos) {\n        return;\n      }\n\n      var newNodePos = {\n        x: pos.x - elem.offset.x,\n        y: pos.y - elem.offset.y\n      };\n      var dbf = this.dragBoundFunc();\n\n      if (dbf !== undefined) {\n        var bounded = dbf.call(this, newNodePos, evt);\n\n        if (!bounded) {\n          Util.warn('dragBoundFunc did not return any value. That is unexpected behavior. You must return new absolute position from dragBoundFunc.');\n        } else {\n          newNodePos = bounded;\n        }\n      }\n\n      if (!this._lastPos || this._lastPos.x !== newNodePos.x || this._lastPos.y !== newNodePos.y) {\n        this.setAbsolutePosition(newNodePos);\n\n        this._requestDraw();\n      }\n\n      this._lastPos = newNodePos;\n    }\n  }, {\n    key: \"stopDrag\",\n    value: function stopDrag(evt) {\n      var elem = DD._dragElements.get(this._id);\n\n      if (elem) {\n        elem.dragStatus = 'stopped';\n      }\n\n      DD._endDragBefore(evt);\n\n      DD._endDragAfter(evt);\n    }\n  }, {\n    key: \"setDraggable\",\n    value: function setDraggable(draggable) {\n      this._setAttr('draggable', draggable);\n\n      this._dragChange();\n    }\n  }, {\n    key: \"isDragging\",\n    value: function isDragging() {\n      var elem = DD._dragElements.get(this._id);\n\n      return elem ? elem.dragStatus === 'dragging' : false;\n    }\n  }, {\n    key: \"_listenDrag\",\n    value: function _listenDrag() {\n      this._dragCleanup();\n\n      this.on('mousedown.konva touchstart.konva', function (evt) {\n        var _this4 = this;\n\n        var shouldCheckButton = evt.evt['button'] !== undefined;\n        var canDrag = !shouldCheckButton || Konva.dragButtons.indexOf(evt.evt['button']) >= 0;\n\n        if (!canDrag) {\n          return;\n        }\n\n        if (this.isDragging()) {\n          return;\n        }\n\n        var hasDraggingChild = false;\n\n        DD._dragElements.forEach(function (elem) {\n          if (_this4.isAncestorOf(elem.node)) {\n            hasDraggingChild = true;\n          }\n        });\n\n        if (!hasDraggingChild) {\n          this._createDragElement(evt);\n        }\n      });\n    }\n  }, {\n    key: \"_dragChange\",\n    value: function _dragChange() {\n      if (this.attrs.draggable) {\n        this._listenDrag();\n      } else {\n        this._dragCleanup();\n\n        var stage = this.getStage();\n\n        if (!stage) {\n          return;\n        }\n\n        var dragElement = DD._dragElements.get(this._id);\n\n        var isDragging = dragElement && dragElement.dragStatus === 'dragging';\n        var isReady = dragElement && dragElement.dragStatus === 'ready';\n\n        if (isDragging) {\n          this.stopDrag();\n        } else if (isReady) {\n          DD._dragElements.delete(this._id);\n        }\n      }\n    }\n  }, {\n    key: \"_dragCleanup\",\n    value: function _dragCleanup() {\n      this.off('mousedown.konva');\n      this.off('touchstart.konva');\n    }\n  }, {\n    key: \"isClientRectOnScreen\",\n    value: function isClientRectOnScreen() {\n      var margin = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n        x: 0,\n        y: 0\n      };\n      var stage = this.getStage();\n\n      if (!stage) {\n        return false;\n      }\n\n      var screenRect = {\n        x: -margin.x,\n        y: -margin.y,\n        width: stage.width() + margin.x,\n        height: stage.height() + margin.y\n      };\n      return Util.haveIntersection(screenRect, this.getClientRect());\n    }\n  }], [{\n    key: \"create\",\n    value: function create(data, container) {\n      if (Util._isString(data)) {\n        data = JSON.parse(data);\n      }\n\n      return this._createNode(data, container);\n    }\n  }, {\n    key: \"_createNode\",\n    value: function _createNode(obj, container) {\n      var className = Node.prototype.getClassName.call(obj),\n          children = obj.children,\n          no,\n          len,\n          n;\n\n      if (container) {\n        obj.attrs.container = container;\n      }\n\n      if (!Konva[className]) {\n        Util.warn('Can not find a node with class name \"' + className + '\". Fallback to \"Shape\".');\n        className = 'Shape';\n      }\n\n      var Class = Konva[className];\n      no = new Class(obj.attrs);\n\n      if (children) {\n        len = children.length;\n\n        for (n = 0; n < len; n++) {\n          no.add(Node._createNode(children[n]));\n        }\n      }\n\n      return no;\n    }\n  }]);\n\n  return Node;\n}();\nNode.prototype.nodeType = 'Node';\nNode.prototype._attrsAffectingSize = [];\nNode.prototype.eventListeners = {};\nNode.prototype.on.call(Node.prototype, TRANSFORM_CHANGE_STR, function () {\n  if (this._batchingTransformChange) {\n    this._needClearTransformCache = true;\n    return;\n  }\n\n  this._clearCache(TRANSFORM);\n\n  this._clearSelfAndDescendantCache(ABSOLUTE_TRANSFORM);\n});\nNode.prototype.on.call(Node.prototype, 'visibleChange.konva', function () {\n  this._clearSelfAndDescendantCache(VISIBLE);\n});\nNode.prototype.on.call(Node.prototype, 'listeningChange.konva', function () {\n  this._clearSelfAndDescendantCache(LISTENING);\n});\nNode.prototype.on.call(Node.prototype, 'opacityChange.konva', function () {\n  this._clearSelfAndDescendantCache(ABSOLUTE_OPACITY);\n});\nvar addGetterSetter = Factory.addGetterSetter;\naddGetterSetter(Node, 'zIndex');\naddGetterSetter(Node, 'absolutePosition');\naddGetterSetter(Node, 'position');\naddGetterSetter(Node, 'x', 0, getNumberValidator());\naddGetterSetter(Node, 'y', 0, getNumberValidator());\naddGetterSetter(Node, 'globalCompositeOperation', 'source-over', getStringValidator());\naddGetterSetter(Node, 'opacity', 1, getNumberValidator());\naddGetterSetter(Node, 'name', '', getStringValidator());\naddGetterSetter(Node, 'id', '', getStringValidator());\naddGetterSetter(Node, 'rotation', 0, getNumberValidator());\nFactory.addComponentsGetterSetter(Node, 'scale', ['x', 'y']);\naddGetterSetter(Node, 'scaleX', 1, getNumberValidator());\naddGetterSetter(Node, 'scaleY', 1, getNumberValidator());\nFactory.addComponentsGetterSetter(Node, 'skew', ['x', 'y']);\naddGetterSetter(Node, 'skewX', 0, getNumberValidator());\naddGetterSetter(Node, 'skewY', 0, getNumberValidator());\nFactory.addComponentsGetterSetter(Node, 'offset', ['x', 'y']);\naddGetterSetter(Node, 'offsetX', 0, getNumberValidator());\naddGetterSetter(Node, 'offsetY', 0, getNumberValidator());\naddGetterSetter(Node, 'dragDistance', null, getNumberValidator());\naddGetterSetter(Node, 'width', 0, getNumberValidator());\naddGetterSetter(Node, 'height', 0, getNumberValidator());\naddGetterSetter(Node, 'listening', true, getBooleanValidator());\naddGetterSetter(Node, 'preventDefault', true, getBooleanValidator());\naddGetterSetter(Node, 'filters', null, function (val) {\n  this._filterUpToDate = false;\n  return val;\n});\naddGetterSetter(Node, 'visible', true, getBooleanValidator());\naddGetterSetter(Node, 'transformsEnabled', 'all', getStringValidator());\naddGetterSetter(Node, 'size');\naddGetterSetter(Node, 'dragBoundFunc');\naddGetterSetter(Node, 'draggable', false, getBooleanValidator());\nFactory.backCompat(Node, {\n  rotateDeg: 'rotate',\n  setRotationDeg: 'setRotation',\n  getRotationDeg: 'getRotation'\n});","map":{"version":3,"sources":["/Users/pbivrell/light/light/node_modules/konva/lib/Node.js"],"names":["Util","Transform","Factory","SceneCanvas","HitCanvas","Konva","DD","getNumberValidator","getStringValidator","getBooleanValidator","ABSOLUTE_OPACITY","ALL_LISTENERS","ABSOLUTE_TRANSFORM","ABSOLUTE_SCALE","CANVAS","CHANGE","CHILDREN","KONVA","LISTENING","MOUSEENTER","MOUSELEAVE","NAME","SET","SHAPE","SPACE","STAGE","TRANSFORM","UPPER_STAGE","VISIBLE","TRANSFORM_CHANGE_STR","join","idCounter","Node","config","_id","eventListeners","attrs","index","_allEventListeners","parent","_cache","Map","_attachedDepsListeners","_lastPos","_batchingTransformChange","_needClearTransformCache","_filterUpToDate","_isUnderCache","_dragEventId","_shouldFireChangeEvents","setAttrs","attr","get","dirty","delete","clear","privateGetter","cache","isTransform","invalid","undefined","call","set","name","deps","getter","depsString","map","dep","on","_clearCache","_getCache","fire","_clearSelfAndDescendantCache","_requestDraw","conf","rect","x","y","width","height","getClientRect","skipTransform","relativeTo","getParent","Math","ceil","pixelRatio","offset","drawBorder","hitCanvasPixelRatio","error","cachedSceneCanvas","cachedFilterCanvas","cachedHitCanvas","sceneContext","getContext","hitContext","isCache","imageSmoothingEnabled","_context","save","translate","drawScene","drawHit","restore","beginPath","closePath","setAttr","stroke","scene","filter","hit","has","Error","top","points","minX","minY","maxX","maxY","trans","getAbsoluteTransform","forEach","point","transformed","min","max","context","_applyOpacity","_applyGlobalCompositeOperation","canvasCache","_getCanvasCache","cacheCanvas","_getCachedSceneCanvas","ratio","drawImage","_canvas","hitCanvas","filters","cachedCanvas","sceneCanvas","filterCanvas","filterContext","len","imageData","n","setSize","length","getWidth","getHeight","getImageData","putImageData","e","message","evtStr","handler","arguments","_delegate","apply","events","split","event","parts","baseEvent","push","callback","t","_off","evt","target","type","off","selector","stopNode","targets","findAncestors","i","cloneObject","currentTarget","isDragging","stopDrag","_dragElements","_remove","_clearCaches","children","splice","_setChildrenIndices","remove","method","_capitalize","_isFunction","ancestors","_batchTransformChanges","key","_setAttr","_isListening","listening","_isVisible","visible","skipDragCheck","layer","getLayer","layerUnderDrag","elem","dragStatus","node","nodeType","dragSkip","hitOnDragEnabled","isListening","isVisible","depth","getDepth","that","nodes","child","addChildren","concat","getChildren","slice","getStage","func","pos","getPointerPosition","transform","copy","invert","haveCachedParent","isCached","absoluteMatrix","getMatrix","absoluteTransform","m","getTranslation","origTrans","_clearTransform","it","_getAbsoluteTransform","_setTransform","setPosition","rotation","scaleX","scaleY","offsetX","offsetY","skewX","skewY","change","changeX","changeY","family","unshift","theta","warn","zIndex","_getAbsoluteOpacity","absOpacity","opacity","getAbsoluteOpacity","newContainer","add","obj","getAttrs","val","defaultValue","nonPlainObject","isObject","_isPlainObject","_isArray","className","getClassName","_prepareToStringify","JSON","stringify","toObject","includeSelf","res","_isMatch","ancestor","selectorArr","replace","sel","isValidSelector","charAt","id","hasName","_getStage","eventType","bubble","_fireAndBubble","_fire","at","_eachAncestorReverse","transformsEnabled","multiply","getTransform","copyInto","reset","decompose","_getTransform","_a","_b","getAngle","rotate","skew","scale","allListeners","listener","constructor","indexOf","box","stage","canvas","_toKonvaCanvas","mimeType","quality","url","toDataURL","_urlToImage","img","size","dragDistance","getDragDistance","evtListeners","evtName","oldVal","newVal","oldName","newName","fullName","names","autoDrawEnabled","drawNode","batchDraw","_fireChangeEvent","component","getAttr","compareShape","shouldStop","isAncestorOf","stopBubble","cancelBubble","listeners","Object","getPrototypeOf","newEvents","oldEvents","topListeners","_getProtoListeners","selfListeners","pointerId","ap","getAbsolutePosition","_getPointerById","_changedPointerPositions","startPointerPos","bubbleEvent","_createDragElement","newNodePos","dbf","dragBoundFunc","bounded","setAbsolutePosition","_endDragBefore","_endDragAfter","draggable","_dragChange","_dragCleanup","shouldCheckButton","canDrag","dragButtons","hasDraggingChild","_listenDrag","dragElement","isReady","margin","screenRect","haveIntersection","data","container","_isString","parse","_createNode","prototype","no","Class","_attrsAffectingSize","addGetterSetter","addComponentsGetterSetter","backCompat","rotateDeg","setRotationDeg","getRotationDeg"],"mappings":"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","sourcesContent":["import { Util, Transform } from './Util.js';\nimport { Factory } from './Factory.js';\nimport { SceneCanvas, HitCanvas } from './Canvas.js';\nimport { Konva } from './Global.js';\nimport { DD } from './DragAndDrop.js';\nimport { getNumberValidator, getStringValidator, getBooleanValidator, } from './Validators.js';\nvar ABSOLUTE_OPACITY = 'absoluteOpacity', ALL_LISTENERS = 'allEventListeners', ABSOLUTE_TRANSFORM = 'absoluteTransform', ABSOLUTE_SCALE = 'absoluteScale', CANVAS = 'canvas', CHANGE = 'Change', CHILDREN = 'children', KONVA = 'konva', LISTENING = 'listening', MOUSEENTER = 'mouseenter', MOUSELEAVE = 'mouseleave', NAME = 'name', SET = 'set', SHAPE = 'Shape', SPACE = ' ', STAGE = 'stage', TRANSFORM = 'transform', UPPER_STAGE = 'Stage', VISIBLE = 'visible', TRANSFORM_CHANGE_STR = [\n    'xChange.konva',\n    'yChange.konva',\n    'scaleXChange.konva',\n    'scaleYChange.konva',\n    'skewXChange.konva',\n    'skewYChange.konva',\n    'rotationChange.konva',\n    'offsetXChange.konva',\n    'offsetYChange.konva',\n    'transformsEnabledChange.konva',\n].join(SPACE);\nlet idCounter = 1;\nexport class Node {\n    constructor(config) {\n        this._id = idCounter++;\n        this.eventListeners = {};\n        this.attrs = {};\n        this.index = 0;\n        this._allEventListeners = null;\n        this.parent = null;\n        this._cache = new Map();\n        this._attachedDepsListeners = new Map();\n        this._lastPos = null;\n        this._batchingTransformChange = false;\n        this._needClearTransformCache = false;\n        this._filterUpToDate = false;\n        this._isUnderCache = false;\n        this._dragEventId = null;\n        this._shouldFireChangeEvents = false;\n        this.setAttrs(config);\n        this._shouldFireChangeEvents = true;\n    }\n    hasChildren() {\n        return false;\n    }\n    _clearCache(attr) {\n        if ((attr === TRANSFORM || attr === ABSOLUTE_TRANSFORM) &&\n            this._cache.get(attr)) {\n            this._cache.get(attr).dirty = true;\n        }\n        else if (attr) {\n            this._cache.delete(attr);\n        }\n        else {\n            this._cache.clear();\n        }\n    }\n    _getCache(attr, privateGetter) {\n        var cache = this._cache.get(attr);\n        var isTransform = attr === TRANSFORM || attr === ABSOLUTE_TRANSFORM;\n        var invalid = cache === undefined || (isTransform && cache.dirty === true);\n        if (invalid) {\n            cache = privateGetter.call(this);\n            this._cache.set(attr, cache);\n        }\n        return cache;\n    }\n    _calculate(name, deps, getter) {\n        if (!this._attachedDepsListeners.get(name)) {\n            const depsString = deps.map((dep) => dep + 'Change.konva').join(SPACE);\n            this.on(depsString, () => {\n                this._clearCache(name);\n            });\n            this._attachedDepsListeners.set(name, true);\n        }\n        return this._getCache(name, getter);\n    }\n    _getCanvasCache() {\n        return this._cache.get(CANVAS);\n    }\n    _clearSelfAndDescendantCache(attr) {\n        this._clearCache(attr);\n        if (attr === ABSOLUTE_TRANSFORM) {\n            this.fire('absoluteTransformChange');\n        }\n    }\n    clearCache() {\n        this._cache.delete(CANVAS);\n        this._clearSelfAndDescendantCache();\n        this._requestDraw();\n        return this;\n    }\n    cache(config) {\n        var conf = config || {};\n        var rect = {};\n        if (conf.x === undefined ||\n            conf.y === undefined ||\n            conf.width === undefined ||\n            conf.height === undefined) {\n            rect = this.getClientRect({\n                skipTransform: true,\n                relativeTo: this.getParent(),\n            });\n        }\n        var width = Math.ceil(conf.width || rect.width), height = Math.ceil(conf.height || rect.height), pixelRatio = conf.pixelRatio, x = conf.x === undefined ? rect.x : conf.x, y = conf.y === undefined ? rect.y : conf.y, offset = conf.offset || 0, drawBorder = conf.drawBorder || false, hitCanvasPixelRatio = conf.hitCanvasPixelRatio || 1;\n        if (!width || !height) {\n            Util.error('Can not cache the node. Width or height of the node equals 0. Caching is skipped.');\n            return;\n        }\n        width += offset * 2;\n        height += offset * 2;\n        x -= offset;\n        y -= offset;\n        var cachedSceneCanvas = new SceneCanvas({\n            pixelRatio: pixelRatio,\n            width: width,\n            height: height,\n        }), cachedFilterCanvas = new SceneCanvas({\n            pixelRatio: pixelRatio,\n            width: 0,\n            height: 0,\n        }), cachedHitCanvas = new HitCanvas({\n            pixelRatio: hitCanvasPixelRatio,\n            width: width,\n            height: height,\n        }), sceneContext = cachedSceneCanvas.getContext(), hitContext = cachedHitCanvas.getContext();\n        cachedHitCanvas.isCache = true;\n        cachedSceneCanvas.isCache = true;\n        this._cache.delete(CANVAS);\n        this._filterUpToDate = false;\n        if (conf.imageSmoothingEnabled === false) {\n            cachedSceneCanvas.getContext()._context.imageSmoothingEnabled = false;\n            cachedFilterCanvas.getContext()._context.imageSmoothingEnabled = false;\n        }\n        sceneContext.save();\n        hitContext.save();\n        sceneContext.translate(-x, -y);\n        hitContext.translate(-x, -y);\n        this._isUnderCache = true;\n        this._clearSelfAndDescendantCache(ABSOLUTE_OPACITY);\n        this._clearSelfAndDescendantCache(ABSOLUTE_SCALE);\n        this.drawScene(cachedSceneCanvas, this);\n        this.drawHit(cachedHitCanvas, this);\n        this._isUnderCache = false;\n        sceneContext.restore();\n        hitContext.restore();\n        if (drawBorder) {\n            sceneContext.save();\n            sceneContext.beginPath();\n            sceneContext.rect(0, 0, width, height);\n            sceneContext.closePath();\n            sceneContext.setAttr('strokeStyle', 'red');\n            sceneContext.setAttr('lineWidth', 5);\n            sceneContext.stroke();\n            sceneContext.restore();\n        }\n        this._cache.set(CANVAS, {\n            scene: cachedSceneCanvas,\n            filter: cachedFilterCanvas,\n            hit: cachedHitCanvas,\n            x: x,\n            y: y,\n        });\n        this._requestDraw();\n        return this;\n    }\n    isCached() {\n        return this._cache.has(CANVAS);\n    }\n    getClientRect(config) {\n        throw new Error('abstract \"getClientRect\" method call');\n    }\n    _transformedRect(rect, top) {\n        var points = [\n            { x: rect.x, y: rect.y },\n            { x: rect.x + rect.width, y: rect.y },\n            { x: rect.x + rect.width, y: rect.y + rect.height },\n            { x: rect.x, y: rect.y + rect.height },\n        ];\n        var minX, minY, maxX, maxY;\n        var trans = this.getAbsoluteTransform(top);\n        points.forEach(function (point) {\n            var transformed = trans.point(point);\n            if (minX === undefined) {\n                minX = maxX = transformed.x;\n                minY = maxY = transformed.y;\n            }\n            minX = Math.min(minX, transformed.x);\n            minY = Math.min(minY, transformed.y);\n            maxX = Math.max(maxX, transformed.x);\n            maxY = Math.max(maxY, transformed.y);\n        });\n        return {\n            x: minX,\n            y: minY,\n            width: maxX - minX,\n            height: maxY - minY,\n        };\n    }\n    _drawCachedSceneCanvas(context) {\n        context.save();\n        context._applyOpacity(this);\n        context._applyGlobalCompositeOperation(this);\n        const canvasCache = this._getCanvasCache();\n        context.translate(canvasCache.x, canvasCache.y);\n        var cacheCanvas = this._getCachedSceneCanvas();\n        var ratio = cacheCanvas.pixelRatio;\n        context.drawImage(cacheCanvas._canvas, 0, 0, cacheCanvas.width / ratio, cacheCanvas.height / ratio);\n        context.restore();\n    }\n    _drawCachedHitCanvas(context) {\n        var canvasCache = this._getCanvasCache(), hitCanvas = canvasCache.hit;\n        context.save();\n        context.translate(canvasCache.x, canvasCache.y);\n        context.drawImage(hitCanvas._canvas, 0, 0, hitCanvas.width / hitCanvas.pixelRatio, hitCanvas.height / hitCanvas.pixelRatio);\n        context.restore();\n    }\n    _getCachedSceneCanvas() {\n        var filters = this.filters(), cachedCanvas = this._getCanvasCache(), sceneCanvas = cachedCanvas.scene, filterCanvas = cachedCanvas.filter, filterContext = filterCanvas.getContext(), len, imageData, n, filter;\n        if (filters) {\n            if (!this._filterUpToDate) {\n                var ratio = sceneCanvas.pixelRatio;\n                filterCanvas.setSize(sceneCanvas.width / sceneCanvas.pixelRatio, sceneCanvas.height / sceneCanvas.pixelRatio);\n                try {\n                    len = filters.length;\n                    filterContext.clear();\n                    filterContext.drawImage(sceneCanvas._canvas, 0, 0, sceneCanvas.getWidth() / ratio, sceneCanvas.getHeight() / ratio);\n                    imageData = filterContext.getImageData(0, 0, filterCanvas.getWidth(), filterCanvas.getHeight());\n                    for (n = 0; n < len; n++) {\n                        filter = filters[n];\n                        if (typeof filter !== 'function') {\n                            Util.error('Filter should be type of function, but got ' +\n                                typeof filter +\n                                ' instead. Please check correct filters');\n                            continue;\n                        }\n                        filter.call(this, imageData);\n                        filterContext.putImageData(imageData, 0, 0);\n                    }\n                }\n                catch (e) {\n                    Util.error('Unable to apply filter. ' +\n                        e.message +\n                        ' This post my help you https://konvajs.org/docs/posts/Tainted_Canvas.html.');\n                }\n                this._filterUpToDate = true;\n            }\n            return filterCanvas;\n        }\n        return sceneCanvas;\n    }\n    on(evtStr, handler) {\n        this._cache && this._cache.delete(ALL_LISTENERS);\n        if (arguments.length === 3) {\n            return this._delegate.apply(this, arguments);\n        }\n        var events = evtStr.split(SPACE), len = events.length, n, event, parts, baseEvent, name;\n        for (n = 0; n < len; n++) {\n            event = events[n];\n            parts = event.split('.');\n            baseEvent = parts[0];\n            name = parts[1] || '';\n            if (!this.eventListeners[baseEvent]) {\n                this.eventListeners[baseEvent] = [];\n            }\n            this.eventListeners[baseEvent].push({\n                name: name,\n                handler: handler,\n            });\n        }\n        return this;\n    }\n    off(evtStr, callback) {\n        var events = (evtStr || '').split(SPACE), len = events.length, n, t, event, parts, baseEvent, name;\n        this._cache && this._cache.delete(ALL_LISTENERS);\n        if (!evtStr) {\n            for (t in this.eventListeners) {\n                this._off(t);\n            }\n        }\n        for (n = 0; n < len; n++) {\n            event = events[n];\n            parts = event.split('.');\n            baseEvent = parts[0];\n            name = parts[1];\n            if (baseEvent) {\n                if (this.eventListeners[baseEvent]) {\n                    this._off(baseEvent, name, callback);\n                }\n            }\n            else {\n                for (t in this.eventListeners) {\n                    this._off(t, name, callback);\n                }\n            }\n        }\n        return this;\n    }\n    dispatchEvent(evt) {\n        var e = {\n            target: this,\n            type: evt.type,\n            evt: evt,\n        };\n        this.fire(evt.type, e);\n        return this;\n    }\n    addEventListener(type, handler) {\n        this.on(type, function (evt) {\n            handler.call(this, evt.evt);\n        });\n        return this;\n    }\n    removeEventListener(type) {\n        this.off(type);\n        return this;\n    }\n    _delegate(event, selector, handler) {\n        var stopNode = this;\n        this.on(event, function (evt) {\n            var targets = evt.target.findAncestors(selector, true, stopNode);\n            for (var i = 0; i < targets.length; i++) {\n                evt = Util.cloneObject(evt);\n                evt.currentTarget = targets[i];\n                handler.call(targets[i], evt);\n            }\n        });\n    }\n    remove() {\n        if (this.isDragging()) {\n            this.stopDrag();\n        }\n        DD._dragElements.delete(this._id);\n        this._remove();\n        return this;\n    }\n    _clearCaches() {\n        this._clearSelfAndDescendantCache(ABSOLUTE_TRANSFORM);\n        this._clearSelfAndDescendantCache(ABSOLUTE_OPACITY);\n        this._clearSelfAndDescendantCache(ABSOLUTE_SCALE);\n        this._clearSelfAndDescendantCache(STAGE);\n        this._clearSelfAndDescendantCache(VISIBLE);\n        this._clearSelfAndDescendantCache(LISTENING);\n    }\n    _remove() {\n        this._clearCaches();\n        var parent = this.getParent();\n        if (parent && parent.children) {\n            parent.children.splice(this.index, 1);\n            parent._setChildrenIndices();\n            this.parent = null;\n        }\n    }\n    destroy() {\n        this.remove();\n        return this;\n    }\n    getAttr(attr) {\n        var method = 'get' + Util._capitalize(attr);\n        if (Util._isFunction(this[method])) {\n            return this[method]();\n        }\n        return this.attrs[attr];\n    }\n    getAncestors() {\n        var parent = this.getParent(), ancestors = [];\n        while (parent) {\n            ancestors.push(parent);\n            parent = parent.getParent();\n        }\n        return ancestors;\n    }\n    getAttrs() {\n        return this.attrs || {};\n    }\n    setAttrs(config) {\n        this._batchTransformChanges(() => {\n            var key, method;\n            if (!config) {\n                return this;\n            }\n            for (key in config) {\n                if (key === CHILDREN) {\n                    continue;\n                }\n                method = SET + Util._capitalize(key);\n                if (Util._isFunction(this[method])) {\n                    this[method](config[key]);\n                }\n                else {\n                    this._setAttr(key, config[key]);\n                }\n            }\n        });\n        return this;\n    }\n    isListening() {\n        return this._getCache(LISTENING, this._isListening);\n    }\n    _isListening(relativeTo) {\n        const listening = this.listening();\n        if (!listening) {\n            return false;\n        }\n        const parent = this.getParent();\n        if (parent && parent !== relativeTo && this !== relativeTo) {\n            return parent._isListening(relativeTo);\n        }\n        else {\n            return true;\n        }\n    }\n    isVisible() {\n        return this._getCache(VISIBLE, this._isVisible);\n    }\n    _isVisible(relativeTo) {\n        const visible = this.visible();\n        if (!visible) {\n            return false;\n        }\n        const parent = this.getParent();\n        if (parent && parent !== relativeTo && this !== relativeTo) {\n            return parent._isVisible(relativeTo);\n        }\n        else {\n            return true;\n        }\n    }\n    shouldDrawHit(top, skipDragCheck = false) {\n        if (top) {\n            return this._isVisible(top) && this._isListening(top);\n        }\n        var layer = this.getLayer();\n        var layerUnderDrag = false;\n        DD._dragElements.forEach((elem) => {\n            if (elem.dragStatus !== 'dragging') {\n                return;\n            }\n            else if (elem.node.nodeType === 'Stage') {\n                layerUnderDrag = true;\n            }\n            else if (elem.node.getLayer() === layer) {\n                layerUnderDrag = true;\n            }\n        });\n        var dragSkip = !skipDragCheck && !Konva.hitOnDragEnabled && layerUnderDrag;\n        return this.isListening() && this.isVisible() && !dragSkip;\n    }\n    show() {\n        this.visible(true);\n        return this;\n    }\n    hide() {\n        this.visible(false);\n        return this;\n    }\n    getZIndex() {\n        return this.index || 0;\n    }\n    getAbsoluteZIndex() {\n        var depth = this.getDepth(), that = this, index = 0, nodes, len, n, child;\n        function addChildren(children) {\n            nodes = [];\n            len = children.length;\n            for (n = 0; n < len; n++) {\n                child = children[n];\n                index++;\n                if (child.nodeType !== SHAPE) {\n                    nodes = nodes.concat(child.getChildren().slice());\n                }\n                if (child._id === that._id) {\n                    n = len;\n                }\n            }\n            if (nodes.length > 0 && nodes[0].getDepth() <= depth) {\n                addChildren(nodes);\n            }\n        }\n        if (that.nodeType !== UPPER_STAGE) {\n            addChildren(that.getStage().getChildren());\n        }\n        return index;\n    }\n    getDepth() {\n        var depth = 0, parent = this.parent;\n        while (parent) {\n            depth++;\n            parent = parent.parent;\n        }\n        return depth;\n    }\n    _batchTransformChanges(func) {\n        this._batchingTransformChange = true;\n        func();\n        this._batchingTransformChange = false;\n        if (this._needClearTransformCache) {\n            this._clearCache(TRANSFORM);\n            this._clearSelfAndDescendantCache(ABSOLUTE_TRANSFORM);\n        }\n        this._needClearTransformCache = false;\n    }\n    setPosition(pos) {\n        this._batchTransformChanges(() => {\n            this.x(pos.x);\n            this.y(pos.y);\n        });\n        return this;\n    }\n    getPosition() {\n        return {\n            x: this.x(),\n            y: this.y(),\n        };\n    }\n    getRelativePointerPosition() {\n        if (!this.getStage()) {\n            return null;\n        }\n        var pos = this.getStage().getPointerPosition();\n        if (!pos) {\n            return null;\n        }\n        var transform = this.getAbsoluteTransform().copy();\n        transform.invert();\n        return transform.point(pos);\n    }\n    getAbsolutePosition(top) {\n        let haveCachedParent = false;\n        let parent = this.parent;\n        while (parent) {\n            if (parent.isCached()) {\n                haveCachedParent = true;\n                break;\n            }\n            parent = parent.parent;\n        }\n        if (haveCachedParent && !top) {\n            top = true;\n        }\n        var absoluteMatrix = this.getAbsoluteTransform(top).getMatrix(), absoluteTransform = new Transform(), offset = this.offset();\n        absoluteTransform.m = absoluteMatrix.slice();\n        absoluteTransform.translate(offset.x, offset.y);\n        return absoluteTransform.getTranslation();\n    }\n    setAbsolutePosition(pos) {\n        var origTrans = this._clearTransform();\n        this.attrs.x = origTrans.x;\n        this.attrs.y = origTrans.y;\n        delete origTrans.x;\n        delete origTrans.y;\n        this._clearCache(TRANSFORM);\n        var it = this._getAbsoluteTransform().copy();\n        it.invert();\n        it.translate(pos.x, pos.y);\n        pos = {\n            x: this.attrs.x + it.getTranslation().x,\n            y: this.attrs.y + it.getTranslation().y,\n        };\n        this._setTransform(origTrans);\n        this.setPosition({ x: pos.x, y: pos.y });\n        this._clearCache(TRANSFORM);\n        this._clearSelfAndDescendantCache(ABSOLUTE_TRANSFORM);\n        return this;\n    }\n    _setTransform(trans) {\n        var key;\n        for (key in trans) {\n            this.attrs[key] = trans[key];\n        }\n    }\n    _clearTransform() {\n        var trans = {\n            x: this.x(),\n            y: this.y(),\n            rotation: this.rotation(),\n            scaleX: this.scaleX(),\n            scaleY: this.scaleY(),\n            offsetX: this.offsetX(),\n            offsetY: this.offsetY(),\n            skewX: this.skewX(),\n            skewY: this.skewY(),\n        };\n        this.attrs.x = 0;\n        this.attrs.y = 0;\n        this.attrs.rotation = 0;\n        this.attrs.scaleX = 1;\n        this.attrs.scaleY = 1;\n        this.attrs.offsetX = 0;\n        this.attrs.offsetY = 0;\n        this.attrs.skewX = 0;\n        this.attrs.skewY = 0;\n        return trans;\n    }\n    move(change) {\n        var changeX = change.x, changeY = change.y, x = this.x(), y = this.y();\n        if (changeX !== undefined) {\n            x += changeX;\n        }\n        if (changeY !== undefined) {\n            y += changeY;\n        }\n        this.setPosition({ x: x, y: y });\n        return this;\n    }\n    _eachAncestorReverse(func, top) {\n        var family = [], parent = this.getParent(), len, n;\n        if (top && top._id === this._id) {\n            return;\n        }\n        family.unshift(this);\n        while (parent && (!top || parent._id !== top._id)) {\n            family.unshift(parent);\n            parent = parent.parent;\n        }\n        len = family.length;\n        for (n = 0; n < len; n++) {\n            func(family[n]);\n        }\n    }\n    rotate(theta) {\n        this.rotation(this.rotation() + theta);\n        return this;\n    }\n    moveToTop() {\n        if (!this.parent) {\n            Util.warn('Node has no parent. moveToTop function is ignored.');\n            return false;\n        }\n        var index = this.index;\n        this.parent.children.splice(index, 1);\n        this.parent.children.push(this);\n        this.parent._setChildrenIndices();\n        return true;\n    }\n    moveUp() {\n        if (!this.parent) {\n            Util.warn('Node has no parent. moveUp function is ignored.');\n            return false;\n        }\n        var index = this.index, len = this.parent.getChildren().length;\n        if (index < len - 1) {\n            this.parent.children.splice(index, 1);\n            this.parent.children.splice(index + 1, 0, this);\n            this.parent._setChildrenIndices();\n            return true;\n        }\n        return false;\n    }\n    moveDown() {\n        if (!this.parent) {\n            Util.warn('Node has no parent. moveDown function is ignored.');\n            return false;\n        }\n        var index = this.index;\n        if (index > 0) {\n            this.parent.children.splice(index, 1);\n            this.parent.children.splice(index - 1, 0, this);\n            this.parent._setChildrenIndices();\n            return true;\n        }\n        return false;\n    }\n    moveToBottom() {\n        if (!this.parent) {\n            Util.warn('Node has no parent. moveToBottom function is ignored.');\n            return false;\n        }\n        var index = this.index;\n        if (index > 0) {\n            this.parent.children.splice(index, 1);\n            this.parent.children.unshift(this);\n            this.parent._setChildrenIndices();\n            return true;\n        }\n        return false;\n    }\n    setZIndex(zIndex) {\n        if (!this.parent) {\n            Util.warn('Node has no parent. zIndex parameter is ignored.');\n            return this;\n        }\n        if (zIndex < 0 || zIndex >= this.parent.children.length) {\n            Util.warn('Unexpected value ' +\n                zIndex +\n                ' for zIndex property. zIndex is just index of a node in children of its parent. Expected value is from 0 to ' +\n                (this.parent.children.length - 1) +\n                '.');\n        }\n        var index = this.index;\n        this.parent.children.splice(index, 1);\n        this.parent.children.splice(zIndex, 0, this);\n        this.parent._setChildrenIndices();\n        return this;\n    }\n    getAbsoluteOpacity() {\n        return this._getCache(ABSOLUTE_OPACITY, this._getAbsoluteOpacity);\n    }\n    _getAbsoluteOpacity() {\n        var absOpacity = this.opacity();\n        var parent = this.getParent();\n        if (parent && !parent._isUnderCache) {\n            absOpacity *= parent.getAbsoluteOpacity();\n        }\n        return absOpacity;\n    }\n    moveTo(newContainer) {\n        if (this.getParent() !== newContainer) {\n            this._remove();\n            newContainer.add(this);\n        }\n        return this;\n    }\n    toObject() {\n        var obj = {}, attrs = this.getAttrs(), key, val, getter, defaultValue, nonPlainObject;\n        obj.attrs = {};\n        for (key in attrs) {\n            val = attrs[key];\n            nonPlainObject =\n                Util.isObject(val) && !Util._isPlainObject(val) && !Util._isArray(val);\n            if (nonPlainObject) {\n                continue;\n            }\n            getter = typeof this[key] === 'function' && this[key];\n            delete attrs[key];\n            defaultValue = getter ? getter.call(this) : null;\n            attrs[key] = val;\n            if (defaultValue !== val) {\n                obj.attrs[key] = val;\n            }\n        }\n        obj.className = this.getClassName();\n        return Util._prepareToStringify(obj);\n    }\n    toJSON() {\n        return JSON.stringify(this.toObject());\n    }\n    getParent() {\n        return this.parent;\n    }\n    findAncestors(selector, includeSelf, stopNode) {\n        var res = [];\n        if (includeSelf && this._isMatch(selector)) {\n            res.push(this);\n        }\n        var ancestor = this.parent;\n        while (ancestor) {\n            if (ancestor === stopNode) {\n                return res;\n            }\n            if (ancestor._isMatch(selector)) {\n                res.push(ancestor);\n            }\n            ancestor = ancestor.parent;\n        }\n        return res;\n    }\n    isAncestorOf(node) {\n        return false;\n    }\n    findAncestor(selector, includeSelf, stopNode) {\n        return this.findAncestors(selector, includeSelf, stopNode)[0];\n    }\n    _isMatch(selector) {\n        if (!selector) {\n            return false;\n        }\n        if (typeof selector === 'function') {\n            return selector(this);\n        }\n        var selectorArr = selector.replace(/ /g, '').split(','), len = selectorArr.length, n, sel;\n        for (n = 0; n < len; n++) {\n            sel = selectorArr[n];\n            if (!Util.isValidSelector(sel)) {\n                Util.warn('Selector \"' +\n                    sel +\n                    '\" is invalid. Allowed selectors examples are \"#foo\", \".bar\" or \"Group\".');\n                Util.warn('If you have a custom shape with such className, please change it to start with upper letter like \"Triangle\".');\n                Util.warn('Konva is awesome, right?');\n            }\n            if (sel.charAt(0) === '#') {\n                if (this.id() === sel.slice(1)) {\n                    return true;\n                }\n            }\n            else if (sel.charAt(0) === '.') {\n                if (this.hasName(sel.slice(1))) {\n                    return true;\n                }\n            }\n            else if (this.className === sel || this.nodeType === sel) {\n                return true;\n            }\n        }\n        return false;\n    }\n    getLayer() {\n        var parent = this.getParent();\n        return parent ? parent.getLayer() : null;\n    }\n    getStage() {\n        return this._getCache(STAGE, this._getStage);\n    }\n    _getStage() {\n        var parent = this.getParent();\n        if (parent) {\n            return parent.getStage();\n        }\n        else {\n            return undefined;\n        }\n    }\n    fire(eventType, evt = {}, bubble) {\n        evt.target = evt.target || this;\n        if (bubble) {\n            this._fireAndBubble(eventType, evt);\n        }\n        else {\n            this._fire(eventType, evt);\n        }\n        return this;\n    }\n    getAbsoluteTransform(top) {\n        if (top) {\n            return this._getAbsoluteTransform(top);\n        }\n        else {\n            return this._getCache(ABSOLUTE_TRANSFORM, this._getAbsoluteTransform);\n        }\n    }\n    _getAbsoluteTransform(top) {\n        var at;\n        if (top) {\n            at = new Transform();\n            this._eachAncestorReverse(function (node) {\n                var transformsEnabled = node.transformsEnabled();\n                if (transformsEnabled === 'all') {\n                    at.multiply(node.getTransform());\n                }\n                else if (transformsEnabled === 'position') {\n                    at.translate(node.x() - node.offsetX(), node.y() - node.offsetY());\n                }\n            }, top);\n            return at;\n        }\n        else {\n            at = this._cache.get(ABSOLUTE_TRANSFORM) || new Transform();\n            if (this.parent) {\n                this.parent.getAbsoluteTransform().copyInto(at);\n            }\n            else {\n                at.reset();\n            }\n            var transformsEnabled = this.transformsEnabled();\n            if (transformsEnabled === 'all') {\n                at.multiply(this.getTransform());\n            }\n            else if (transformsEnabled === 'position') {\n                const x = this.attrs.x || 0;\n                const y = this.attrs.y || 0;\n                const offsetX = this.attrs.offsetX || 0;\n                const offsetY = this.attrs.offsetY || 0;\n                at.translate(x - offsetX, y - offsetY);\n            }\n            at.dirty = false;\n            return at;\n        }\n    }\n    getAbsoluteScale(top) {\n        var parent = this;\n        while (parent) {\n            if (parent._isUnderCache) {\n                top = parent;\n            }\n            parent = parent.getParent();\n        }\n        const transform = this.getAbsoluteTransform(top);\n        const attrs = transform.decompose();\n        return {\n            x: attrs.scaleX,\n            y: attrs.scaleY,\n        };\n    }\n    getAbsoluteRotation() {\n        return this.getAbsoluteTransform().decompose().rotation;\n    }\n    getTransform() {\n        return this._getCache(TRANSFORM, this._getTransform);\n    }\n    _getTransform() {\n        var _a, _b;\n        var m = this._cache.get(TRANSFORM) || new Transform();\n        m.reset();\n        var x = this.x(), y = this.y(), rotation = Konva.getAngle(this.rotation()), scaleX = (_a = this.attrs.scaleX) !== null && _a !== void 0 ? _a : 1, scaleY = (_b = this.attrs.scaleY) !== null && _b !== void 0 ? _b : 1, skewX = this.attrs.skewX || 0, skewY = this.attrs.skewY || 0, offsetX = this.attrs.offsetX || 0, offsetY = this.attrs.offsetY || 0;\n        if (x !== 0 || y !== 0) {\n            m.translate(x, y);\n        }\n        if (rotation !== 0) {\n            m.rotate(rotation);\n        }\n        if (skewX !== 0 || skewY !== 0) {\n            m.skew(skewX, skewY);\n        }\n        if (scaleX !== 1 || scaleY !== 1) {\n            m.scale(scaleX, scaleY);\n        }\n        if (offsetX !== 0 || offsetY !== 0) {\n            m.translate(-1 * offsetX, -1 * offsetY);\n        }\n        m.dirty = false;\n        return m;\n    }\n    clone(obj) {\n        var attrs = Util.cloneObject(this.attrs), key, allListeners, len, n, listener;\n        for (key in obj) {\n            attrs[key] = obj[key];\n        }\n        var node = new this.constructor(attrs);\n        for (key in this.eventListeners) {\n            allListeners = this.eventListeners[key];\n            len = allListeners.length;\n            for (n = 0; n < len; n++) {\n                listener = allListeners[n];\n                if (listener.name.indexOf(KONVA) < 0) {\n                    if (!node.eventListeners[key]) {\n                        node.eventListeners[key] = [];\n                    }\n                    node.eventListeners[key].push(listener);\n                }\n            }\n        }\n        return node;\n    }\n    _toKonvaCanvas(config) {\n        config = config || {};\n        var box = this.getClientRect();\n        var stage = this.getStage(), x = config.x !== undefined ? config.x : box.x, y = config.y !== undefined ? config.y : box.y, pixelRatio = config.pixelRatio || 1, canvas = new SceneCanvas({\n            width: config.width || box.width || (stage ? stage.width() : 0),\n            height: config.height || box.height || (stage ? stage.height() : 0),\n            pixelRatio: pixelRatio,\n        }), context = canvas.getContext();\n        context.save();\n        if (x || y) {\n            context.translate(-1 * x, -1 * y);\n        }\n        this.drawScene(canvas);\n        context.restore();\n        return canvas;\n    }\n    toCanvas(config) {\n        return this._toKonvaCanvas(config)._canvas;\n    }\n    toDataURL(config) {\n        config = config || {};\n        var mimeType = config.mimeType || null, quality = config.quality || null;\n        var url = this._toKonvaCanvas(config).toDataURL(mimeType, quality);\n        if (config.callback) {\n            config.callback(url);\n        }\n        return url;\n    }\n    toImage(config) {\n        if (!config || !config.callback) {\n            throw 'callback required for toImage method config argument';\n        }\n        var callback = config.callback;\n        delete config.callback;\n        Util._urlToImage(this.toDataURL(config), function (img) {\n            callback(img);\n        });\n    }\n    setSize(size) {\n        this.width(size.width);\n        this.height(size.height);\n        return this;\n    }\n    getSize() {\n        return {\n            width: this.width(),\n            height: this.height(),\n        };\n    }\n    getClassName() {\n        return this.className || this.nodeType;\n    }\n    getType() {\n        return this.nodeType;\n    }\n    getDragDistance() {\n        if (this.attrs.dragDistance !== undefined) {\n            return this.attrs.dragDistance;\n        }\n        else if (this.parent) {\n            return this.parent.getDragDistance();\n        }\n        else {\n            return Konva.dragDistance;\n        }\n    }\n    _off(type, name, callback) {\n        var evtListeners = this.eventListeners[type], i, evtName, handler;\n        for (i = 0; i < evtListeners.length; i++) {\n            evtName = evtListeners[i].name;\n            handler = evtListeners[i].handler;\n            if ((evtName !== 'konva' || name === 'konva') &&\n                (!name || evtName === name) &&\n                (!callback || callback === handler)) {\n                evtListeners.splice(i, 1);\n                if (evtListeners.length === 0) {\n                    delete this.eventListeners[type];\n                    break;\n                }\n                i--;\n            }\n        }\n    }\n    _fireChangeEvent(attr, oldVal, newVal) {\n        this._fire(attr + CHANGE, {\n            oldVal: oldVal,\n            newVal: newVal,\n        });\n    }\n    addName(name) {\n        if (!this.hasName(name)) {\n            var oldName = this.name();\n            var newName = oldName ? oldName + ' ' + name : name;\n            this.name(newName);\n        }\n        return this;\n    }\n    hasName(name) {\n        if (!name) {\n            return false;\n        }\n        const fullName = this.name();\n        if (!fullName) {\n            return false;\n        }\n        var names = (fullName || '').split(/\\s/g);\n        return names.indexOf(name) !== -1;\n    }\n    removeName(name) {\n        var names = (this.name() || '').split(/\\s/g);\n        var index = names.indexOf(name);\n        if (index !== -1) {\n            names.splice(index, 1);\n            this.name(names.join(' '));\n        }\n        return this;\n    }\n    setAttr(attr, val) {\n        var func = this[SET + Util._capitalize(attr)];\n        if (Util._isFunction(func)) {\n            func.call(this, val);\n        }\n        else {\n            this._setAttr(attr, val);\n        }\n        return this;\n    }\n    _requestDraw() {\n        if (Konva.autoDrawEnabled) {\n            const drawNode = this.getLayer() || this.getStage();\n            drawNode === null || drawNode === void 0 ? void 0 : drawNode.batchDraw();\n        }\n    }\n    _setAttr(key, val) {\n        var oldVal = this.attrs[key];\n        if (oldVal === val && !Util.isObject(val)) {\n            return;\n        }\n        if (val === undefined || val === null) {\n            delete this.attrs[key];\n        }\n        else {\n            this.attrs[key] = val;\n        }\n        if (this._shouldFireChangeEvents) {\n            this._fireChangeEvent(key, oldVal, val);\n        }\n        this._requestDraw();\n    }\n    _setComponentAttr(key, component, val) {\n        var oldVal;\n        if (val !== undefined) {\n            oldVal = this.attrs[key];\n            if (!oldVal) {\n                this.attrs[key] = this.getAttr(key);\n            }\n            this.attrs[key][component] = val;\n            this._fireChangeEvent(key, oldVal, val);\n        }\n    }\n    _fireAndBubble(eventType, evt, compareShape) {\n        if (evt && this.nodeType === SHAPE) {\n            evt.target = this;\n        }\n        var shouldStop = (eventType === MOUSEENTER || eventType === MOUSELEAVE) &&\n            ((compareShape &&\n                (this === compareShape ||\n                    (this.isAncestorOf && this.isAncestorOf(compareShape)))) ||\n                (this.nodeType === 'Stage' && !compareShape));\n        if (!shouldStop) {\n            this._fire(eventType, evt);\n            var stopBubble = (eventType === MOUSEENTER || eventType === MOUSELEAVE) &&\n                compareShape &&\n                compareShape.isAncestorOf &&\n                compareShape.isAncestorOf(this) &&\n                !compareShape.isAncestorOf(this.parent);\n            if (((evt && !evt.cancelBubble) || !evt) &&\n                this.parent &&\n                this.parent.isListening() &&\n                !stopBubble) {\n                if (compareShape && compareShape.parent) {\n                    this._fireAndBubble.call(this.parent, eventType, evt, compareShape);\n                }\n                else {\n                    this._fireAndBubble.call(this.parent, eventType, evt);\n                }\n            }\n        }\n    }\n    _getProtoListeners(eventType) {\n        let listeners = this._cache.get(ALL_LISTENERS);\n        if (!listeners) {\n            listeners = {};\n            let obj = Object.getPrototypeOf(this);\n            while (obj) {\n                if (!obj.eventListeners) {\n                    obj = Object.getPrototypeOf(obj);\n                    continue;\n                }\n                for (var event in obj.eventListeners) {\n                    const newEvents = obj.eventListeners[event];\n                    const oldEvents = listeners[event] || [];\n                    listeners[event] = newEvents.concat(oldEvents);\n                }\n                obj = Object.getPrototypeOf(obj);\n            }\n            this._cache.set(ALL_LISTENERS, listeners);\n        }\n        return listeners[eventType];\n    }\n    _fire(eventType, evt) {\n        evt = evt || {};\n        evt.currentTarget = this;\n        evt.type = eventType;\n        const topListeners = this._getProtoListeners(eventType);\n        if (topListeners) {\n            for (var i = 0; i < topListeners.length; i++) {\n                topListeners[i].handler.call(this, evt);\n            }\n        }\n        const selfListeners = this.eventListeners[eventType];\n        if (selfListeners) {\n            for (var i = 0; i < selfListeners.length; i++) {\n                selfListeners[i].handler.call(this, evt);\n            }\n        }\n    }\n    draw() {\n        this.drawScene();\n        this.drawHit();\n        return this;\n    }\n    _createDragElement(evt) {\n        var pointerId = evt ? evt.pointerId : undefined;\n        var stage = this.getStage();\n        var ap = this.getAbsolutePosition();\n        var pos = stage._getPointerById(pointerId) ||\n            stage._changedPointerPositions[0] ||\n            ap;\n        DD._dragElements.set(this._id, {\n            node: this,\n            startPointerPos: pos,\n            offset: {\n                x: pos.x - ap.x,\n                y: pos.y - ap.y,\n            },\n            dragStatus: 'ready',\n            pointerId,\n        });\n    }\n    startDrag(evt, bubbleEvent = true) {\n        if (!DD._dragElements.has(this._id)) {\n            this._createDragElement(evt);\n        }\n        const elem = DD._dragElements.get(this._id);\n        elem.dragStatus = 'dragging';\n        this.fire('dragstart', {\n            type: 'dragstart',\n            target: this,\n            evt: evt && evt.evt,\n        }, bubbleEvent);\n    }\n    _setDragPosition(evt, elem) {\n        const pos = this.getStage()._getPointerById(elem.pointerId);\n        if (!pos) {\n            return;\n        }\n        var newNodePos = {\n            x: pos.x - elem.offset.x,\n            y: pos.y - elem.offset.y,\n        };\n        var dbf = this.dragBoundFunc();\n        if (dbf !== undefined) {\n            const bounded = dbf.call(this, newNodePos, evt);\n            if (!bounded) {\n                Util.warn('dragBoundFunc did not return any value. That is unexpected behavior. You must return new absolute position from dragBoundFunc.');\n            }\n            else {\n                newNodePos = bounded;\n            }\n        }\n        if (!this._lastPos ||\n            this._lastPos.x !== newNodePos.x ||\n            this._lastPos.y !== newNodePos.y) {\n            this.setAbsolutePosition(newNodePos);\n            this._requestDraw();\n        }\n        this._lastPos = newNodePos;\n    }\n    stopDrag(evt) {\n        const elem = DD._dragElements.get(this._id);\n        if (elem) {\n            elem.dragStatus = 'stopped';\n        }\n        DD._endDragBefore(evt);\n        DD._endDragAfter(evt);\n    }\n    setDraggable(draggable) {\n        this._setAttr('draggable', draggable);\n        this._dragChange();\n    }\n    isDragging() {\n        const elem = DD._dragElements.get(this._id);\n        return elem ? elem.dragStatus === 'dragging' : false;\n    }\n    _listenDrag() {\n        this._dragCleanup();\n        this.on('mousedown.konva touchstart.konva', function (evt) {\n            var shouldCheckButton = evt.evt['button'] !== undefined;\n            var canDrag = !shouldCheckButton || Konva.dragButtons.indexOf(evt.evt['button']) >= 0;\n            if (!canDrag) {\n                return;\n            }\n            if (this.isDragging()) {\n                return;\n            }\n            var hasDraggingChild = false;\n            DD._dragElements.forEach((elem) => {\n                if (this.isAncestorOf(elem.node)) {\n                    hasDraggingChild = true;\n                }\n            });\n            if (!hasDraggingChild) {\n                this._createDragElement(evt);\n            }\n        });\n    }\n    _dragChange() {\n        if (this.attrs.draggable) {\n            this._listenDrag();\n        }\n        else {\n            this._dragCleanup();\n            var stage = this.getStage();\n            if (!stage) {\n                return;\n            }\n            const dragElement = DD._dragElements.get(this._id);\n            const isDragging = dragElement && dragElement.dragStatus === 'dragging';\n            const isReady = dragElement && dragElement.dragStatus === 'ready';\n            if (isDragging) {\n                this.stopDrag();\n            }\n            else if (isReady) {\n                DD._dragElements.delete(this._id);\n            }\n        }\n    }\n    _dragCleanup() {\n        this.off('mousedown.konva');\n        this.off('touchstart.konva');\n    }\n    isClientRectOnScreen(margin = { x: 0, y: 0 }) {\n        const stage = this.getStage();\n        if (!stage) {\n            return false;\n        }\n        const screenRect = {\n            x: -margin.x,\n            y: -margin.y,\n            width: stage.width() + margin.x,\n            height: stage.height() + margin.y,\n        };\n        return Util.haveIntersection(screenRect, this.getClientRect());\n    }\n    static create(data, container) {\n        if (Util._isString(data)) {\n            data = JSON.parse(data);\n        }\n        return this._createNode(data, container);\n    }\n    static _createNode(obj, container) {\n        var className = Node.prototype.getClassName.call(obj), children = obj.children, no, len, n;\n        if (container) {\n            obj.attrs.container = container;\n        }\n        if (!Konva[className]) {\n            Util.warn('Can not find a node with class name \"' +\n                className +\n                '\". Fallback to \"Shape\".');\n            className = 'Shape';\n        }\n        const Class = Konva[className];\n        no = new Class(obj.attrs);\n        if (children) {\n            len = children.length;\n            for (n = 0; n < len; n++) {\n                no.add(Node._createNode(children[n]));\n            }\n        }\n        return no;\n    }\n}\nNode.prototype.nodeType = 'Node';\nNode.prototype._attrsAffectingSize = [];\nNode.prototype.eventListeners = {};\nNode.prototype.on.call(Node.prototype, TRANSFORM_CHANGE_STR, function () {\n    if (this._batchingTransformChange) {\n        this._needClearTransformCache = true;\n        return;\n    }\n    this._clearCache(TRANSFORM);\n    this._clearSelfAndDescendantCache(ABSOLUTE_TRANSFORM);\n});\nNode.prototype.on.call(Node.prototype, 'visibleChange.konva', function () {\n    this._clearSelfAndDescendantCache(VISIBLE);\n});\nNode.prototype.on.call(Node.prototype, 'listeningChange.konva', function () {\n    this._clearSelfAndDescendantCache(LISTENING);\n});\nNode.prototype.on.call(Node.prototype, 'opacityChange.konva', function () {\n    this._clearSelfAndDescendantCache(ABSOLUTE_OPACITY);\n});\nconst addGetterSetter = Factory.addGetterSetter;\naddGetterSetter(Node, 'zIndex');\naddGetterSetter(Node, 'absolutePosition');\naddGetterSetter(Node, 'position');\naddGetterSetter(Node, 'x', 0, getNumberValidator());\naddGetterSetter(Node, 'y', 0, getNumberValidator());\naddGetterSetter(Node, 'globalCompositeOperation', 'source-over', getStringValidator());\naddGetterSetter(Node, 'opacity', 1, getNumberValidator());\naddGetterSetter(Node, 'name', '', getStringValidator());\naddGetterSetter(Node, 'id', '', getStringValidator());\naddGetterSetter(Node, 'rotation', 0, getNumberValidator());\nFactory.addComponentsGetterSetter(Node, 'scale', ['x', 'y']);\naddGetterSetter(Node, 'scaleX', 1, getNumberValidator());\naddGetterSetter(Node, 'scaleY', 1, getNumberValidator());\nFactory.addComponentsGetterSetter(Node, 'skew', ['x', 'y']);\naddGetterSetter(Node, 'skewX', 0, getNumberValidator());\naddGetterSetter(Node, 'skewY', 0, getNumberValidator());\nFactory.addComponentsGetterSetter(Node, 'offset', ['x', 'y']);\naddGetterSetter(Node, 'offsetX', 0, getNumberValidator());\naddGetterSetter(Node, 'offsetY', 0, getNumberValidator());\naddGetterSetter(Node, 'dragDistance', null, getNumberValidator());\naddGetterSetter(Node, 'width', 0, getNumberValidator());\naddGetterSetter(Node, 'height', 0, getNumberValidator());\naddGetterSetter(Node, 'listening', true, getBooleanValidator());\naddGetterSetter(Node, 'preventDefault', true, getBooleanValidator());\naddGetterSetter(Node, 'filters', null, function (val) {\n    this._filterUpToDate = false;\n    return val;\n});\naddGetterSetter(Node, 'visible', true, getBooleanValidator());\naddGetterSetter(Node, 'transformsEnabled', 'all', getStringValidator());\naddGetterSetter(Node, 'size');\naddGetterSetter(Node, 'dragBoundFunc');\naddGetterSetter(Node, 'draggable', false, getBooleanValidator());\nFactory.backCompat(Node, {\n    rotateDeg: 'rotate',\n    setRotationDeg: 'setRotation',\n    getRotationDeg: 'getRotation',\n});\n"]},"metadata":{},"sourceType":"module"}