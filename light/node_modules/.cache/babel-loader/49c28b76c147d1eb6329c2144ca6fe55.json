{"ast":null,"code":"var _jsxFileName = \"/Users/pbivrell/light/light/src/components/Picker2.js\",\n    _s = $RefreshSig$();\n\nimport './Picker2.css';\nimport React, { useState } from \"react\";\nimport { HuePicker, AlphaPicker } from 'react-color';\nimport logo from '../res/Test.png';\nimport rgbHex from \"rgb-hex\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Picker2() {\n  _s();\n\n  const [color, setColor] = useState({\n    hex: \"\",\n    rgba: {}\n  });\n\n  function onColorChange(hue, c) {\n    console.log(c);\n    console.log(color);\n    let a = c.rgb.a;\n\n    if (!hue) {\n      a = color.rgb.a;\n    }\n\n    setColor({\n      hex: \"#\" + rgbHex(c.rgb.r, c.rgb.g, c.rgb.b, a),\n      rgba: c.rgb\n    });\n  }\n\n  function generateBinary(color, pixels) {\n    let data = new Uint8Array((2 + pixels) * 8);\n    let bytes = getInt64Bytes(pixels);\n    let count = bytes[bytes.length - 2] << 8 | bytes[bytes.length - 1];\n    data[0] = 0x3;\n    data[1] = bytes[bytes.length - 1];\n    data[2] = bytes[bytes.length - 2];\n\n    for (let i = 0; i < pixels; i++) {\n      let bytes = getInt64Bytes(i);\n      data[(i + 1) * 8] = 0x1;\n      data[(i + 1) * 8 + 1] = color.r;\n      data[(i + 1) * 8 + 2] = color.g;\n      data[(i + 1) * 8 + 3] = color.b;\n      data[(i + 1) * 8 + 4] = bytes[bytes.length - 1];\n      data[(i + 1) * 8 + 5] = bytes[bytes.length - 2];\n    }\n\n    data[8 + pixels * 8] = 0x2;\n    data[8 + pixels * 8 + 1] = 200;\n    data[8 + pixels * 8 + 2] = 0;\n    data[8 + pixels * 8 + 3] = 0;\n    data[8 + pixels * 8 + 4] = 0;\n    console.log(data);\n    return data;\n  }\n\n  function getInt64Bytes(x) {\n    let y = Math.floor(x / 2 ** 32);\n    return [y, y << 8, y << 16, y << 24, x, x << 8, x << 16, x << 24].map(z => z >>> 24);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Button\",\n    style: {\n      background: color\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"ButtonImage\",\n      src: logo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(HuePicker, {\n      color: color,\n      onChangeComplete: c => onColorChange(false, c)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(AlphaPicker, {\n      color: color,\n      onChangeComplete: c => onColorChange(true, c)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 2\n  }, this);\n}\n\n_s(Picker2, \"Y8fdDMaJFroW10p1GWjINuOjj5w=\");\n\n_c = Picker2;\nexport default Picker2;\n\nvar _c;\n\n$RefreshReg$(_c, \"Picker2\");","map":{"version":3,"sources":["/Users/pbivrell/light/light/src/components/Picker2.js"],"names":["React","useState","HuePicker","AlphaPicker","logo","rgbHex","Picker2","color","setColor","hex","rgba","onColorChange","hue","c","console","log","a","rgb","r","g","b","generateBinary","pixels","data","Uint8Array","bytes","getInt64Bytes","count","length","i","x","y","Math","floor","map","z","background"],"mappings":"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","sourcesContent":["import './Picker2.css';\nimport React, { useState } from \"react\";\nimport { HuePicker, AlphaPicker } from 'react-color'\nimport logo from '../res/Test.png';\nimport rgbHex from \"rgb-hex\";\n\n\nfunction Picker2() {\n\n  \tconst [color, setColor] = useState({hex: \"\", rgba: {}});\n\n\tfunction onColorChange(hue, c) {\n\t\tconsole.log(c);\n\n\t\tconsole.log(color);\n\n\t\tlet a = c.rgb.a;\n\t\tif (!hue) {\n\t\t\ta = color.rgb.a;\n\t\t}\n\t\tsetColor({ hex: \"#\" + rgbHex(c.rgb.r, c.rgb.g, c.rgb.b, a), rgba: c.rgb})\n\t}\n\t\n\t\n\tfunction generateBinary(color, pixels) {\n\t\t\n\t\tlet data = new Uint8Array((2 + pixels) * 8);\n\t\tlet bytes = getInt64Bytes(pixels);\n\n\t\tlet count = (bytes[bytes.length-2] << 8) | bytes[bytes.length-1];\n\t\t\n\t\tdata[0] = 0x3;\n\t\tdata[1] = bytes[bytes.length-1];\n\t\tdata[2] = bytes[bytes.length-2];\n\n\t\tfor (let i = 0; i < pixels; i++) {\n\t\t\tlet bytes = getInt64Bytes(i);\n\t\t \tdata[(i + 1) * 8] = 0x1;\n\t\t\tdata[(i + 1) * 8 + 1] = color.r;\n\t\t\tdata[(i + 1) * 8 + 2] = color.g;\n\t\t\tdata[(i + 1) * 8 + 3] = color.b;\n\t\t\tdata[(i + 1) * 8 + 4] = bytes[bytes.length-1];\n\t\t\tdata[(i + 1) * 8 + 5] = bytes[bytes.length-2];\n\t\t}\n\n\t\tdata[8 + (pixels * 8)] = 0x2;\n\t\tdata[8 + (pixels * 8) + 1] = 200;\n\t\tdata[8 + (pixels * 8) + 2] = 0;\n\t\tdata[8 + (pixels * 8) + 3] = 0;\n\t\tdata[8 + (pixels * 8) + 4] = 0;\n\n\n\t\tconsole.log(data);\n\t\treturn data;\n\n\t}\n\n\tfunction getInt64Bytes(x) {\n  \t\tlet y= Math.floor(x/2**32);\n  \t\treturn [y,(y<<8),(y<<16),(y<<24), x,(x<<8),(x<<16),(x<<24)].map(z=> z>>>24)\n\t}\n\n\treturn (\n\t<div className=\"Button\" style={{background: color}}>\n\t\t<img className=\"ButtonImage\" src={logo}></img>\n\t\t<HuePicker color={color} onChangeComplete={(c) => onColorChange(false, c)}/>\n                <AlphaPicker color={color} onChangeComplete={(c) => onColorChange(true, c)}/>\n\t</div>\n  \t);\n}\n\n\nexport default Picker2;\n"]},"metadata":{},"sourceType":"module"}