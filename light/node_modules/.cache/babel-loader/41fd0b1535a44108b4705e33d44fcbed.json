{"ast":null,"code":"import _classCallCheck from \"/Users/pbivrell/light/light/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/pbivrell/light/light/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { glob } from './Global.js';\nimport { Util } from './Util.js';\n\nvar now = function () {\n  if (glob.performance && glob.performance.now) {\n    return function () {\n      return glob.performance.now();\n    };\n  }\n\n  return function () {\n    return new Date().getTime();\n  };\n}();\n\nexport var Animation = /*#__PURE__*/function () {\n  function Animation(func, layers) {\n    _classCallCheck(this, Animation);\n\n    this.id = Animation.animIdCounter++;\n    this.frame = {\n      time: 0,\n      timeDiff: 0,\n      lastTime: now(),\n      frameRate: 0\n    };\n    this.func = func;\n    this.setLayers(layers);\n  }\n\n  _createClass(Animation, [{\n    key: \"setLayers\",\n    value: function setLayers(layers) {\n      var lays = [];\n\n      if (!layers) {\n        lays = [];\n      } else if (layers.length > 0) {\n        lays = layers;\n      } else {\n        lays = [layers];\n      }\n\n      this.layers = lays;\n      return this;\n    }\n  }, {\n    key: \"getLayers\",\n    value: function getLayers() {\n      return this.layers;\n    }\n  }, {\n    key: \"addLayer\",\n    value: function addLayer(layer) {\n      var layers = this.layers,\n          len = layers.length,\n          n;\n\n      for (n = 0; n < len; n++) {\n        if (layers[n]._id === layer._id) {\n          return false;\n        }\n      }\n\n      this.layers.push(layer);\n      return true;\n    }\n  }, {\n    key: \"isRunning\",\n    value: function isRunning() {\n      var a = Animation,\n          animations = a.animations,\n          len = animations.length,\n          n;\n\n      for (n = 0; n < len; n++) {\n        if (animations[n].id === this.id) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n  }, {\n    key: \"start\",\n    value: function start() {\n      this.stop();\n      this.frame.timeDiff = 0;\n      this.frame.lastTime = now();\n\n      Animation._addAnimation(this);\n\n      return this;\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      Animation._removeAnimation(this);\n\n      return this;\n    }\n  }, {\n    key: \"_updateFrameObject\",\n    value: function _updateFrameObject(time) {\n      this.frame.timeDiff = time - this.frame.lastTime;\n      this.frame.lastTime = time;\n      this.frame.time += this.frame.timeDiff;\n      this.frame.frameRate = 1000 / this.frame.timeDiff;\n    }\n  }], [{\n    key: \"_addAnimation\",\n    value: function _addAnimation(anim) {\n      this.animations.push(anim);\n\n      this._handleAnimation();\n    }\n  }, {\n    key: \"_removeAnimation\",\n    value: function _removeAnimation(anim) {\n      var id = anim.id,\n          animations = this.animations,\n          len = animations.length,\n          n;\n\n      for (n = 0; n < len; n++) {\n        if (animations[n].id === id) {\n          this.animations.splice(n, 1);\n          break;\n        }\n      }\n    }\n  }, {\n    key: \"_runFrames\",\n    value: function _runFrames() {\n      var layerHash = {},\n          animations = this.animations,\n          anim,\n          layers,\n          func,\n          n,\n          i,\n          layersLen,\n          layer,\n          key,\n          needRedraw;\n\n      for (n = 0; n < animations.length; n++) {\n        anim = animations[n];\n        layers = anim.layers;\n        func = anim.func;\n\n        anim._updateFrameObject(now());\n\n        layersLen = layers.length;\n\n        if (func) {\n          needRedraw = func.call(anim, anim.frame) !== false;\n        } else {\n          needRedraw = true;\n        }\n\n        if (!needRedraw) {\n          continue;\n        }\n\n        for (i = 0; i < layersLen; i++) {\n          layer = layers[i];\n\n          if (layer._id !== undefined) {\n            layerHash[layer._id] = layer;\n          }\n        }\n      }\n\n      for (key in layerHash) {\n        if (!layerHash.hasOwnProperty(key)) {\n          continue;\n        }\n\n        layerHash[key].batchDraw();\n      }\n    }\n  }, {\n    key: \"_animationLoop\",\n    value: function _animationLoop() {\n      var Anim = Animation;\n\n      if (Anim.animations.length) {\n        Anim._runFrames();\n\n        Util.requestAnimFrame(Anim._animationLoop);\n      } else {\n        Anim.animRunning = false;\n      }\n    }\n  }, {\n    key: \"_handleAnimation\",\n    value: function _handleAnimation() {\n      if (!this.animRunning) {\n        this.animRunning = true;\n        Util.requestAnimFrame(this._animationLoop);\n      }\n    }\n  }]);\n\n  return Animation;\n}();\nAnimation.animations = [];\nAnimation.animIdCounter = 0;\nAnimation.animRunning = false;","map":{"version":3,"sources":["/Users/pbivrell/light/light/node_modules/konva/lib/Animation.js"],"names":["glob","Util","now","performance","Date","getTime","Animation","func","layers","id","animIdCounter","frame","time","timeDiff","lastTime","frameRate","setLayers","lays","length","layer","len","n","_id","push","a","animations","stop","_addAnimation","_removeAnimation","anim","_handleAnimation","splice","layerHash","i","layersLen","key","needRedraw","_updateFrameObject","call","undefined","hasOwnProperty","batchDraw","Anim","_runFrames","requestAnimFrame","_animationLoop","animRunning"],"mappings":"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","sourcesContent":["import { glob } from './Global.js';\nimport { Util } from './Util.js';\nvar now = (function () {\n    if (glob.performance && glob.performance.now) {\n        return function () {\n            return glob.performance.now();\n        };\n    }\n    return function () {\n        return new Date().getTime();\n    };\n})();\nexport class Animation {\n    constructor(func, layers) {\n        this.id = Animation.animIdCounter++;\n        this.frame = {\n            time: 0,\n            timeDiff: 0,\n            lastTime: now(),\n            frameRate: 0,\n        };\n        this.func = func;\n        this.setLayers(layers);\n    }\n    setLayers(layers) {\n        var lays = [];\n        if (!layers) {\n            lays = [];\n        }\n        else if (layers.length > 0) {\n            lays = layers;\n        }\n        else {\n            lays = [layers];\n        }\n        this.layers = lays;\n        return this;\n    }\n    getLayers() {\n        return this.layers;\n    }\n    addLayer(layer) {\n        var layers = this.layers, len = layers.length, n;\n        for (n = 0; n < len; n++) {\n            if (layers[n]._id === layer._id) {\n                return false;\n            }\n        }\n        this.layers.push(layer);\n        return true;\n    }\n    isRunning() {\n        var a = Animation, animations = a.animations, len = animations.length, n;\n        for (n = 0; n < len; n++) {\n            if (animations[n].id === this.id) {\n                return true;\n            }\n        }\n        return false;\n    }\n    start() {\n        this.stop();\n        this.frame.timeDiff = 0;\n        this.frame.lastTime = now();\n        Animation._addAnimation(this);\n        return this;\n    }\n    stop() {\n        Animation._removeAnimation(this);\n        return this;\n    }\n    _updateFrameObject(time) {\n        this.frame.timeDiff = time - this.frame.lastTime;\n        this.frame.lastTime = time;\n        this.frame.time += this.frame.timeDiff;\n        this.frame.frameRate = 1000 / this.frame.timeDiff;\n    }\n    static _addAnimation(anim) {\n        this.animations.push(anim);\n        this._handleAnimation();\n    }\n    static _removeAnimation(anim) {\n        var id = anim.id, animations = this.animations, len = animations.length, n;\n        for (n = 0; n < len; n++) {\n            if (animations[n].id === id) {\n                this.animations.splice(n, 1);\n                break;\n            }\n        }\n    }\n    static _runFrames() {\n        var layerHash = {}, animations = this.animations, anim, layers, func, n, i, layersLen, layer, key, needRedraw;\n        for (n = 0; n < animations.length; n++) {\n            anim = animations[n];\n            layers = anim.layers;\n            func = anim.func;\n            anim._updateFrameObject(now());\n            layersLen = layers.length;\n            if (func) {\n                needRedraw = func.call(anim, anim.frame) !== false;\n            }\n            else {\n                needRedraw = true;\n            }\n            if (!needRedraw) {\n                continue;\n            }\n            for (i = 0; i < layersLen; i++) {\n                layer = layers[i];\n                if (layer._id !== undefined) {\n                    layerHash[layer._id] = layer;\n                }\n            }\n        }\n        for (key in layerHash) {\n            if (!layerHash.hasOwnProperty(key)) {\n                continue;\n            }\n            layerHash[key].batchDraw();\n        }\n    }\n    static _animationLoop() {\n        var Anim = Animation;\n        if (Anim.animations.length) {\n            Anim._runFrames();\n            Util.requestAnimFrame(Anim._animationLoop);\n        }\n        else {\n            Anim.animRunning = false;\n        }\n    }\n    static _handleAnimation() {\n        if (!this.animRunning) {\n            this.animRunning = true;\n            Util.requestAnimFrame(this._animationLoop);\n        }\n    }\n}\nAnimation.animations = [];\nAnimation.animIdCounter = 0;\nAnimation.animRunning = false;\n"]},"metadata":{},"sourceType":"module"}