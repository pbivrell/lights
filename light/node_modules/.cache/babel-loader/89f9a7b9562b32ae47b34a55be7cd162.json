{"ast":null,"code":"import _inherits from \"/Users/pbivrell/light/light/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/pbivrell/light/light/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _classCallCheck from \"/Users/pbivrell/light/light/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/pbivrell/light/light/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { Util } from './Util.js';\nimport { Konva } from './Global.js';\n\nfunction simplifyArray(arr) {\n  var retArr = [],\n      len = arr.length,\n      util = Util,\n      n,\n      val;\n\n  for (n = 0; n < len; n++) {\n    val = arr[n];\n\n    if (util._isNumber(val)) {\n      val = Math.round(val * 1000) / 1000;\n    } else if (!util._isString(val)) {\n      val = val + '';\n    }\n\n    retArr.push(val);\n  }\n\n  return retArr;\n}\n\nvar COMMA = ',',\n    OPEN_PAREN = '(',\n    CLOSE_PAREN = ')',\n    OPEN_PAREN_BRACKET = '([',\n    CLOSE_BRACKET_PAREN = '])',\n    SEMICOLON = ';',\n    DOUBLE_PAREN = '()',\n    EQUALS = '=',\n    CONTEXT_METHODS = ['arc', 'arcTo', 'beginPath', 'bezierCurveTo', 'clearRect', 'clip', 'closePath', 'createLinearGradient', 'createPattern', 'createRadialGradient', 'drawImage', 'ellipse', 'fill', 'fillText', 'getImageData', 'createImageData', 'lineTo', 'moveTo', 'putImageData', 'quadraticCurveTo', 'rect', 'restore', 'rotate', 'save', 'scale', 'setLineDash', 'setTransform', 'stroke', 'strokeText', 'transform', 'translate'];\nvar CONTEXT_PROPERTIES = ['fillStyle', 'strokeStyle', 'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY', 'lineCap', 'lineDashOffset', 'lineJoin', 'lineWidth', 'miterLimit', 'font', 'textAlign', 'textBaseline', 'globalAlpha', 'globalCompositeOperation', 'imageSmoothingEnabled'];\nvar traceArrMax = 100;\nexport var Context = /*#__PURE__*/function () {\n  function Context(canvas) {\n    _classCallCheck(this, Context);\n\n    this.canvas = canvas;\n    this._context = canvas._canvas.getContext('2d');\n\n    if (Konva.enableTrace) {\n      this.traceArr = [];\n\n      this._enableTrace();\n    }\n  }\n\n  _createClass(Context, [{\n    key: \"fillShape\",\n    value: function fillShape(shape) {\n      if (shape.fillEnabled()) {\n        this._fill(shape);\n      }\n    }\n  }, {\n    key: \"_fill\",\n    value: function _fill(shape) {}\n  }, {\n    key: \"strokeShape\",\n    value: function strokeShape(shape) {\n      if (shape.hasStroke()) {\n        this._stroke(shape);\n      }\n    }\n  }, {\n    key: \"_stroke\",\n    value: function _stroke(shape) {}\n  }, {\n    key: \"fillStrokeShape\",\n    value: function fillStrokeShape(shape) {\n      if (shape.attrs.fillAfterStrokeEnabled) {\n        this.strokeShape(shape);\n        this.fillShape(shape);\n      } else {\n        this.fillShape(shape);\n        this.strokeShape(shape);\n      }\n    }\n  }, {\n    key: \"getTrace\",\n    value: function getTrace(relaxed, rounded) {\n      var traceArr = this.traceArr,\n          len = traceArr.length,\n          str = '',\n          n,\n          trace,\n          method,\n          args;\n\n      for (n = 0; n < len; n++) {\n        trace = traceArr[n];\n        method = trace.method;\n\n        if (method) {\n          args = trace.args;\n          str += method;\n\n          if (relaxed) {\n            str += DOUBLE_PAREN;\n          } else {\n            if (Util._isArray(args[0])) {\n              str += OPEN_PAREN_BRACKET + args.join(COMMA) + CLOSE_BRACKET_PAREN;\n            } else {\n              if (rounded) {\n                args = args.map(function (a) {\n                  return typeof a === 'number' ? Math.floor(a) : a;\n                });\n              }\n\n              str += OPEN_PAREN + args.join(COMMA) + CLOSE_PAREN;\n            }\n          }\n        } else {\n          str += trace.property;\n\n          if (!relaxed) {\n            str += EQUALS + trace.val;\n          }\n        }\n\n        str += SEMICOLON;\n      }\n\n      return str;\n    }\n  }, {\n    key: \"clearTrace\",\n    value: function clearTrace() {\n      this.traceArr = [];\n    }\n  }, {\n    key: \"_trace\",\n    value: function _trace(str) {\n      var traceArr = this.traceArr,\n          len;\n      traceArr.push(str);\n      len = traceArr.length;\n\n      if (len >= traceArrMax) {\n        traceArr.shift();\n      }\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      var pixelRatio = this.getCanvas().getPixelRatio();\n      this.setTransform(1 * pixelRatio, 0, 0, 1 * pixelRatio, 0, 0);\n    }\n  }, {\n    key: \"getCanvas\",\n    value: function getCanvas() {\n      return this.canvas;\n    }\n  }, {\n    key: \"clear\",\n    value: function clear(bounds) {\n      var canvas = this.getCanvas();\n\n      if (bounds) {\n        this.clearRect(bounds.x || 0, bounds.y || 0, bounds.width || 0, bounds.height || 0);\n      } else {\n        this.clearRect(0, 0, canvas.getWidth() / canvas.pixelRatio, canvas.getHeight() / canvas.pixelRatio);\n      }\n    }\n  }, {\n    key: \"_applyLineCap\",\n    value: function _applyLineCap(shape) {\n      var lineCap = shape.getLineCap();\n\n      if (lineCap) {\n        this.setAttr('lineCap', lineCap);\n      }\n    }\n  }, {\n    key: \"_applyOpacity\",\n    value: function _applyOpacity(shape) {\n      var absOpacity = shape.getAbsoluteOpacity();\n\n      if (absOpacity !== 1) {\n        this.setAttr('globalAlpha', absOpacity);\n      }\n    }\n  }, {\n    key: \"_applyLineJoin\",\n    value: function _applyLineJoin(shape) {\n      var lineJoin = shape.attrs.lineJoin;\n\n      if (lineJoin) {\n        this.setAttr('lineJoin', lineJoin);\n      }\n    }\n  }, {\n    key: \"setAttr\",\n    value: function setAttr(attr, val) {\n      this._context[attr] = val;\n    }\n  }, {\n    key: \"arc\",\n    value: function arc(a0, a1, a2, a3, a4, a5) {\n      this._context.arc(a0, a1, a2, a3, a4, a5);\n    }\n  }, {\n    key: \"arcTo\",\n    value: function arcTo(a0, a1, a2, a3, a4) {\n      this._context.arcTo(a0, a1, a2, a3, a4);\n    }\n  }, {\n    key: \"beginPath\",\n    value: function beginPath() {\n      this._context.beginPath();\n    }\n  }, {\n    key: \"bezierCurveTo\",\n    value: function bezierCurveTo(a0, a1, a2, a3, a4, a5) {\n      this._context.bezierCurveTo(a0, a1, a2, a3, a4, a5);\n    }\n  }, {\n    key: \"clearRect\",\n    value: function clearRect(a0, a1, a2, a3) {\n      this._context.clearRect(a0, a1, a2, a3);\n    }\n  }, {\n    key: \"clip\",\n    value: function clip() {\n      this._context.clip();\n    }\n  }, {\n    key: \"closePath\",\n    value: function closePath() {\n      this._context.closePath();\n    }\n  }, {\n    key: \"createImageData\",\n    value: function createImageData(a0, a1) {\n      var a = arguments;\n\n      if (a.length === 2) {\n        return this._context.createImageData(a0, a1);\n      } else if (a.length === 1) {\n        return this._context.createImageData(a0);\n      }\n    }\n  }, {\n    key: \"createLinearGradient\",\n    value: function createLinearGradient(a0, a1, a2, a3) {\n      return this._context.createLinearGradient(a0, a1, a2, a3);\n    }\n  }, {\n    key: \"createPattern\",\n    value: function createPattern(a0, a1) {\n      return this._context.createPattern(a0, a1);\n    }\n  }, {\n    key: \"createRadialGradient\",\n    value: function createRadialGradient(a0, a1, a2, a3, a4, a5) {\n      return this._context.createRadialGradient(a0, a1, a2, a3, a4, a5);\n    }\n  }, {\n    key: \"drawImage\",\n    value: function drawImage(a0, a1, a2, a3, a4, a5, a6, a7, a8) {\n      var a = arguments,\n          _context = this._context;\n\n      if (a.length === 3) {\n        _context.drawImage(a0, a1, a2);\n      } else if (a.length === 5) {\n        _context.drawImage(a0, a1, a2, a3, a4);\n      } else if (a.length === 9) {\n        _context.drawImage(a0, a1, a2, a3, a4, a5, a6, a7, a8);\n      }\n    }\n  }, {\n    key: \"ellipse\",\n    value: function ellipse(a0, a1, a2, a3, a4, a5, a6, a7) {\n      this._context.ellipse(a0, a1, a2, a3, a4, a5, a6, a7);\n    }\n  }, {\n    key: \"isPointInPath\",\n    value: function isPointInPath(x, y) {\n      return this._context.isPointInPath(x, y);\n    }\n  }, {\n    key: \"fill\",\n    value: function fill(path2d) {\n      if (path2d) {\n        this._context.fill(path2d);\n      } else {\n        this._context.fill();\n      }\n    }\n  }, {\n    key: \"fillRect\",\n    value: function fillRect(x, y, width, height) {\n      this._context.fillRect(x, y, width, height);\n    }\n  }, {\n    key: \"strokeRect\",\n    value: function strokeRect(x, y, width, height) {\n      this._context.strokeRect(x, y, width, height);\n    }\n  }, {\n    key: \"fillText\",\n    value: function fillText(text, x, y, maxWidth) {\n      if (maxWidth) {\n        this._context.fillText(text, x, y, maxWidth);\n      } else {\n        this._context.fillText(text, x, y);\n      }\n    }\n  }, {\n    key: \"measureText\",\n    value: function measureText(text) {\n      return this._context.measureText(text);\n    }\n  }, {\n    key: \"getImageData\",\n    value: function getImageData(a0, a1, a2, a3) {\n      return this._context.getImageData(a0, a1, a2, a3);\n    }\n  }, {\n    key: \"lineTo\",\n    value: function lineTo(a0, a1) {\n      this._context.lineTo(a0, a1);\n    }\n  }, {\n    key: \"moveTo\",\n    value: function moveTo(a0, a1) {\n      this._context.moveTo(a0, a1);\n    }\n  }, {\n    key: \"rect\",\n    value: function rect(a0, a1, a2, a3) {\n      this._context.rect(a0, a1, a2, a3);\n    }\n  }, {\n    key: \"putImageData\",\n    value: function putImageData(a0, a1, a2) {\n      this._context.putImageData(a0, a1, a2);\n    }\n  }, {\n    key: \"quadraticCurveTo\",\n    value: function quadraticCurveTo(a0, a1, a2, a3) {\n      this._context.quadraticCurveTo(a0, a1, a2, a3);\n    }\n  }, {\n    key: \"restore\",\n    value: function restore() {\n      this._context.restore();\n    }\n  }, {\n    key: \"rotate\",\n    value: function rotate(a0) {\n      this._context.rotate(a0);\n    }\n  }, {\n    key: \"save\",\n    value: function save() {\n      this._context.save();\n    }\n  }, {\n    key: \"scale\",\n    value: function scale(a0, a1) {\n      this._context.scale(a0, a1);\n    }\n  }, {\n    key: \"setLineDash\",\n    value: function setLineDash(a0) {\n      if (this._context.setLineDash) {\n        this._context.setLineDash(a0);\n      } else if ('mozDash' in this._context) {\n        this._context['mozDash'] = a0;\n      } else if ('webkitLineDash' in this._context) {\n        this._context['webkitLineDash'] = a0;\n      }\n    }\n  }, {\n    key: \"getLineDash\",\n    value: function getLineDash() {\n      return this._context.getLineDash();\n    }\n  }, {\n    key: \"setTransform\",\n    value: function setTransform(a0, a1, a2, a3, a4, a5) {\n      this._context.setTransform(a0, a1, a2, a3, a4, a5);\n    }\n  }, {\n    key: \"stroke\",\n    value: function stroke(path2d) {\n      if (path2d) {\n        this._context.stroke(path2d);\n      } else {\n        this._context.stroke();\n      }\n    }\n  }, {\n    key: \"strokeText\",\n    value: function strokeText(a0, a1, a2, a3) {\n      this._context.strokeText(a0, a1, a2, a3);\n    }\n  }, {\n    key: \"transform\",\n    value: function transform(a0, a1, a2, a3, a4, a5) {\n      this._context.transform(a0, a1, a2, a3, a4, a5);\n    }\n  }, {\n    key: \"translate\",\n    value: function translate(a0, a1) {\n      this._context.translate(a0, a1);\n    }\n  }, {\n    key: \"_enableTrace\",\n    value: function _enableTrace() {\n      var that = this,\n          len = CONTEXT_METHODS.length,\n          origSetter = this.setAttr,\n          n,\n          args;\n\n      var func = function func(methodName) {\n        var origMethod = that[methodName],\n            ret;\n\n        that[methodName] = function () {\n          args = simplifyArray(Array.prototype.slice.call(arguments, 0));\n          ret = origMethod.apply(that, arguments);\n\n          that._trace({\n            method: methodName,\n            args: args\n          });\n\n          return ret;\n        };\n      };\n\n      for (n = 0; n < len; n++) {\n        func(CONTEXT_METHODS[n]);\n      }\n\n      that.setAttr = function () {\n        origSetter.apply(that, arguments);\n        var prop = arguments[0];\n        var val = arguments[1];\n\n        if (prop === 'shadowOffsetX' || prop === 'shadowOffsetY' || prop === 'shadowBlur') {\n          val = val / this.canvas.getPixelRatio();\n        }\n\n        that._trace({\n          property: prop,\n          val: val\n        });\n      };\n    }\n  }, {\n    key: \"_applyGlobalCompositeOperation\",\n    value: function _applyGlobalCompositeOperation(node) {\n      var op = node.attrs.globalCompositeOperation;\n      var def = !op || op === 'source-over';\n\n      if (!def) {\n        this.setAttr('globalCompositeOperation', op);\n      }\n    }\n  }]);\n\n  return Context;\n}();\nCONTEXT_PROPERTIES.forEach(function (prop) {\n  Object.defineProperty(Context.prototype, prop, {\n    get: function get() {\n      return this._context[prop];\n    },\n    set: function set(val) {\n      this._context[prop] = val;\n    }\n  });\n});\nexport var SceneContext = /*#__PURE__*/function (_Context) {\n  _inherits(SceneContext, _Context);\n\n  var _super = _createSuper(SceneContext);\n\n  function SceneContext() {\n    _classCallCheck(this, SceneContext);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(SceneContext, [{\n    key: \"_fillColor\",\n    value: function _fillColor(shape) {\n      var fill = shape.fill();\n      this.setAttr('fillStyle', fill);\n\n      shape._fillFunc(this);\n    }\n  }, {\n    key: \"_fillPattern\",\n    value: function _fillPattern(shape) {\n      this.setAttr('fillStyle', shape._getFillPattern());\n\n      shape._fillFunc(this);\n    }\n  }, {\n    key: \"_fillLinearGradient\",\n    value: function _fillLinearGradient(shape) {\n      var grd = shape._getLinearGradient();\n\n      if (grd) {\n        this.setAttr('fillStyle', grd);\n\n        shape._fillFunc(this);\n      }\n    }\n  }, {\n    key: \"_fillRadialGradient\",\n    value: function _fillRadialGradient(shape) {\n      var grd = shape._getRadialGradient();\n\n      if (grd) {\n        this.setAttr('fillStyle', grd);\n\n        shape._fillFunc(this);\n      }\n    }\n  }, {\n    key: \"_fill\",\n    value: function _fill(shape) {\n      var hasColor = shape.fill(),\n          fillPriority = shape.getFillPriority();\n\n      if (hasColor && fillPriority === 'color') {\n        this._fillColor(shape);\n\n        return;\n      }\n\n      var hasPattern = shape.getFillPatternImage();\n\n      if (hasPattern && fillPriority === 'pattern') {\n        this._fillPattern(shape);\n\n        return;\n      }\n\n      var hasLinearGradient = shape.getFillLinearGradientColorStops();\n\n      if (hasLinearGradient && fillPriority === 'linear-gradient') {\n        this._fillLinearGradient(shape);\n\n        return;\n      }\n\n      var hasRadialGradient = shape.getFillRadialGradientColorStops();\n\n      if (hasRadialGradient && fillPriority === 'radial-gradient') {\n        this._fillRadialGradient(shape);\n\n        return;\n      }\n\n      if (hasColor) {\n        this._fillColor(shape);\n      } else if (hasPattern) {\n        this._fillPattern(shape);\n      } else if (hasLinearGradient) {\n        this._fillLinearGradient(shape);\n      } else if (hasRadialGradient) {\n        this._fillRadialGradient(shape);\n      }\n    }\n  }, {\n    key: \"_strokeLinearGradient\",\n    value: function _strokeLinearGradient(shape) {\n      var start = shape.getStrokeLinearGradientStartPoint(),\n          end = shape.getStrokeLinearGradientEndPoint(),\n          colorStops = shape.getStrokeLinearGradientColorStops(),\n          grd = this.createLinearGradient(start.x, start.y, end.x, end.y);\n\n      if (colorStops) {\n        for (var n = 0; n < colorStops.length; n += 2) {\n          grd.addColorStop(colorStops[n], colorStops[n + 1]);\n        }\n\n        this.setAttr('strokeStyle', grd);\n      }\n    }\n  }, {\n    key: \"_stroke\",\n    value: function _stroke(shape) {\n      var dash = shape.dash(),\n          strokeScaleEnabled = shape.getStrokeScaleEnabled();\n\n      if (shape.hasStroke()) {\n        if (!strokeScaleEnabled) {\n          this.save();\n          var pixelRatio = this.getCanvas().getPixelRatio();\n          this.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        }\n\n        this._applyLineCap(shape);\n\n        if (dash && shape.dashEnabled()) {\n          this.setLineDash(dash);\n          this.setAttr('lineDashOffset', shape.dashOffset());\n        }\n\n        this.setAttr('lineWidth', shape.strokeWidth());\n\n        if (!shape.getShadowForStrokeEnabled()) {\n          this.setAttr('shadowColor', 'rgba(0,0,0,0)');\n        }\n\n        var hasLinearGradient = shape.getStrokeLinearGradientColorStops();\n\n        if (hasLinearGradient) {\n          this._strokeLinearGradient(shape);\n        } else {\n          this.setAttr('strokeStyle', shape.stroke());\n        }\n\n        shape._strokeFunc(this);\n\n        if (!strokeScaleEnabled) {\n          this.restore();\n        }\n      }\n    }\n  }, {\n    key: \"_applyShadow\",\n    value: function _applyShadow(shape) {\n      var _a, _b, _c;\n\n      var color = (_a = shape.getShadowRGBA()) !== null && _a !== void 0 ? _a : 'black',\n          blur = (_b = shape.getShadowBlur()) !== null && _b !== void 0 ? _b : 5,\n          offset = (_c = shape.getShadowOffset()) !== null && _c !== void 0 ? _c : {\n        x: 0,\n        y: 0\n      },\n          scale = shape.getAbsoluteScale(),\n          ratio = this.canvas.getPixelRatio(),\n          scaleX = scale.x * ratio,\n          scaleY = scale.y * ratio;\n      this.setAttr('shadowColor', color);\n      this.setAttr('shadowBlur', blur * Math.min(Math.abs(scaleX), Math.abs(scaleY)));\n      this.setAttr('shadowOffsetX', offset.x * scaleX);\n      this.setAttr('shadowOffsetY', offset.y * scaleY);\n    }\n  }]);\n\n  return SceneContext;\n}(Context);\nexport var HitContext = /*#__PURE__*/function (_Context2) {\n  _inherits(HitContext, _Context2);\n\n  var _super2 = _createSuper(HitContext);\n\n  function HitContext() {\n    _classCallCheck(this, HitContext);\n\n    return _super2.apply(this, arguments);\n  }\n\n  _createClass(HitContext, [{\n    key: \"_fill\",\n    value: function _fill(shape) {\n      this.save();\n      this.setAttr('fillStyle', shape.colorKey);\n\n      shape._fillFuncHit(this);\n\n      this.restore();\n    }\n  }, {\n    key: \"strokeShape\",\n    value: function strokeShape(shape) {\n      if (shape.hasHitStroke()) {\n        this._stroke(shape);\n      }\n    }\n  }, {\n    key: \"_stroke\",\n    value: function _stroke(shape) {\n      if (shape.hasHitStroke()) {\n        var strokeScaleEnabled = shape.getStrokeScaleEnabled();\n\n        if (!strokeScaleEnabled) {\n          this.save();\n          var pixelRatio = this.getCanvas().getPixelRatio();\n          this.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        }\n\n        this._applyLineCap(shape);\n\n        var hitStrokeWidth = shape.hitStrokeWidth();\n        var strokeWidth = hitStrokeWidth === 'auto' ? shape.strokeWidth() : hitStrokeWidth;\n        this.setAttr('lineWidth', strokeWidth);\n        this.setAttr('strokeStyle', shape.colorKey);\n\n        shape._strokeFuncHit(this);\n\n        if (!strokeScaleEnabled) {\n          this.restore();\n        }\n      }\n    }\n  }]);\n\n  return HitContext;\n}(Context);","map":{"version":3,"sources":["/Users/pbivrell/light/light/node_modules/konva/lib/Context.js"],"names":["Util","Konva","simplifyArray","arr","retArr","len","length","util","n","val","_isNumber","Math","round","_isString","push","COMMA","OPEN_PAREN","CLOSE_PAREN","OPEN_PAREN_BRACKET","CLOSE_BRACKET_PAREN","SEMICOLON","DOUBLE_PAREN","EQUALS","CONTEXT_METHODS","CONTEXT_PROPERTIES","traceArrMax","Context","canvas","_context","_canvas","getContext","enableTrace","traceArr","_enableTrace","shape","fillEnabled","_fill","hasStroke","_stroke","attrs","fillAfterStrokeEnabled","strokeShape","fillShape","relaxed","rounded","str","trace","method","args","_isArray","join","map","a","floor","property","shift","pixelRatio","getCanvas","getPixelRatio","setTransform","bounds","clearRect","x","y","width","height","getWidth","getHeight","lineCap","getLineCap","setAttr","absOpacity","getAbsoluteOpacity","lineJoin","attr","a0","a1","a2","a3","a4","a5","arc","arcTo","beginPath","bezierCurveTo","clip","closePath","arguments","createImageData","createLinearGradient","createPattern","createRadialGradient","a6","a7","a8","drawImage","ellipse","isPointInPath","path2d","fill","fillRect","strokeRect","text","maxWidth","fillText","measureText","getImageData","lineTo","moveTo","rect","putImageData","quadraticCurveTo","restore","rotate","save","scale","setLineDash","getLineDash","stroke","strokeText","transform","translate","that","origSetter","func","methodName","origMethod","ret","Array","prototype","slice","call","apply","_trace","prop","node","op","globalCompositeOperation","def","forEach","Object","defineProperty","get","set","SceneContext","_fillFunc","_getFillPattern","grd","_getLinearGradient","_getRadialGradient","hasColor","fillPriority","getFillPriority","_fillColor","hasPattern","getFillPatternImage","_fillPattern","hasLinearGradient","getFillLinearGradientColorStops","_fillLinearGradient","hasRadialGradient","getFillRadialGradientColorStops","_fillRadialGradient","start","getStrokeLinearGradientStartPoint","end","getStrokeLinearGradientEndPoint","colorStops","getStrokeLinearGradientColorStops","addColorStop","dash","strokeScaleEnabled","getStrokeScaleEnabled","_applyLineCap","dashEnabled","dashOffset","strokeWidth","getShadowForStrokeEnabled","_strokeLinearGradient","_strokeFunc","_a","_b","_c","color","getShadowRGBA","blur","getShadowBlur","offset","getShadowOffset","getAbsoluteScale","ratio","scaleX","scaleY","min","abs","HitContext","colorKey","_fillFuncHit","hasHitStroke","hitStrokeWidth","_strokeFuncHit"],"mappings":"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","sourcesContent":["import { Util } from './Util.js';\nimport { Konva } from './Global.js';\nfunction simplifyArray(arr) {\n    var retArr = [], len = arr.length, util = Util, n, val;\n    for (n = 0; n < len; n++) {\n        val = arr[n];\n        if (util._isNumber(val)) {\n            val = Math.round(val * 1000) / 1000;\n        }\n        else if (!util._isString(val)) {\n            val = val + '';\n        }\n        retArr.push(val);\n    }\n    return retArr;\n}\nvar COMMA = ',', OPEN_PAREN = '(', CLOSE_PAREN = ')', OPEN_PAREN_BRACKET = '([', CLOSE_BRACKET_PAREN = '])', SEMICOLON = ';', DOUBLE_PAREN = '()', EQUALS = '=', CONTEXT_METHODS = [\n    'arc',\n    'arcTo',\n    'beginPath',\n    'bezierCurveTo',\n    'clearRect',\n    'clip',\n    'closePath',\n    'createLinearGradient',\n    'createPattern',\n    'createRadialGradient',\n    'drawImage',\n    'ellipse',\n    'fill',\n    'fillText',\n    'getImageData',\n    'createImageData',\n    'lineTo',\n    'moveTo',\n    'putImageData',\n    'quadraticCurveTo',\n    'rect',\n    'restore',\n    'rotate',\n    'save',\n    'scale',\n    'setLineDash',\n    'setTransform',\n    'stroke',\n    'strokeText',\n    'transform',\n    'translate',\n];\nvar CONTEXT_PROPERTIES = [\n    'fillStyle',\n    'strokeStyle',\n    'shadowColor',\n    'shadowBlur',\n    'shadowOffsetX',\n    'shadowOffsetY',\n    'lineCap',\n    'lineDashOffset',\n    'lineJoin',\n    'lineWidth',\n    'miterLimit',\n    'font',\n    'textAlign',\n    'textBaseline',\n    'globalAlpha',\n    'globalCompositeOperation',\n    'imageSmoothingEnabled',\n];\nconst traceArrMax = 100;\nexport class Context {\n    constructor(canvas) {\n        this.canvas = canvas;\n        this._context = canvas._canvas.getContext('2d');\n        if (Konva.enableTrace) {\n            this.traceArr = [];\n            this._enableTrace();\n        }\n    }\n    fillShape(shape) {\n        if (shape.fillEnabled()) {\n            this._fill(shape);\n        }\n    }\n    _fill(shape) {\n    }\n    strokeShape(shape) {\n        if (shape.hasStroke()) {\n            this._stroke(shape);\n        }\n    }\n    _stroke(shape) {\n    }\n    fillStrokeShape(shape) {\n        if (shape.attrs.fillAfterStrokeEnabled) {\n            this.strokeShape(shape);\n            this.fillShape(shape);\n        }\n        else {\n            this.fillShape(shape);\n            this.strokeShape(shape);\n        }\n    }\n    getTrace(relaxed, rounded) {\n        var traceArr = this.traceArr, len = traceArr.length, str = '', n, trace, method, args;\n        for (n = 0; n < len; n++) {\n            trace = traceArr[n];\n            method = trace.method;\n            if (method) {\n                args = trace.args;\n                str += method;\n                if (relaxed) {\n                    str += DOUBLE_PAREN;\n                }\n                else {\n                    if (Util._isArray(args[0])) {\n                        str += OPEN_PAREN_BRACKET + args.join(COMMA) + CLOSE_BRACKET_PAREN;\n                    }\n                    else {\n                        if (rounded) {\n                            args = args.map((a) => typeof a === 'number' ? Math.floor(a) : a);\n                        }\n                        str += OPEN_PAREN + args.join(COMMA) + CLOSE_PAREN;\n                    }\n                }\n            }\n            else {\n                str += trace.property;\n                if (!relaxed) {\n                    str += EQUALS + trace.val;\n                }\n            }\n            str += SEMICOLON;\n        }\n        return str;\n    }\n    clearTrace() {\n        this.traceArr = [];\n    }\n    _trace(str) {\n        var traceArr = this.traceArr, len;\n        traceArr.push(str);\n        len = traceArr.length;\n        if (len >= traceArrMax) {\n            traceArr.shift();\n        }\n    }\n    reset() {\n        var pixelRatio = this.getCanvas().getPixelRatio();\n        this.setTransform(1 * pixelRatio, 0, 0, 1 * pixelRatio, 0, 0);\n    }\n    getCanvas() {\n        return this.canvas;\n    }\n    clear(bounds) {\n        var canvas = this.getCanvas();\n        if (bounds) {\n            this.clearRect(bounds.x || 0, bounds.y || 0, bounds.width || 0, bounds.height || 0);\n        }\n        else {\n            this.clearRect(0, 0, canvas.getWidth() / canvas.pixelRatio, canvas.getHeight() / canvas.pixelRatio);\n        }\n    }\n    _applyLineCap(shape) {\n        var lineCap = shape.getLineCap();\n        if (lineCap) {\n            this.setAttr('lineCap', lineCap);\n        }\n    }\n    _applyOpacity(shape) {\n        var absOpacity = shape.getAbsoluteOpacity();\n        if (absOpacity !== 1) {\n            this.setAttr('globalAlpha', absOpacity);\n        }\n    }\n    _applyLineJoin(shape) {\n        var lineJoin = shape.attrs.lineJoin;\n        if (lineJoin) {\n            this.setAttr('lineJoin', lineJoin);\n        }\n    }\n    setAttr(attr, val) {\n        this._context[attr] = val;\n    }\n    arc(a0, a1, a2, a3, a4, a5) {\n        this._context.arc(a0, a1, a2, a3, a4, a5);\n    }\n    arcTo(a0, a1, a2, a3, a4) {\n        this._context.arcTo(a0, a1, a2, a3, a4);\n    }\n    beginPath() {\n        this._context.beginPath();\n    }\n    bezierCurveTo(a0, a1, a2, a3, a4, a5) {\n        this._context.bezierCurveTo(a0, a1, a2, a3, a4, a5);\n    }\n    clearRect(a0, a1, a2, a3) {\n        this._context.clearRect(a0, a1, a2, a3);\n    }\n    clip() {\n        this._context.clip();\n    }\n    closePath() {\n        this._context.closePath();\n    }\n    createImageData(a0, a1) {\n        var a = arguments;\n        if (a.length === 2) {\n            return this._context.createImageData(a0, a1);\n        }\n        else if (a.length === 1) {\n            return this._context.createImageData(a0);\n        }\n    }\n    createLinearGradient(a0, a1, a2, a3) {\n        return this._context.createLinearGradient(a0, a1, a2, a3);\n    }\n    createPattern(a0, a1) {\n        return this._context.createPattern(a0, a1);\n    }\n    createRadialGradient(a0, a1, a2, a3, a4, a5) {\n        return this._context.createRadialGradient(a0, a1, a2, a3, a4, a5);\n    }\n    drawImage(a0, a1, a2, a3, a4, a5, a6, a7, a8) {\n        var a = arguments, _context = this._context;\n        if (a.length === 3) {\n            _context.drawImage(a0, a1, a2);\n        }\n        else if (a.length === 5) {\n            _context.drawImage(a0, a1, a2, a3, a4);\n        }\n        else if (a.length === 9) {\n            _context.drawImage(a0, a1, a2, a3, a4, a5, a6, a7, a8);\n        }\n    }\n    ellipse(a0, a1, a2, a3, a4, a5, a6, a7) {\n        this._context.ellipse(a0, a1, a2, a3, a4, a5, a6, a7);\n    }\n    isPointInPath(x, y) {\n        return this._context.isPointInPath(x, y);\n    }\n    fill(path2d) {\n        if (path2d) {\n            this._context.fill(path2d);\n        }\n        else {\n            this._context.fill();\n        }\n    }\n    fillRect(x, y, width, height) {\n        this._context.fillRect(x, y, width, height);\n    }\n    strokeRect(x, y, width, height) {\n        this._context.strokeRect(x, y, width, height);\n    }\n    fillText(text, x, y, maxWidth) {\n        if (maxWidth) {\n            this._context.fillText(text, x, y, maxWidth);\n        }\n        else {\n            this._context.fillText(text, x, y);\n        }\n    }\n    measureText(text) {\n        return this._context.measureText(text);\n    }\n    getImageData(a0, a1, a2, a3) {\n        return this._context.getImageData(a0, a1, a2, a3);\n    }\n    lineTo(a0, a1) {\n        this._context.lineTo(a0, a1);\n    }\n    moveTo(a0, a1) {\n        this._context.moveTo(a0, a1);\n    }\n    rect(a0, a1, a2, a3) {\n        this._context.rect(a0, a1, a2, a3);\n    }\n    putImageData(a0, a1, a2) {\n        this._context.putImageData(a0, a1, a2);\n    }\n    quadraticCurveTo(a0, a1, a2, a3) {\n        this._context.quadraticCurveTo(a0, a1, a2, a3);\n    }\n    restore() {\n        this._context.restore();\n    }\n    rotate(a0) {\n        this._context.rotate(a0);\n    }\n    save() {\n        this._context.save();\n    }\n    scale(a0, a1) {\n        this._context.scale(a0, a1);\n    }\n    setLineDash(a0) {\n        if (this._context.setLineDash) {\n            this._context.setLineDash(a0);\n        }\n        else if ('mozDash' in this._context) {\n            this._context['mozDash'] = a0;\n        }\n        else if ('webkitLineDash' in this._context) {\n            this._context['webkitLineDash'] = a0;\n        }\n    }\n    getLineDash() {\n        return this._context.getLineDash();\n    }\n    setTransform(a0, a1, a2, a3, a4, a5) {\n        this._context.setTransform(a0, a1, a2, a3, a4, a5);\n    }\n    stroke(path2d) {\n        if (path2d) {\n            this._context.stroke(path2d);\n        }\n        else {\n            this._context.stroke();\n        }\n    }\n    strokeText(a0, a1, a2, a3) {\n        this._context.strokeText(a0, a1, a2, a3);\n    }\n    transform(a0, a1, a2, a3, a4, a5) {\n        this._context.transform(a0, a1, a2, a3, a4, a5);\n    }\n    translate(a0, a1) {\n        this._context.translate(a0, a1);\n    }\n    _enableTrace() {\n        var that = this, len = CONTEXT_METHODS.length, origSetter = this.setAttr, n, args;\n        var func = function (methodName) {\n            var origMethod = that[methodName], ret;\n            that[methodName] = function () {\n                args = simplifyArray(Array.prototype.slice.call(arguments, 0));\n                ret = origMethod.apply(that, arguments);\n                that._trace({\n                    method: methodName,\n                    args: args,\n                });\n                return ret;\n            };\n        };\n        for (n = 0; n < len; n++) {\n            func(CONTEXT_METHODS[n]);\n        }\n        that.setAttr = function () {\n            origSetter.apply(that, arguments);\n            var prop = arguments[0];\n            var val = arguments[1];\n            if (prop === 'shadowOffsetX' ||\n                prop === 'shadowOffsetY' ||\n                prop === 'shadowBlur') {\n                val = val / this.canvas.getPixelRatio();\n            }\n            that._trace({\n                property: prop,\n                val: val,\n            });\n        };\n    }\n    _applyGlobalCompositeOperation(node) {\n        const op = node.attrs.globalCompositeOperation;\n        var def = !op || op === 'source-over';\n        if (!def) {\n            this.setAttr('globalCompositeOperation', op);\n        }\n    }\n}\nCONTEXT_PROPERTIES.forEach(function (prop) {\n    Object.defineProperty(Context.prototype, prop, {\n        get() {\n            return this._context[prop];\n        },\n        set(val) {\n            this._context[prop] = val;\n        },\n    });\n});\nexport class SceneContext extends Context {\n    _fillColor(shape) {\n        var fill = shape.fill();\n        this.setAttr('fillStyle', fill);\n        shape._fillFunc(this);\n    }\n    _fillPattern(shape) {\n        this.setAttr('fillStyle', shape._getFillPattern());\n        shape._fillFunc(this);\n    }\n    _fillLinearGradient(shape) {\n        var grd = shape._getLinearGradient();\n        if (grd) {\n            this.setAttr('fillStyle', grd);\n            shape._fillFunc(this);\n        }\n    }\n    _fillRadialGradient(shape) {\n        var grd = shape._getRadialGradient();\n        if (grd) {\n            this.setAttr('fillStyle', grd);\n            shape._fillFunc(this);\n        }\n    }\n    _fill(shape) {\n        var hasColor = shape.fill(), fillPriority = shape.getFillPriority();\n        if (hasColor && fillPriority === 'color') {\n            this._fillColor(shape);\n            return;\n        }\n        var hasPattern = shape.getFillPatternImage();\n        if (hasPattern && fillPriority === 'pattern') {\n            this._fillPattern(shape);\n            return;\n        }\n        var hasLinearGradient = shape.getFillLinearGradientColorStops();\n        if (hasLinearGradient && fillPriority === 'linear-gradient') {\n            this._fillLinearGradient(shape);\n            return;\n        }\n        var hasRadialGradient = shape.getFillRadialGradientColorStops();\n        if (hasRadialGradient && fillPriority === 'radial-gradient') {\n            this._fillRadialGradient(shape);\n            return;\n        }\n        if (hasColor) {\n            this._fillColor(shape);\n        }\n        else if (hasPattern) {\n            this._fillPattern(shape);\n        }\n        else if (hasLinearGradient) {\n            this._fillLinearGradient(shape);\n        }\n        else if (hasRadialGradient) {\n            this._fillRadialGradient(shape);\n        }\n    }\n    _strokeLinearGradient(shape) {\n        var start = shape.getStrokeLinearGradientStartPoint(), end = shape.getStrokeLinearGradientEndPoint(), colorStops = shape.getStrokeLinearGradientColorStops(), grd = this.createLinearGradient(start.x, start.y, end.x, end.y);\n        if (colorStops) {\n            for (var n = 0; n < colorStops.length; n += 2) {\n                grd.addColorStop(colorStops[n], colorStops[n + 1]);\n            }\n            this.setAttr('strokeStyle', grd);\n        }\n    }\n    _stroke(shape) {\n        var dash = shape.dash(), strokeScaleEnabled = shape.getStrokeScaleEnabled();\n        if (shape.hasStroke()) {\n            if (!strokeScaleEnabled) {\n                this.save();\n                var pixelRatio = this.getCanvas().getPixelRatio();\n                this.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n            }\n            this._applyLineCap(shape);\n            if (dash && shape.dashEnabled()) {\n                this.setLineDash(dash);\n                this.setAttr('lineDashOffset', shape.dashOffset());\n            }\n            this.setAttr('lineWidth', shape.strokeWidth());\n            if (!shape.getShadowForStrokeEnabled()) {\n                this.setAttr('shadowColor', 'rgba(0,0,0,0)');\n            }\n            var hasLinearGradient = shape.getStrokeLinearGradientColorStops();\n            if (hasLinearGradient) {\n                this._strokeLinearGradient(shape);\n            }\n            else {\n                this.setAttr('strokeStyle', shape.stroke());\n            }\n            shape._strokeFunc(this);\n            if (!strokeScaleEnabled) {\n                this.restore();\n            }\n        }\n    }\n    _applyShadow(shape) {\n        var _a, _b, _c;\n        var color = (_a = shape.getShadowRGBA()) !== null && _a !== void 0 ? _a : 'black', blur = (_b = shape.getShadowBlur()) !== null && _b !== void 0 ? _b : 5, offset = (_c = shape.getShadowOffset()) !== null && _c !== void 0 ? _c : {\n            x: 0,\n            y: 0,\n        }, scale = shape.getAbsoluteScale(), ratio = this.canvas.getPixelRatio(), scaleX = scale.x * ratio, scaleY = scale.y * ratio;\n        this.setAttr('shadowColor', color);\n        this.setAttr('shadowBlur', blur * Math.min(Math.abs(scaleX), Math.abs(scaleY)));\n        this.setAttr('shadowOffsetX', offset.x * scaleX);\n        this.setAttr('shadowOffsetY', offset.y * scaleY);\n    }\n}\nexport class HitContext extends Context {\n    _fill(shape) {\n        this.save();\n        this.setAttr('fillStyle', shape.colorKey);\n        shape._fillFuncHit(this);\n        this.restore();\n    }\n    strokeShape(shape) {\n        if (shape.hasHitStroke()) {\n            this._stroke(shape);\n        }\n    }\n    _stroke(shape) {\n        if (shape.hasHitStroke()) {\n            var strokeScaleEnabled = shape.getStrokeScaleEnabled();\n            if (!strokeScaleEnabled) {\n                this.save();\n                var pixelRatio = this.getCanvas().getPixelRatio();\n                this.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n            }\n            this._applyLineCap(shape);\n            var hitStrokeWidth = shape.hitStrokeWidth();\n            var strokeWidth = hitStrokeWidth === 'auto' ? shape.strokeWidth() : hitStrokeWidth;\n            this.setAttr('lineWidth', strokeWidth);\n            this.setAttr('strokeStyle', shape.colorKey);\n            shape._strokeFuncHit(this);\n            if (!strokeScaleEnabled) {\n                this.restore();\n            }\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module"}