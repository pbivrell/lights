{"ast":null,"code":"import _classCallCheck from \"/Users/pbivrell/light/light/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/pbivrell/light/light/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _get from \"/Users/pbivrell/light/light/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"/Users/pbivrell/light/light/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/pbivrell/light/light/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/pbivrell/light/light/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { Util } from './Util.js';\nimport { Container } from './Container.js';\nimport { Node } from './Node.js';\nimport { Factory } from './Factory.js';\nimport { SceneCanvas, HitCanvas } from './Canvas.js';\nimport { getBooleanValidator } from './Validators.js';\nimport { shapes } from './Shape.js';\nimport { _registerNode } from './Global.js';\nvar HASH = '#',\n    BEFORE_DRAW = 'beforeDraw',\n    DRAW = 'draw',\n    INTERSECTION_OFFSETS = [{\n  x: 0,\n  y: 0\n}, {\n  x: -1,\n  y: -1\n}, {\n  x: 1,\n  y: -1\n}, {\n  x: 1,\n  y: 1\n}, {\n  x: -1,\n  y: 1\n}],\n    INTERSECTION_OFFSETS_LEN = INTERSECTION_OFFSETS.length;\nexport var Layer = /*#__PURE__*/function (_Container) {\n  _inherits(Layer, _Container);\n\n  var _super = _createSuper(Layer);\n\n  function Layer(config) {\n    var _this;\n\n    _classCallCheck(this, Layer);\n\n    _this = _super.call(this, config);\n    _this.canvas = new SceneCanvas();\n    _this.hitCanvas = new HitCanvas({\n      pixelRatio: 1\n    });\n    _this._waitingForDraw = false;\n\n    _this.on('visibleChange.konva', _this._checkVisibility);\n\n    _this._checkVisibility();\n\n    _this.on('imageSmoothingEnabledChange.konva', _this._setSmoothEnabled);\n\n    _this._setSmoothEnabled();\n\n    return _this;\n  }\n\n  _createClass(Layer, [{\n    key: \"createPNGStream\",\n    value: function createPNGStream() {\n      var c = this.canvas._canvas;\n      return c.createPNGStream();\n    }\n  }, {\n    key: \"getCanvas\",\n    value: function getCanvas() {\n      return this.canvas;\n    }\n  }, {\n    key: \"getNativeCanvasElement\",\n    value: function getNativeCanvasElement() {\n      return this.canvas._canvas;\n    }\n  }, {\n    key: \"getHitCanvas\",\n    value: function getHitCanvas() {\n      return this.hitCanvas;\n    }\n  }, {\n    key: \"getContext\",\n    value: function getContext() {\n      return this.getCanvas().getContext();\n    }\n  }, {\n    key: \"clear\",\n    value: function clear(bounds) {\n      this.getContext().clear(bounds);\n      this.getHitCanvas().getContext().clear(bounds);\n      return this;\n    }\n  }, {\n    key: \"setZIndex\",\n    value: function setZIndex(index) {\n      _get(_getPrototypeOf(Layer.prototype), \"setZIndex\", this).call(this, index);\n\n      var stage = this.getStage();\n\n      if (stage && stage.content) {\n        stage.content.removeChild(this.getNativeCanvasElement());\n\n        if (index < stage.children.length - 1) {\n          stage.content.insertBefore(this.getNativeCanvasElement(), stage.children[index + 1].getCanvas()._canvas);\n        } else {\n          stage.content.appendChild(this.getNativeCanvasElement());\n        }\n      }\n\n      return this;\n    }\n  }, {\n    key: \"moveToTop\",\n    value: function moveToTop() {\n      Node.prototype.moveToTop.call(this);\n      var stage = this.getStage();\n\n      if (stage && stage.content) {\n        stage.content.removeChild(this.getNativeCanvasElement());\n        stage.content.appendChild(this.getNativeCanvasElement());\n      }\n\n      return true;\n    }\n  }, {\n    key: \"moveUp\",\n    value: function moveUp() {\n      var moved = Node.prototype.moveUp.call(this);\n\n      if (!moved) {\n        return false;\n      }\n\n      var stage = this.getStage();\n\n      if (!stage || !stage.content) {\n        return false;\n      }\n\n      stage.content.removeChild(this.getNativeCanvasElement());\n\n      if (this.index < stage.children.length - 1) {\n        stage.content.insertBefore(this.getNativeCanvasElement(), stage.children[this.index + 1].getCanvas()._canvas);\n      } else {\n        stage.content.appendChild(this.getNativeCanvasElement());\n      }\n\n      return true;\n    }\n  }, {\n    key: \"moveDown\",\n    value: function moveDown() {\n      if (Node.prototype.moveDown.call(this)) {\n        var stage = this.getStage();\n\n        if (stage) {\n          var children = stage.children;\n\n          if (stage.content) {\n            stage.content.removeChild(this.getNativeCanvasElement());\n            stage.content.insertBefore(this.getNativeCanvasElement(), children[this.index + 1].getCanvas()._canvas);\n          }\n        }\n\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"moveToBottom\",\n    value: function moveToBottom() {\n      if (Node.prototype.moveToBottom.call(this)) {\n        var stage = this.getStage();\n\n        if (stage) {\n          var children = stage.children;\n\n          if (stage.content) {\n            stage.content.removeChild(this.getNativeCanvasElement());\n            stage.content.insertBefore(this.getNativeCanvasElement(), children[1].getCanvas()._canvas);\n          }\n        }\n\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"getLayer\",\n    value: function getLayer() {\n      return this;\n    }\n  }, {\n    key: \"remove\",\n    value: function remove() {\n      var _canvas = this.getNativeCanvasElement();\n\n      Node.prototype.remove.call(this);\n\n      if (_canvas && _canvas.parentNode && Util._isInDocument(_canvas)) {\n        _canvas.parentNode.removeChild(_canvas);\n      }\n\n      return this;\n    }\n  }, {\n    key: \"getStage\",\n    value: function getStage() {\n      return this.parent;\n    }\n  }, {\n    key: \"setSize\",\n    value: function setSize(_ref) {\n      var width = _ref.width,\n          height = _ref.height;\n      this.canvas.setSize(width, height);\n      this.hitCanvas.setSize(width, height);\n\n      this._setSmoothEnabled();\n\n      return this;\n    }\n  }, {\n    key: \"_validateAdd\",\n    value: function _validateAdd(child) {\n      var type = child.getType();\n\n      if (type !== 'Group' && type !== 'Shape') {\n        Util.throw('You may only add groups and shapes to a layer.');\n      }\n    }\n  }, {\n    key: \"_toKonvaCanvas\",\n    value: function _toKonvaCanvas(config) {\n      config = config || {};\n      config.width = config.width || this.getWidth();\n      config.height = config.height || this.getHeight();\n      config.x = config.x !== undefined ? config.x : this.x();\n      config.y = config.y !== undefined ? config.y : this.y();\n      return Node.prototype._toKonvaCanvas.call(this, config);\n    }\n  }, {\n    key: \"_checkVisibility\",\n    value: function _checkVisibility() {\n      var visible = this.visible();\n\n      if (visible) {\n        this.canvas._canvas.style.display = 'block';\n      } else {\n        this.canvas._canvas.style.display = 'none';\n      }\n    }\n  }, {\n    key: \"_setSmoothEnabled\",\n    value: function _setSmoothEnabled() {\n      this.getContext()._context.imageSmoothingEnabled = this.imageSmoothingEnabled();\n    }\n  }, {\n    key: \"getWidth\",\n    value: function getWidth() {\n      if (this.parent) {\n        return this.parent.width();\n      }\n    }\n  }, {\n    key: \"setWidth\",\n    value: function setWidth() {\n      Util.warn('Can not change width of layer. Use \"stage.width(value)\" function instead.');\n    }\n  }, {\n    key: \"getHeight\",\n    value: function getHeight() {\n      if (this.parent) {\n        return this.parent.height();\n      }\n    }\n  }, {\n    key: \"setHeight\",\n    value: function setHeight() {\n      Util.warn('Can not change height of layer. Use \"stage.height(value)\" function instead.');\n    }\n  }, {\n    key: \"batchDraw\",\n    value: function batchDraw() {\n      var _this2 = this;\n\n      if (!this._waitingForDraw) {\n        this._waitingForDraw = true;\n        Util.requestAnimFrame(function () {\n          _this2.draw();\n\n          _this2._waitingForDraw = false;\n        });\n      }\n\n      return this;\n    }\n  }, {\n    key: \"getIntersection\",\n    value: function getIntersection(pos) {\n      if (!this.isListening() || !this.isVisible()) {\n        return null;\n      }\n\n      var spiralSearchDistance = 1;\n      var continueSearch = false;\n\n      while (true) {\n        for (var i = 0; i < INTERSECTION_OFFSETS_LEN; i++) {\n          var intersectionOffset = INTERSECTION_OFFSETS[i];\n\n          var obj = this._getIntersection({\n            x: pos.x + intersectionOffset.x * spiralSearchDistance,\n            y: pos.y + intersectionOffset.y * spiralSearchDistance\n          });\n\n          var shape = obj.shape;\n\n          if (shape) {\n            return shape;\n          }\n\n          continueSearch = !!obj.antialiased;\n\n          if (!obj.antialiased) {\n            break;\n          }\n        }\n\n        if (continueSearch) {\n          spiralSearchDistance += 1;\n        } else {\n          return null;\n        }\n      }\n    }\n  }, {\n    key: \"_getIntersection\",\n    value: function _getIntersection(pos) {\n      var ratio = this.hitCanvas.pixelRatio;\n      var p = this.hitCanvas.context.getImageData(Math.round(pos.x * ratio), Math.round(pos.y * ratio), 1, 1).data;\n      var p3 = p[3];\n\n      if (p3 === 255) {\n        var colorKey = Util._rgbToHex(p[0], p[1], p[2]);\n\n        var shape = shapes[HASH + colorKey];\n\n        if (shape) {\n          return {\n            shape: shape\n          };\n        }\n\n        return {\n          antialiased: true\n        };\n      } else if (p3 > 0) {\n        return {\n          antialiased: true\n        };\n      }\n\n      return {};\n    }\n  }, {\n    key: \"drawScene\",\n    value: function drawScene(can, top) {\n      var layer = this.getLayer(),\n          canvas = can || layer && layer.getCanvas();\n\n      this._fire(BEFORE_DRAW, {\n        node: this\n      });\n\n      if (this.clearBeforeDraw()) {\n        canvas.getContext().clear();\n      }\n\n      Container.prototype.drawScene.call(this, canvas, top);\n\n      this._fire(DRAW, {\n        node: this\n      });\n\n      return this;\n    }\n  }, {\n    key: \"drawHit\",\n    value: function drawHit(can, top) {\n      var layer = this.getLayer(),\n          canvas = can || layer && layer.hitCanvas;\n\n      if (layer && layer.clearBeforeDraw()) {\n        layer.getHitCanvas().getContext().clear();\n      }\n\n      Container.prototype.drawHit.call(this, canvas, top);\n      return this;\n    }\n  }, {\n    key: \"enableHitGraph\",\n    value: function enableHitGraph() {\n      this.hitGraphEnabled(true);\n      return this;\n    }\n  }, {\n    key: \"disableHitGraph\",\n    value: function disableHitGraph() {\n      this.hitGraphEnabled(false);\n      return this;\n    }\n  }, {\n    key: \"setHitGraphEnabled\",\n    value: function setHitGraphEnabled(val) {\n      Util.warn('hitGraphEnabled method is deprecated. Please use layer.listening() instead.');\n      this.listening(val);\n    }\n  }, {\n    key: \"getHitGraphEnabled\",\n    value: function getHitGraphEnabled(val) {\n      Util.warn('hitGraphEnabled method is deprecated. Please use layer.listening() instead.');\n      return this.listening();\n    }\n  }, {\n    key: \"toggleHitCanvas\",\n    value: function toggleHitCanvas() {\n      if (!this.parent || !this.parent['content']) {\n        return;\n      }\n\n      var parent = this.parent;\n      var added = !!this.hitCanvas._canvas.parentNode;\n\n      if (added) {\n        parent.content.removeChild(this.hitCanvas._canvas);\n      } else {\n        parent.content.appendChild(this.hitCanvas._canvas);\n      }\n    }\n  }]);\n\n  return Layer;\n}(Container);\nLayer.prototype.nodeType = 'Layer';\n\n_registerNode(Layer);\n\nFactory.addGetterSetter(Layer, 'imageSmoothingEnabled', true);\nFactory.addGetterSetter(Layer, 'clearBeforeDraw', true);\nFactory.addGetterSetter(Layer, 'hitGraphEnabled', true, getBooleanValidator());","map":{"version":3,"sources":["/Users/pbivrell/light/light/node_modules/konva/lib/Layer.js"],"names":["Util","Container","Node","Factory","SceneCanvas","HitCanvas","getBooleanValidator","shapes","_registerNode","HASH","BEFORE_DRAW","DRAW","INTERSECTION_OFFSETS","x","y","INTERSECTION_OFFSETS_LEN","length","Layer","config","canvas","hitCanvas","pixelRatio","_waitingForDraw","on","_checkVisibility","_setSmoothEnabled","c","_canvas","createPNGStream","getCanvas","getContext","bounds","clear","getHitCanvas","index","stage","getStage","content","removeChild","getNativeCanvasElement","children","insertBefore","appendChild","prototype","moveToTop","call","moved","moveUp","moveDown","moveToBottom","remove","parentNode","_isInDocument","parent","width","height","setSize","child","type","getType","throw","getWidth","getHeight","undefined","_toKonvaCanvas","visible","style","display","_context","imageSmoothingEnabled","warn","requestAnimFrame","draw","pos","isListening","isVisible","spiralSearchDistance","continueSearch","i","intersectionOffset","obj","_getIntersection","shape","antialiased","ratio","p","context","getImageData","Math","round","data","p3","colorKey","_rgbToHex","can","top","layer","getLayer","_fire","node","clearBeforeDraw","drawScene","drawHit","hitGraphEnabled","val","listening","added","nodeType","addGetterSetter"],"mappings":"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","sourcesContent":["import { Util } from './Util.js';\nimport { Container } from './Container.js';\nimport { Node } from './Node.js';\nimport { Factory } from './Factory.js';\nimport { SceneCanvas, HitCanvas } from './Canvas.js';\nimport { getBooleanValidator } from './Validators.js';\nimport { shapes } from './Shape.js';\nimport { _registerNode } from './Global.js';\nvar HASH = '#', BEFORE_DRAW = 'beforeDraw', DRAW = 'draw', INTERSECTION_OFFSETS = [\n    { x: 0, y: 0 },\n    { x: -1, y: -1 },\n    { x: 1, y: -1 },\n    { x: 1, y: 1 },\n    { x: -1, y: 1 },\n], INTERSECTION_OFFSETS_LEN = INTERSECTION_OFFSETS.length;\nexport class Layer extends Container {\n    constructor(config) {\n        super(config);\n        this.canvas = new SceneCanvas();\n        this.hitCanvas = new HitCanvas({\n            pixelRatio: 1,\n        });\n        this._waitingForDraw = false;\n        this.on('visibleChange.konva', this._checkVisibility);\n        this._checkVisibility();\n        this.on('imageSmoothingEnabledChange.konva', this._setSmoothEnabled);\n        this._setSmoothEnabled();\n    }\n    createPNGStream() {\n        const c = this.canvas._canvas;\n        return c.createPNGStream();\n    }\n    getCanvas() {\n        return this.canvas;\n    }\n    getNativeCanvasElement() {\n        return this.canvas._canvas;\n    }\n    getHitCanvas() {\n        return this.hitCanvas;\n    }\n    getContext() {\n        return this.getCanvas().getContext();\n    }\n    clear(bounds) {\n        this.getContext().clear(bounds);\n        this.getHitCanvas().getContext().clear(bounds);\n        return this;\n    }\n    setZIndex(index) {\n        super.setZIndex(index);\n        var stage = this.getStage();\n        if (stage && stage.content) {\n            stage.content.removeChild(this.getNativeCanvasElement());\n            if (index < stage.children.length - 1) {\n                stage.content.insertBefore(this.getNativeCanvasElement(), stage.children[index + 1].getCanvas()._canvas);\n            }\n            else {\n                stage.content.appendChild(this.getNativeCanvasElement());\n            }\n        }\n        return this;\n    }\n    moveToTop() {\n        Node.prototype.moveToTop.call(this);\n        var stage = this.getStage();\n        if (stage && stage.content) {\n            stage.content.removeChild(this.getNativeCanvasElement());\n            stage.content.appendChild(this.getNativeCanvasElement());\n        }\n        return true;\n    }\n    moveUp() {\n        var moved = Node.prototype.moveUp.call(this);\n        if (!moved) {\n            return false;\n        }\n        var stage = this.getStage();\n        if (!stage || !stage.content) {\n            return false;\n        }\n        stage.content.removeChild(this.getNativeCanvasElement());\n        if (this.index < stage.children.length - 1) {\n            stage.content.insertBefore(this.getNativeCanvasElement(), stage.children[this.index + 1].getCanvas()._canvas);\n        }\n        else {\n            stage.content.appendChild(this.getNativeCanvasElement());\n        }\n        return true;\n    }\n    moveDown() {\n        if (Node.prototype.moveDown.call(this)) {\n            var stage = this.getStage();\n            if (stage) {\n                var children = stage.children;\n                if (stage.content) {\n                    stage.content.removeChild(this.getNativeCanvasElement());\n                    stage.content.insertBefore(this.getNativeCanvasElement(), children[this.index + 1].getCanvas()._canvas);\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    moveToBottom() {\n        if (Node.prototype.moveToBottom.call(this)) {\n            var stage = this.getStage();\n            if (stage) {\n                var children = stage.children;\n                if (stage.content) {\n                    stage.content.removeChild(this.getNativeCanvasElement());\n                    stage.content.insertBefore(this.getNativeCanvasElement(), children[1].getCanvas()._canvas);\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    getLayer() {\n        return this;\n    }\n    remove() {\n        var _canvas = this.getNativeCanvasElement();\n        Node.prototype.remove.call(this);\n        if (_canvas && _canvas.parentNode && Util._isInDocument(_canvas)) {\n            _canvas.parentNode.removeChild(_canvas);\n        }\n        return this;\n    }\n    getStage() {\n        return this.parent;\n    }\n    setSize({ width, height }) {\n        this.canvas.setSize(width, height);\n        this.hitCanvas.setSize(width, height);\n        this._setSmoothEnabled();\n        return this;\n    }\n    _validateAdd(child) {\n        var type = child.getType();\n        if (type !== 'Group' && type !== 'Shape') {\n            Util.throw('You may only add groups and shapes to a layer.');\n        }\n    }\n    _toKonvaCanvas(config) {\n        config = config || {};\n        config.width = config.width || this.getWidth();\n        config.height = config.height || this.getHeight();\n        config.x = config.x !== undefined ? config.x : this.x();\n        config.y = config.y !== undefined ? config.y : this.y();\n        return Node.prototype._toKonvaCanvas.call(this, config);\n    }\n    _checkVisibility() {\n        const visible = this.visible();\n        if (visible) {\n            this.canvas._canvas.style.display = 'block';\n        }\n        else {\n            this.canvas._canvas.style.display = 'none';\n        }\n    }\n    _setSmoothEnabled() {\n        this.getContext()._context.imageSmoothingEnabled =\n            this.imageSmoothingEnabled();\n    }\n    getWidth() {\n        if (this.parent) {\n            return this.parent.width();\n        }\n    }\n    setWidth() {\n        Util.warn('Can not change width of layer. Use \"stage.width(value)\" function instead.');\n    }\n    getHeight() {\n        if (this.parent) {\n            return this.parent.height();\n        }\n    }\n    setHeight() {\n        Util.warn('Can not change height of layer. Use \"stage.height(value)\" function instead.');\n    }\n    batchDraw() {\n        if (!this._waitingForDraw) {\n            this._waitingForDraw = true;\n            Util.requestAnimFrame(() => {\n                this.draw();\n                this._waitingForDraw = false;\n            });\n        }\n        return this;\n    }\n    getIntersection(pos) {\n        if (!this.isListening() || !this.isVisible()) {\n            return null;\n        }\n        var spiralSearchDistance = 1;\n        var continueSearch = false;\n        while (true) {\n            for (let i = 0; i < INTERSECTION_OFFSETS_LEN; i++) {\n                const intersectionOffset = INTERSECTION_OFFSETS[i];\n                const obj = this._getIntersection({\n                    x: pos.x + intersectionOffset.x * spiralSearchDistance,\n                    y: pos.y + intersectionOffset.y * spiralSearchDistance,\n                });\n                const shape = obj.shape;\n                if (shape) {\n                    return shape;\n                }\n                continueSearch = !!obj.antialiased;\n                if (!obj.antialiased) {\n                    break;\n                }\n            }\n            if (continueSearch) {\n                spiralSearchDistance += 1;\n            }\n            else {\n                return null;\n            }\n        }\n    }\n    _getIntersection(pos) {\n        const ratio = this.hitCanvas.pixelRatio;\n        const p = this.hitCanvas.context.getImageData(Math.round(pos.x * ratio), Math.round(pos.y * ratio), 1, 1).data;\n        const p3 = p[3];\n        if (p3 === 255) {\n            const colorKey = Util._rgbToHex(p[0], p[1], p[2]);\n            const shape = shapes[HASH + colorKey];\n            if (shape) {\n                return {\n                    shape: shape,\n                };\n            }\n            return {\n                antialiased: true,\n            };\n        }\n        else if (p3 > 0) {\n            return {\n                antialiased: true,\n            };\n        }\n        return {};\n    }\n    drawScene(can, top) {\n        var layer = this.getLayer(), canvas = can || (layer && layer.getCanvas());\n        this._fire(BEFORE_DRAW, {\n            node: this,\n        });\n        if (this.clearBeforeDraw()) {\n            canvas.getContext().clear();\n        }\n        Container.prototype.drawScene.call(this, canvas, top);\n        this._fire(DRAW, {\n            node: this,\n        });\n        return this;\n    }\n    drawHit(can, top) {\n        var layer = this.getLayer(), canvas = can || (layer && layer.hitCanvas);\n        if (layer && layer.clearBeforeDraw()) {\n            layer.getHitCanvas().getContext().clear();\n        }\n        Container.prototype.drawHit.call(this, canvas, top);\n        return this;\n    }\n    enableHitGraph() {\n        this.hitGraphEnabled(true);\n        return this;\n    }\n    disableHitGraph() {\n        this.hitGraphEnabled(false);\n        return this;\n    }\n    setHitGraphEnabled(val) {\n        Util.warn('hitGraphEnabled method is deprecated. Please use layer.listening() instead.');\n        this.listening(val);\n    }\n    getHitGraphEnabled(val) {\n        Util.warn('hitGraphEnabled method is deprecated. Please use layer.listening() instead.');\n        return this.listening();\n    }\n    toggleHitCanvas() {\n        if (!this.parent || !this.parent['content']) {\n            return;\n        }\n        var parent = this.parent;\n        var added = !!this.hitCanvas._canvas.parentNode;\n        if (added) {\n            parent.content.removeChild(this.hitCanvas._canvas);\n        }\n        else {\n            parent.content.appendChild(this.hitCanvas._canvas);\n        }\n    }\n}\nLayer.prototype.nodeType = 'Layer';\n_registerNode(Layer);\nFactory.addGetterSetter(Layer, 'imageSmoothingEnabled', true);\nFactory.addGetterSetter(Layer, 'clearBeforeDraw', true);\nFactory.addGetterSetter(Layer, 'hitGraphEnabled', true, getBooleanValidator());\n"]},"metadata":{},"sourceType":"module"}