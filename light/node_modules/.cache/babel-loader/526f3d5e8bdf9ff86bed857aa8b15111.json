{"ast":null,"code":"var _jsxFileName = \"/Users/pbivrell/light/light/src/components/Picker2.js\",\n    _s = $RefreshSig$();\n\nimport './Picker2.css';\nimport React, { useState } from \"react\";\nimport { HuePicker, AlphaPicker } from 'react-color';\nimport bulb from '../res/Bulb_crop.png';\nimport offbulb from '../res/OffBulb_crop.png';\nimport disconnectedbulb from '../res/DisconnectedBulb_crop.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Picker2(_ref) {\n  _s();\n\n  let {\n    name,\n    light,\n    initalState\n  } = _ref;\n  const [bulbState, setBulbState] = useState(initalState);\n  const [color, setColor] = useState({\n    hsl: {\n      a: 1\n    },\n    rgb: {},\n    hex: \"\"\n  });\n\n  function pushLight() {}\n\n  function toggleBulb() {\n    if (bulbState == 2) {\n      return;\n    } else if (bulbState == 1) {\n      setBulbState(0);\n    } else {\n      setBulbState(1);\n    }\n\n    pushLight(name.id, color.rgb, bulbState);\n  }\n\n  function onColorChange(hue, c) {\n    console.log(c);\n    let hsl = c.hsl;\n\n    if (!hue) {\n      hsl.a = color.hsl.a;\n    }\n\n    setColor({\n      hsl: hsl,\n      rgb: c.rgb,\n      hex: `rgba(${c.rgb.r},${c.rgb.g},${c.rgb.b},${hsl.a}`\n    });\n    pushLight();\n  }\n\n  function generateBinary(color, pixels) {\n    let data = new Uint8Array((2 + pixels) * 8);\n    let bytes = getInt64Bytes(pixels);\n    let count = bytes[bytes.length - 2] << 8 | bytes[bytes.length - 1];\n    data[0] = 0x3;\n    data[1] = bytes[bytes.length - 1];\n    data[2] = bytes[bytes.length - 2];\n\n    for (let i = 0; i < pixels; i++) {\n      let bytes = getInt64Bytes(i);\n      data[(i + 1) * 8] = 0x1;\n      data[(i + 1) * 8 + 1] = color.r;\n      data[(i + 1) * 8 + 2] = color.g;\n      data[(i + 1) * 8 + 3] = color.b;\n      data[(i + 1) * 8 + 4] = bytes[bytes.length - 1];\n      data[(i + 1) * 8 + 5] = bytes[bytes.length - 2];\n    }\n\n    data[8 + pixels * 8] = 0x2;\n    data[8 + pixels * 8 + 1] = 200;\n    data[8 + pixels * 8 + 2] = 0;\n    data[8 + pixels * 8 + 3] = 0;\n    data[8 + pixels * 8 + 4] = 0;\n    console.log(data);\n    return data;\n  }\n\n  function getInt64Bytes(x) {\n    let y = Math.floor(x / 2 ** 32);\n    return [y, y << 8, y << 16, y << 24, x, x << 8, x << 16, x << 24].map(z => z >>> 24);\n  }\n\n  function getToolTip() {\n    if (!light || Object.keys(light).length === 0) {\n      return \"\";\n    }\n\n    return `ID: ${light.ID}\nIP: ${light.IP}\nVersion: ${light.Version}\n${new Date(light.Updated).toLocaleDateString() + \" \" + new Date(light.Updated).toLocaleTimeString()}`;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Picker\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ButtonText\",\n      \"data-tooltip\": getToolTip(),\n      children: name.alias\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Button\",\n      style: {\n        background: color.hex\n      },\n      onClick: toggleBulb,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"ButtonImage\",\n        src: bulbState === 0 ? bulb : bulbState === 1 ? offbulb : disconnectedbulb\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 4\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 3\n    }, this), bulbState === 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(HuePicker, {\n        className: \"ButtonImage\",\n        color: color.hsl,\n        onChangeComplete: c => onColorChange(false, c)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(AlphaPicker, {\n        className: \"ButtonImage\",\n        color: color.hsl,\n        onChangeComplete: c => onColorChange(true, c)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 2\n  }, this);\n}\n\n_s(Picker2, \"prXDaQnT51EeX6Q8bZsc8QT3Wyc=\");\n\n_c = Picker2;\nexport default Picker2;\n\nvar _c;\n\n$RefreshReg$(_c, \"Picker2\");","map":{"version":3,"sources":["/Users/pbivrell/light/light/src/components/Picker2.js"],"names":["React","useState","HuePicker","AlphaPicker","bulb","offbulb","disconnectedbulb","Picker2","name","light","initalState","bulbState","setBulbState","color","setColor","hsl","a","rgb","hex","pushLight","toggleBulb","id","onColorChange","hue","c","console","log","r","g","b","generateBinary","pixels","data","Uint8Array","bytes","getInt64Bytes","count","length","i","x","y","Math","floor","map","z","getToolTip","Object","keys","ID","IP","Version","Date","Updated","toLocaleDateString","toLocaleTimeString","alias","background"],"mappings":";;;AAAA,OAAO,eAAP;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,EAAoBC,WAApB,QAAuC,aAAvC;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,gBAAP,MAA6B,kCAA7B;;;;AAGA,SAASC,OAAT,OAA6C;AAAA;;AAAA,MAA5B;AAACC,IAAAA,IAAD;AAAOC,IAAAA,KAAP;AAAcC,IAAAA;AAAd,GAA4B;AAE5C,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAACS,WAAD,CAA1C;AAEE,QAAM,CAACG,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC;AAAEc,IAAAA,GAAG,EAAE;AAACC,MAAAA,CAAC,EAAE;AAAJ,KAAP;AAAeC,IAAAA,GAAG,EAAE,EAApB;AAAwBC,IAAAA,GAAG,EAAE;AAA7B,GAAD,CAAlC;;AAEF,WAASC,SAAT,GAAqB,CAEpB;;AAED,WAASC,UAAT,GAAsB;AACrB,QAAIT,SAAS,IAAI,CAAjB,EAAoB;AACnB;AACA,KAFD,MAEM,IAAGA,SAAS,IAAI,CAAhB,EAAmB;AACxBC,MAAAA,YAAY,CAAC,CAAD,CAAZ;AACA,KAFK,MAEA;AACLA,MAAAA,YAAY,CAAC,CAAD,CAAZ;AACA;;AAEDO,IAAAA,SAAS,CAACX,IAAI,CAACa,EAAN,EAAUR,KAAK,CAACI,GAAhB,EAAqBN,SAArB,CAAT;AACA;;AAED,WAASW,aAAT,CAAuBC,GAAvB,EAA4BC,CAA5B,EAA+B;AAE9BC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AAEA,QAAIT,GAAG,GAAGS,CAAC,CAACT,GAAZ;;AAEA,QAAG,CAACQ,GAAJ,EAAS;AACRR,MAAAA,GAAG,CAACC,CAAJ,GAAQH,KAAK,CAACE,GAAN,CAAUC,CAAlB;AACA;;AACDF,IAAAA,QAAQ,CAAC;AAACC,MAAAA,GAAG,EAAEA,GAAN;AAAWE,MAAAA,GAAG,EAAEO,CAAC,CAACP,GAAlB;AAAuBC,MAAAA,GAAG,EAAG,QAAOM,CAAC,CAACP,GAAF,CAAMU,CAAE,IAAGH,CAAC,CAACP,GAAF,CAAMW,CAAE,IAAGJ,CAAC,CAACP,GAAF,CAAMY,CAAE,IAAGd,GAAG,CAACC,CAAE;AAA3E,KAAD,CAAR;AAEAG,IAAAA,SAAS;AACT;;AAGD,WAASW,cAAT,CAAwBjB,KAAxB,EAA+BkB,MAA/B,EAAuC;AAEtC,QAAIC,IAAI,GAAG,IAAIC,UAAJ,CAAe,CAAC,IAAIF,MAAL,IAAe,CAA9B,CAAX;AACA,QAAIG,KAAK,GAAGC,aAAa,CAACJ,MAAD,CAAzB;AAEA,QAAIK,KAAK,GAAIF,KAAK,CAACA,KAAK,CAACG,MAAN,GAAa,CAAd,CAAL,IAAyB,CAA1B,GAA+BH,KAAK,CAACA,KAAK,CAACG,MAAN,GAAa,CAAd,CAAhD;AAEAL,IAAAA,IAAI,CAAC,CAAD,CAAJ,GAAU,GAAV;AACAA,IAAAA,IAAI,CAAC,CAAD,CAAJ,GAAUE,KAAK,CAACA,KAAK,CAACG,MAAN,GAAa,CAAd,CAAf;AACAL,IAAAA,IAAI,CAAC,CAAD,CAAJ,GAAUE,KAAK,CAACA,KAAK,CAACG,MAAN,GAAa,CAAd,CAAf;;AAEA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGP,MAApB,EAA4BO,CAAC,EAA7B,EAAiC;AAChC,UAAIJ,KAAK,GAAGC,aAAa,CAACG,CAAD,CAAzB;AACCN,MAAAA,IAAI,CAAC,CAACM,CAAC,GAAG,CAAL,IAAU,CAAX,CAAJ,GAAoB,GAApB;AACDN,MAAAA,IAAI,CAAC,CAACM,CAAC,GAAG,CAAL,IAAU,CAAV,GAAc,CAAf,CAAJ,GAAwBzB,KAAK,CAACc,CAA9B;AACAK,MAAAA,IAAI,CAAC,CAACM,CAAC,GAAG,CAAL,IAAU,CAAV,GAAc,CAAf,CAAJ,GAAwBzB,KAAK,CAACe,CAA9B;AACAI,MAAAA,IAAI,CAAC,CAACM,CAAC,GAAG,CAAL,IAAU,CAAV,GAAc,CAAf,CAAJ,GAAwBzB,KAAK,CAACgB,CAA9B;AACAG,MAAAA,IAAI,CAAC,CAACM,CAAC,GAAG,CAAL,IAAU,CAAV,GAAc,CAAf,CAAJ,GAAwBJ,KAAK,CAACA,KAAK,CAACG,MAAN,GAAa,CAAd,CAA7B;AACAL,MAAAA,IAAI,CAAC,CAACM,CAAC,GAAG,CAAL,IAAU,CAAV,GAAc,CAAf,CAAJ,GAAwBJ,KAAK,CAACA,KAAK,CAACG,MAAN,GAAa,CAAd,CAA7B;AACA;;AAEDL,IAAAA,IAAI,CAAC,IAAKD,MAAM,GAAG,CAAf,CAAJ,GAAyB,GAAzB;AACAC,IAAAA,IAAI,CAAC,IAAKD,MAAM,GAAG,CAAd,GAAmB,CAApB,CAAJ,GAA6B,GAA7B;AACAC,IAAAA,IAAI,CAAC,IAAKD,MAAM,GAAG,CAAd,GAAmB,CAApB,CAAJ,GAA6B,CAA7B;AACAC,IAAAA,IAAI,CAAC,IAAKD,MAAM,GAAG,CAAd,GAAmB,CAApB,CAAJ,GAA6B,CAA7B;AACAC,IAAAA,IAAI,CAAC,IAAKD,MAAM,GAAG,CAAd,GAAmB,CAApB,CAAJ,GAA6B,CAA7B;AAGAN,IAAAA,OAAO,CAACC,GAAR,CAAYM,IAAZ;AACA,WAAOA,IAAP;AAEA;;AAED,WAASG,aAAT,CAAuBI,CAAvB,EAA0B;AACvB,QAAIC,CAAC,GAAEC,IAAI,CAACC,KAAL,CAAWH,CAAC,GAAC,KAAG,EAAhB,CAAP;AACA,WAAO,CAACC,CAAD,EAAIA,CAAC,IAAE,CAAP,EAAWA,CAAC,IAAE,EAAd,EAAmBA,CAAC,IAAE,EAAtB,EAA2BD,CAA3B,EAA8BA,CAAC,IAAE,CAAjC,EAAqCA,CAAC,IAAE,EAAxC,EAA6CA,CAAC,IAAE,EAAhD,EAAqDI,GAArD,CAAyDC,CAAC,IAAGA,CAAC,KAAG,EAAjE,CAAP;AACF;;AAED,WAASC,UAAT,GAAsB;AACrB,QAAI,CAACpC,KAAD,IAAUqC,MAAM,CAACC,IAAP,CAAYtC,KAAZ,EAAmB4B,MAAnB,KAA8B,CAA5C,EAA+C;AAC9C,aAAO,EAAP;AACA;;AACD,WAAQ,OAAM5B,KAAK,CAACuC,EAAG;AACzB,MAAMvC,KAAK,CAACwC,EAAG;AACf,WAAWxC,KAAK,CAACyC,OAAQ;AACzB,EAAE,IAAIC,IAAJ,CAAS1C,KAAK,CAAC2C,OAAf,EAAwBC,kBAAxB,KAA8C,GAA9C,GAAqD,IAAIF,IAAJ,CAAS1C,KAAK,CAAC2C,OAAf,EAAwBE,kBAAxB,EAA6C,EAHlG;AAIA;;AAED,sBACA;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA,4BAEC;AAAK,MAAA,SAAS,EAAC,YAAf;AAA4B,sBAAcT,UAAU,EAApD;AAAA,gBAAyDrC,IAAI,CAAC+C;AAA9D;AAAA;AAAA;AAAA;AAAA,YAFD,eAGC;AAAK,MAAA,SAAS,EAAC,QAAf;AAAwB,MAAA,KAAK,EAAE;AAACC,QAAAA,UAAU,EAAE3C,KAAK,CAACK;AAAnB,OAA/B;AAAwD,MAAA,OAAO,EAAEE,UAAjE;AAAA,6BACC;AAAK,QAAA,SAAS,EAAC,aAAf;AAA6B,QAAA,GAAG,EAAET,SAAS,KAAK,CAAd,GAAkBP,IAAlB,GAAyBO,SAAS,KAAK,CAAd,GAAkBN,OAAlB,GAA4BC;AAAvF;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,YAHD,EAMGK,SAAS,KAAK,CAAd,gBACD;AAAA,8BACC;AAAA;AAAA;AAAA;AAAA,cADD,eAEC,QAAC,SAAD;AAAW,QAAA,SAAS,EAAC,aAArB;AAAmC,QAAA,KAAK,EAAEE,KAAK,CAACE,GAAhD;AAAqD,QAAA,gBAAgB,EAAGS,CAAD,IAAOF,aAAa,CAAC,KAAD,EAAQE,CAAR;AAA3F;AAAA;AAAA;AAAA;AAAA,cAFD,eAGC;AAAA;AAAA;AAAA;AAAA,cAHD,eAIe,QAAC,WAAD;AAAa,QAAA,SAAS,EAAC,aAAvB;AAAqC,QAAA,KAAK,EAAEX,KAAK,CAACE,GAAlD;AAAuD,QAAA,gBAAgB,EAAGS,CAAD,IAAOF,aAAa,CAAC,IAAD,EAAOE,CAAP;AAA7F;AAAA;AAAA;AAAA;AAAA,cAJf;AAAA,oBADC,gBAQD,qCAdF;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AAmBA;;GAxGQjB,O;;KAAAA,O;AA2GT,eAAeA,OAAf","sourcesContent":["import './Picker2.css';\nimport React, { useState } from \"react\";\nimport { HuePicker, AlphaPicker } from 'react-color'\nimport bulb from '../res/Bulb_crop.png';\nimport offbulb from '../res/OffBulb_crop.png';\nimport disconnectedbulb from '../res/DisconnectedBulb_crop.png';\n\n\nfunction Picker2({name, light, initalState}) {\n\n\tconst [bulbState, setBulbState] = useState(initalState);\n\n  \tconst [color, setColor] = useState({ hsl: {a: 1}, rgb: {}, hex: \"\"});\n\n\tfunction pushLight() {\n\t\t\n\t}\n\n\tfunction toggleBulb() {\n\t\tif (bulbState == 2) {\n\t\t\treturn;\n\t\t}else if(bulbState == 1) {\n\t\t\tsetBulbState(0);\n\t\t}else {\n\t\t\tsetBulbState(1);\n\t\t}\n\n\t\tpushLight(name.id, color.rgb, bulbState);\n\t}\n\n\tfunction onColorChange(hue, c) {\n\n\t\tconsole.log(c);\n\n\t\tlet hsl = c.hsl;\n\n\t\tif(!hue) {\n\t\t\thsl.a = color.hsl.a;\n\t\t}\n\t\tsetColor({hsl: hsl, rgb: c.rgb, hex: `rgba(${c.rgb.r},${c.rgb.g},${c.rgb.b},${hsl.a}`});\n\t\t\n\t\tpushLight();\n\t}\n\t\n\t\n\tfunction generateBinary(color, pixels) {\n\t\t\n\t\tlet data = new Uint8Array((2 + pixels) * 8);\n\t\tlet bytes = getInt64Bytes(pixels);\n\n\t\tlet count = (bytes[bytes.length-2] << 8) | bytes[bytes.length-1];\n\t\t\n\t\tdata[0] = 0x3;\n\t\tdata[1] = bytes[bytes.length-1];\n\t\tdata[2] = bytes[bytes.length-2];\n\n\t\tfor (let i = 0; i < pixels; i++) {\n\t\t\tlet bytes = getInt64Bytes(i);\n\t\t \tdata[(i + 1) * 8] = 0x1;\n\t\t\tdata[(i + 1) * 8 + 1] = color.r;\n\t\t\tdata[(i + 1) * 8 + 2] = color.g;\n\t\t\tdata[(i + 1) * 8 + 3] = color.b;\n\t\t\tdata[(i + 1) * 8 + 4] = bytes[bytes.length-1];\n\t\t\tdata[(i + 1) * 8 + 5] = bytes[bytes.length-2];\n\t\t}\n\n\t\tdata[8 + (pixels * 8)] = 0x2;\n\t\tdata[8 + (pixels * 8) + 1] = 200;\n\t\tdata[8 + (pixels * 8) + 2] = 0;\n\t\tdata[8 + (pixels * 8) + 3] = 0;\n\t\tdata[8 + (pixels * 8) + 4] = 0;\n\n\n\t\tconsole.log(data);\n\t\treturn data;\n\n\t}\n\n\tfunction getInt64Bytes(x) {\n  \t\tlet y= Math.floor(x/2**32);\n  \t\treturn [y,(y<<8),(y<<16),(y<<24), x,(x<<8),(x<<16),(x<<24)].map(z=> z>>>24)\n\t}\n\n\tfunction getToolTip() {\n\t\tif (!light || Object.keys(light).length === 0) {\n\t\t\treturn \"\"\n\t\t}\n\t\treturn `ID: ${light.ID}\nIP: ${light.IP}\nVersion: ${light.Version}\n${new Date(light.Updated).toLocaleDateString() +\" \" +  new Date(light.Updated).toLocaleTimeString()}`\n\t}\n\n\treturn (\n\t<div className=\"Picker\">\n\n\t\t<div className=\"ButtonText\" data-tooltip={getToolTip()}>{name.alias}</div>\n\t\t<div className=\"Button\" style={{background: color.hex}} onClick={toggleBulb}>\n\t\t\t<img className=\"ButtonImage\" src={bulbState === 0 ? bulb : bulbState === 1 ? offbulb : disconnectedbulb }></img>\n\t\t</div>\n\t\t{ bulbState === 0 ? \n\t\t\t<>\n\t\t\t\t<br/>\n\t\t\t\t<HuePicker className=\"ButtonImage\" color={color.hsl} onChangeComplete={(c) => onColorChange(false, c)}/>\n\t\t\t\t<br/>\n                \t\t<AlphaPicker className=\"ButtonImage\" color={color.hsl} onChangeComplete={(c) => onColorChange(true, c)}/>\n\t\t\t</>\n\t\t: \n\t\t\t<></>\n\t\t}\n\t</div>\n  \t);\n}\n\n\nexport default Picker2;\n"]},"metadata":{},"sourceType":"module"}