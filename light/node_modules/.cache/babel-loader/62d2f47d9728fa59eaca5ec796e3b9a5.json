{"ast":null,"code":"import _classCallCheck from \"/Users/pbivrell/light/light/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/pbivrell/light/light/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/pbivrell/light/light/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/pbivrell/light/light/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { Factory } from '../Factory.js';\nimport { Shape } from '../Shape.js';\nimport { getNumberValidator } from '../Validators.js';\nimport { _registerNode } from '../Global.js';\nexport var Circle = /*#__PURE__*/function (_Shape) {\n  _inherits(Circle, _Shape);\n\n  var _super = _createSuper(Circle);\n\n  function Circle() {\n    _classCallCheck(this, Circle);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Circle, [{\n    key: \"_sceneFunc\",\n    value: function _sceneFunc(context) {\n      context.beginPath();\n      context.arc(0, 0, this.attrs.radius || 0, 0, Math.PI * 2, false);\n      context.closePath();\n      context.fillStrokeShape(this);\n    }\n  }, {\n    key: \"getWidth\",\n    value: function getWidth() {\n      return this.radius() * 2;\n    }\n  }, {\n    key: \"getHeight\",\n    value: function getHeight() {\n      return this.radius() * 2;\n    }\n  }, {\n    key: \"setWidth\",\n    value: function setWidth(width) {\n      if (this.radius() !== width / 2) {\n        this.radius(width / 2);\n      }\n    }\n  }, {\n    key: \"setHeight\",\n    value: function setHeight(height) {\n      if (this.radius() !== height / 2) {\n        this.radius(height / 2);\n      }\n    }\n  }]);\n\n  return Circle;\n}(Shape);\nCircle.prototype._centroid = true;\nCircle.prototype.className = 'Circle';\nCircle.prototype._attrsAffectingSize = ['radius'];\n\n_registerNode(Circle);\n\nFactory.addGetterSetter(Circle, 'radius', 0, getNumberValidator());","map":{"version":3,"sources":["/Users/pbivrell/light/light/node_modules/konva/lib/shapes/Circle.js"],"names":["Factory","Shape","getNumberValidator","_registerNode","Circle","context","beginPath","arc","attrs","radius","Math","PI","closePath","fillStrokeShape","width","height","prototype","_centroid","className","_attrsAffectingSize","addGetterSetter"],"mappings":";;;;AAAA,SAASA,OAAT,QAAwB,eAAxB;AACA,SAASC,KAAT,QAAsB,aAAtB;AACA,SAASC,kBAAT,QAAmC,kBAAnC;AACA,SAASC,aAAT,QAA8B,cAA9B;AACA,WAAaC,MAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,WACI,oBAAWC,OAAX,EAAoB;AAChBA,MAAAA,OAAO,CAACC,SAAR;AACAD,MAAAA,OAAO,CAACE,GAAR,CAAY,CAAZ,EAAe,CAAf,EAAkB,KAAKC,KAAL,CAAWC,MAAX,IAAqB,CAAvC,EAA0C,CAA1C,EAA6CC,IAAI,CAACC,EAAL,GAAU,CAAvD,EAA0D,KAA1D;AACAN,MAAAA,OAAO,CAACO,SAAR;AACAP,MAAAA,OAAO,CAACQ,eAAR,CAAwB,IAAxB;AACH;AANL;AAAA;AAAA,WAOI,oBAAW;AACP,aAAO,KAAKJ,MAAL,KAAgB,CAAvB;AACH;AATL;AAAA;AAAA,WAUI,qBAAY;AACR,aAAO,KAAKA,MAAL,KAAgB,CAAvB;AACH;AAZL;AAAA;AAAA,WAaI,kBAASK,KAAT,EAAgB;AACZ,UAAI,KAAKL,MAAL,OAAkBK,KAAK,GAAG,CAA9B,EAAiC;AAC7B,aAAKL,MAAL,CAAYK,KAAK,GAAG,CAApB;AACH;AACJ;AAjBL;AAAA;AAAA,WAkBI,mBAAUC,MAAV,EAAkB;AACd,UAAI,KAAKN,MAAL,OAAkBM,MAAM,GAAG,CAA/B,EAAkC;AAC9B,aAAKN,MAAL,CAAYM,MAAM,GAAG,CAArB;AACH;AACJ;AAtBL;;AAAA;AAAA,EAA4Bd,KAA5B;AAwBAG,MAAM,CAACY,SAAP,CAAiBC,SAAjB,GAA6B,IAA7B;AACAb,MAAM,CAACY,SAAP,CAAiBE,SAAjB,GAA6B,QAA7B;AACAd,MAAM,CAACY,SAAP,CAAiBG,mBAAjB,GAAuC,CAAC,QAAD,CAAvC;;AACAhB,aAAa,CAACC,MAAD,CAAb;;AACAJ,OAAO,CAACoB,eAAR,CAAwBhB,MAAxB,EAAgC,QAAhC,EAA0C,CAA1C,EAA6CF,kBAAkB,EAA/D","sourcesContent":["import { Factory } from '../Factory.js';\nimport { Shape } from '../Shape.js';\nimport { getNumberValidator } from '../Validators.js';\nimport { _registerNode } from '../Global.js';\nexport class Circle extends Shape {\n    _sceneFunc(context) {\n        context.beginPath();\n        context.arc(0, 0, this.attrs.radius || 0, 0, Math.PI * 2, false);\n        context.closePath();\n        context.fillStrokeShape(this);\n    }\n    getWidth() {\n        return this.radius() * 2;\n    }\n    getHeight() {\n        return this.radius() * 2;\n    }\n    setWidth(width) {\n        if (this.radius() !== width / 2) {\n            this.radius(width / 2);\n        }\n    }\n    setHeight(height) {\n        if (this.radius() !== height / 2) {\n            this.radius(height / 2);\n        }\n    }\n}\nCircle.prototype._centroid = true;\nCircle.prototype.className = 'Circle';\nCircle.prototype._attrsAffectingSize = ['radius'];\n_registerNode(Circle);\nFactory.addGetterSetter(Circle, 'radius', 0, getNumberValidator());\n"]},"metadata":{},"sourceType":"module"}