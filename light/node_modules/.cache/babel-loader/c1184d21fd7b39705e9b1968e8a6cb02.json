{"ast":null,"code":"var _jsxFileName = \"/Users/pbivrell/light/light/src/containers/light.js\",\n    _s = $RefreshSig$();\n\nimport '../App.css';\nimport Button from \"react-bootstrap/Button\";\nimport React, { useState } from \"react\";\nimport LightsDetect from \"../components/LightDetect\";\nimport LightsIP from \"../components/LightIP\";\nimport { RgbColorPicker } from \"react-colorful\";\nimport axios from \"axios\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Light() {\n  _s();\n\n  const [color, setColor] = useState({\n    r: 200,\n    g: 150,\n    b: 35\n  });\n  const [ip, setIP] = useState({\n    ip: \"192.168.86.150\",\n    pixels: 100\n  });\n  var last = Date.now();\n\n  function onColorChange(color) {\n    let now = Date.now();\n    console.log(color);\n\n    if (now - last < 100) {\n      console.log(\"ignoring time\");\n      return;\n    }\n\n    last = now;\n    axios.get(`http://${ip}/color?r=${color.r}&g=${color.g}&b=${color.b}`).catch(resp => {\n      console.log(\"TODO\");\n    });\n  }\n\n  function generateBinary(color, pixels) {\n    pixels = 1;\n    let data = new Uint8Array((2 + pixels) * 8);\n    let bytes = getInt64Bytes(pixels);\n    let count = bytes[bytes.length - 2] << 8 | bytes[bytes.length - 1];\n    data[0] = 0x3;\n    data[1] = bytes[bytes.length - 1];\n    data[2] = bytes[bytes.length - 2];\n\n    for (let i = 0; i < pixels; i++) {\n      let bytes = getInt64Bytes(i);\n      data[(i + 1) * 8] = 0x1;\n      data[(i + 1) * 8 + 1] = color.r;\n      data[(i + 1) * 8 + 2] = color.g;\n      data[(i + 1) * 8 + 3] = color.b;\n      data[(i + 1) * 8 + 4] = bytes[bytes.length - 1];\n      data[(i + 1) * 8 + 5] = bytes[bytes.length - 2];\n    }\n\n    data[8 + pixels * 8] = 0x2;\n    data[8 + pixels * 8 + 1] = 0x75;\n    data[8 + pixels * 8 + 2] = 0x30;\n    data[8 + pixels * 8 + 3] = 0;\n    data[8 + pixels * 8 + 4] = 0;\n    console.log(data);\n  }\n\n  function getInt64Bytes(x) {\n    let y = Math.floor(x / 2 ** 32);\n    return [y, y << 8, y << 16, y << 24, x, x << 8, x << 16, x << 24].map(z => z >>> 24);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(RgbColorPicker, {\n        color: color,\n        onChange: onColorChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [color.r, \", \", color.g, \", \", color.b]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 3\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 2\n  }, this);\n}\n\n_s(Light, \"/dWvAqx7qpaPtcXysT+xndMt8E8=\");\n\n_c = Light;\nexport default Light;\n\nvar _c;\n\n$RefreshReg$(_c, \"Light\");","map":{"version":3,"sources":["/Users/pbivrell/light/light/src/containers/light.js"],"names":["Button","React","useState","LightsDetect","LightsIP","RgbColorPicker","axios","Spinner","Light","color","setColor","r","g","b","ip","setIP","pixels","last","Date","now","onColorChange","console","log","get","catch","resp","generateBinary","data","Uint8Array","bytes","getInt64Bytes","count","length","i","x","y","Math","floor","map","z"],"mappings":"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","sourcesContent":["import '../App.css';\nimport Button from \"react-bootstrap/Button\";\nimport React, { useState } from \"react\";\nimport LightsDetect from \"../components/LightDetect\";\nimport LightsIP from \"../components/LightIP\";\nimport { RgbColorPicker } from \"react-colorful\";\nimport axios from \"axios\";\nimport Spinner from \"react-bootstrap/Spinner\";\n\nfunction Light () {\n\n  \tconst [color, setColor] = useState({ r: 200, g: 150, b: 35 });\n\tconst [ip, setIP] = useState({ ip: \"192.168.86.150\", pixels: 100 });\n\n\tvar last = Date.now();\n\tfunction onColorChange(color) {\n\n\t\tlet now = Date.now();\n\t\tconsole.log(color);\n\t\tif (now - last < 100) {\n\t\t\tconsole.log(\"ignoring time\");\n\t\t\treturn;\n\t\t}\n\t\tlast = now;\n\n\t\taxios.get(`http://${ip}/color?r=${color.r}&g=${color.g}&b=${color.b}`).catch((resp) => {\n\t\t\tconsole.log(\"TODO\")\n                });\n\t}\n\t\n\t\n\tfunction generateBinary(color, pixels) {\n\t\t\n\t\tpixels = 1;\n\n\t\tlet data = new Uint8Array((2 + pixels) * 8);\n\t\tlet bytes = getInt64Bytes(pixels);\n\n\t\tlet count = (bytes[bytes.length-2] << 8) | bytes[bytes.length-1];\n\t\t\n\t\tdata[0] = 0x3;\n\t\tdata[1] = bytes[bytes.length-1];\n\t\tdata[2] = bytes[bytes.length-2];\n\n\t\tfor (let i = 0; i < pixels; i++) {\n\t\t\tlet bytes = getInt64Bytes(i);\n\t\t \tdata[(i + 1) * 8] = 0x1;\n\t\t\tdata[(i + 1) * 8 + 1] = color.r;\n\t\t\tdata[(i + 1) * 8 + 2] = color.g;\n\t\t\tdata[(i + 1) * 8 + 3] = color.b;\n\t\t\tdata[(i + 1) * 8 + 4] = bytes[bytes.length-1];\n\t\t\tdata[(i + 1) * 8 + 5] = bytes[bytes.length-2];\n\t\t}\n\n\t\tdata[8 + (pixels * 8)] = 0x2;\n\t\tdata[8 + (pixels * 8) + 1] = 0x75;\n\t\tdata[8 + (pixels * 8) + 2] = 0x30;\n\t\tdata[8 + (pixels * 8) + 3] = 0;\n\t\tdata[8 + (pixels * 8) + 4] = 0;\n\n\t\tconsole.log(data);\n\n\t}\n\n\tfunction getInt64Bytes(x) {\n  \t\tlet y= Math.floor(x/2**32);\n  \t\treturn [y,(y<<8),(y<<16),(y<<24), x,(x<<8),(x<<16),(x<<24)].map(z=> z>>>24)\n\t}\n\n\n\n\n\n\treturn (\n\t<div className=\"App\">\n\t\t<header className=\"App-header\">\n            <RgbColorPicker color={color} onChange={onColorChange} />\n            <p>{ color.r}, {color.g}, {color.b}</p>\n\t\t</header>\n\t</div>\n  \t);\n}\n\n\nexport default Light;\n"]},"metadata":{},"sourceType":"module"}