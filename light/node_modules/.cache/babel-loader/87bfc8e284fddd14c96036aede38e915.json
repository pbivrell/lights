{"ast":null,"code":"import _classCallCheck from \"/Users/pbivrell/light/light/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/pbivrell/light/light/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/pbivrell/light/light/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/pbivrell/light/light/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { Factory } from '../Factory.js';\nimport { Shape } from '../Shape.js';\nimport { Group } from '../Group.js';\nimport { getNumberOrArrayOfNumbersValidator, getNumberValidator } from '../Validators.js';\nimport { _registerNode } from '../Global.js';\nvar ATTR_CHANGE_LIST = ['fontFamily', 'fontSize', 'fontStyle', 'padding', 'lineHeight', 'text', 'width', 'height'],\n    CHANGE_KONVA = 'Change.konva',\n    NONE = 'none',\n    UP = 'up',\n    RIGHT = 'right',\n    DOWN = 'down',\n    LEFT = 'left',\n    attrChangeListLen = ATTR_CHANGE_LIST.length;\nexport var Label = /*#__PURE__*/function (_Group) {\n  _inherits(Label, _Group);\n\n  var _super = _createSuper(Label);\n\n  function Label(config) {\n    var _this;\n\n    _classCallCheck(this, Label);\n\n    _this = _super.call(this, config);\n\n    _this.on('add.konva', function (evt) {\n      this._addListeners(evt.child);\n\n      this._sync();\n    });\n\n    return _this;\n  }\n\n  _createClass(Label, [{\n    key: \"getText\",\n    value: function getText() {\n      return this.find('Text')[0];\n    }\n  }, {\n    key: \"getTag\",\n    value: function getTag() {\n      return this.find('Tag')[0];\n    }\n  }, {\n    key: \"_addListeners\",\n    value: function _addListeners(text) {\n      var that = this,\n          n;\n\n      var func = function func() {\n        that._sync();\n      };\n\n      for (n = 0; n < attrChangeListLen; n++) {\n        text.on(ATTR_CHANGE_LIST[n] + CHANGE_KONVA, func);\n      }\n    }\n  }, {\n    key: \"getWidth\",\n    value: function getWidth() {\n      return this.getText().width();\n    }\n  }, {\n    key: \"getHeight\",\n    value: function getHeight() {\n      return this.getText().height();\n    }\n  }, {\n    key: \"_sync\",\n    value: function _sync() {\n      var text = this.getText(),\n          tag = this.getTag(),\n          width,\n          height,\n          pointerDirection,\n          pointerWidth,\n          x,\n          y,\n          pointerHeight;\n\n      if (text && tag) {\n        width = text.width();\n        height = text.height();\n        pointerDirection = tag.pointerDirection();\n        pointerWidth = tag.pointerWidth();\n        pointerHeight = tag.pointerHeight();\n        x = 0;\n        y = 0;\n\n        switch (pointerDirection) {\n          case UP:\n            x = width / 2;\n            y = -1 * pointerHeight;\n            break;\n\n          case RIGHT:\n            x = width + pointerWidth;\n            y = height / 2;\n            break;\n\n          case DOWN:\n            x = width / 2;\n            y = height + pointerHeight;\n            break;\n\n          case LEFT:\n            x = -1 * pointerWidth;\n            y = height / 2;\n            break;\n        }\n\n        tag.setAttrs({\n          x: -1 * x,\n          y: -1 * y,\n          width: width,\n          height: height\n        });\n        text.setAttrs({\n          x: -1 * x,\n          y: -1 * y\n        });\n      }\n    }\n  }]);\n\n  return Label;\n}(Group);\nLabel.prototype.className = 'Label';\n\n_registerNode(Label);\n\nexport var Tag = /*#__PURE__*/function (_Shape) {\n  _inherits(Tag, _Shape);\n\n  var _super2 = _createSuper(Tag);\n\n  function Tag() {\n    _classCallCheck(this, Tag);\n\n    return _super2.apply(this, arguments);\n  }\n\n  _createClass(Tag, [{\n    key: \"_sceneFunc\",\n    value: function _sceneFunc(context) {\n      var width = this.width(),\n          height = this.height(),\n          pointerDirection = this.pointerDirection(),\n          pointerWidth = this.pointerWidth(),\n          pointerHeight = this.pointerHeight(),\n          cornerRadius = this.cornerRadius();\n      var topLeft = 0;\n      var topRight = 0;\n      var bottomLeft = 0;\n      var bottomRight = 0;\n\n      if (typeof cornerRadius === 'number') {\n        topLeft = topRight = bottomLeft = bottomRight = Math.min(cornerRadius, width / 2, height / 2);\n      } else {\n        topLeft = Math.min(cornerRadius[0] || 0, width / 2, height / 2);\n        topRight = Math.min(cornerRadius[1] || 0, width / 2, height / 2);\n        bottomRight = Math.min(cornerRadius[2] || 0, width / 2, height / 2);\n        bottomLeft = Math.min(cornerRadius[3] || 0, width / 2, height / 2);\n      }\n\n      context.beginPath();\n      context.moveTo(topLeft, 0);\n\n      if (pointerDirection === UP) {\n        context.lineTo((width - pointerWidth) / 2, 0);\n        context.lineTo(width / 2, -1 * pointerHeight);\n        context.lineTo((width + pointerWidth) / 2, 0);\n      }\n\n      context.lineTo(width - topRight, 0);\n      context.arc(width - topRight, topRight, topRight, Math.PI * 3 / 2, 0, false);\n\n      if (pointerDirection === RIGHT) {\n        context.lineTo(width, (height - pointerHeight) / 2);\n        context.lineTo(width + pointerWidth, height / 2);\n        context.lineTo(width, (height + pointerHeight) / 2);\n      }\n\n      context.lineTo(width, height - bottomRight);\n      context.arc(width - bottomRight, height - bottomRight, bottomRight, 0, Math.PI / 2, false);\n\n      if (pointerDirection === DOWN) {\n        context.lineTo((width + pointerWidth) / 2, height);\n        context.lineTo(width / 2, height + pointerHeight);\n        context.lineTo((width - pointerWidth) / 2, height);\n      }\n\n      context.lineTo(bottomLeft, height);\n      context.arc(bottomLeft, height - bottomLeft, bottomLeft, Math.PI / 2, Math.PI, false);\n\n      if (pointerDirection === LEFT) {\n        context.lineTo(0, (height + pointerHeight) / 2);\n        context.lineTo(-1 * pointerWidth, height / 2);\n        context.lineTo(0, (height - pointerHeight) / 2);\n      }\n\n      context.lineTo(0, topLeft);\n      context.arc(topLeft, topLeft, topLeft, Math.PI, Math.PI * 3 / 2, false);\n      context.closePath();\n      context.fillStrokeShape(this);\n    }\n  }, {\n    key: \"getSelfRect\",\n    value: function getSelfRect() {\n      var x = 0,\n          y = 0,\n          pointerWidth = this.pointerWidth(),\n          pointerHeight = this.pointerHeight(),\n          direction = this.pointerDirection(),\n          width = this.width(),\n          height = this.height();\n\n      if (direction === UP) {\n        y -= pointerHeight;\n        height += pointerHeight;\n      } else if (direction === DOWN) {\n        height += pointerHeight;\n      } else if (direction === LEFT) {\n        x -= pointerWidth * 1.5;\n        width += pointerWidth;\n      } else if (direction === RIGHT) {\n        width += pointerWidth * 1.5;\n      }\n\n      return {\n        x: x,\n        y: y,\n        width: width,\n        height: height\n      };\n    }\n  }]);\n\n  return Tag;\n}(Shape);\nTag.prototype.className = 'Tag';\n\n_registerNode(Tag);\n\nFactory.addGetterSetter(Tag, 'pointerDirection', NONE);\nFactory.addGetterSetter(Tag, 'pointerWidth', 0, getNumberValidator());\nFactory.addGetterSetter(Tag, 'pointerHeight', 0, getNumberValidator());\nFactory.addGetterSetter(Tag, 'cornerRadius', 0, getNumberOrArrayOfNumbersValidator(4));","map":{"version":3,"sources":["/Users/pbivrell/light/light/node_modules/konva/lib/shapes/Label.js"],"names":["Factory","Shape","Group","getNumberOrArrayOfNumbersValidator","getNumberValidator","_registerNode","ATTR_CHANGE_LIST","CHANGE_KONVA","NONE","UP","RIGHT","DOWN","LEFT","attrChangeListLen","length","Label","config","on","evt","_addListeners","child","_sync","find","text","that","n","func","getText","width","height","tag","getTag","pointerDirection","pointerWidth","x","y","pointerHeight","setAttrs","prototype","className","Tag","context","cornerRadius","topLeft","topRight","bottomLeft","bottomRight","Math","min","beginPath","moveTo","lineTo","arc","PI","closePath","fillStrokeShape","direction","addGetterSetter"],"mappings":";;;;AAAA,SAASA,OAAT,QAAwB,eAAxB;AACA,SAASC,KAAT,QAAsB,aAAtB;AACA,SAASC,KAAT,QAAsB,aAAtB;AACA,SAASC,kCAAT,EAA6CC,kBAA7C,QAAwE,kBAAxE;AACA,SAASC,aAAT,QAA8B,cAA9B;AACA,IAAIC,gBAAgB,GAAG,CACnB,YADmB,EAEnB,UAFmB,EAGnB,WAHmB,EAInB,SAJmB,EAKnB,YALmB,EAMnB,MANmB,EAOnB,OAPmB,EAQnB,QARmB,CAAvB;AAAA,IASGC,YAAY,GAAG,cATlB;AAAA,IASkCC,IAAI,GAAG,MATzC;AAAA,IASiDC,EAAE,GAAG,IATtD;AAAA,IAS4DC,KAAK,GAAG,OATpE;AAAA,IAS6EC,IAAI,GAAG,MATpF;AAAA,IAS4FC,IAAI,GAAG,MATnG;AAAA,IAS2GC,iBAAiB,GAAGP,gBAAgB,CAACQ,MAThJ;AAUA,WAAaC,KAAb;AAAA;;AAAA;;AACI,iBAAYC,MAAZ,EAAoB;AAAA;;AAAA;;AAChB,8BAAMA,MAAN;;AACA,UAAKC,EAAL,CAAQ,WAAR,EAAqB,UAAUC,GAAV,EAAe;AAChC,WAAKC,aAAL,CAAmBD,GAAG,CAACE,KAAvB;;AACA,WAAKC,KAAL;AACH,KAHD;;AAFgB;AAMnB;;AAPL;AAAA;AAAA,WAQI,mBAAU;AACN,aAAO,KAAKC,IAAL,CAAU,MAAV,EAAkB,CAAlB,CAAP;AACH;AAVL;AAAA;AAAA,WAWI,kBAAS;AACL,aAAO,KAAKA,IAAL,CAAU,KAAV,EAAiB,CAAjB,CAAP;AACH;AAbL;AAAA;AAAA,WAcI,uBAAcC,IAAd,EAAoB;AAChB,UAAIC,IAAI,GAAG,IAAX;AAAA,UAAiBC,CAAjB;;AACA,UAAIC,IAAI,GAAG,SAAPA,IAAO,GAAY;AACnBF,QAAAA,IAAI,CAACH,KAAL;AACH,OAFD;;AAGA,WAAKI,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGZ,iBAAhB,EAAmCY,CAAC,EAApC,EAAwC;AACpCF,QAAAA,IAAI,CAACN,EAAL,CAAQX,gBAAgB,CAACmB,CAAD,CAAhB,GAAsBlB,YAA9B,EAA4CmB,IAA5C;AACH;AACJ;AAtBL;AAAA;AAAA,WAuBI,oBAAW;AACP,aAAO,KAAKC,OAAL,GAAeC,KAAf,EAAP;AACH;AAzBL;AAAA;AAAA,WA0BI,qBAAY;AACR,aAAO,KAAKD,OAAL,GAAeE,MAAf,EAAP;AACH;AA5BL;AAAA;AAAA,WA6BI,iBAAQ;AACJ,UAAIN,IAAI,GAAG,KAAKI,OAAL,EAAX;AAAA,UAA2BG,GAAG,GAAG,KAAKC,MAAL,EAAjC;AAAA,UAAgDH,KAAhD;AAAA,UAAuDC,MAAvD;AAAA,UAA+DG,gBAA/D;AAAA,UAAiFC,YAAjF;AAAA,UAA+FC,CAA/F;AAAA,UAAkGC,CAAlG;AAAA,UAAqGC,aAArG;;AACA,UAAIb,IAAI,IAAIO,GAAZ,EAAiB;AACbF,QAAAA,KAAK,GAAGL,IAAI,CAACK,KAAL,EAAR;AACAC,QAAAA,MAAM,GAAGN,IAAI,CAACM,MAAL,EAAT;AACAG,QAAAA,gBAAgB,GAAGF,GAAG,CAACE,gBAAJ,EAAnB;AACAC,QAAAA,YAAY,GAAGH,GAAG,CAACG,YAAJ,EAAf;AACAG,QAAAA,aAAa,GAAGN,GAAG,CAACM,aAAJ,EAAhB;AACAF,QAAAA,CAAC,GAAG,CAAJ;AACAC,QAAAA,CAAC,GAAG,CAAJ;;AACA,gBAAQH,gBAAR;AACI,eAAKvB,EAAL;AACIyB,YAAAA,CAAC,GAAGN,KAAK,GAAG,CAAZ;AACAO,YAAAA,CAAC,GAAG,CAAC,CAAD,GAAKC,aAAT;AACA;;AACJ,eAAK1B,KAAL;AACIwB,YAAAA,CAAC,GAAGN,KAAK,GAAGK,YAAZ;AACAE,YAAAA,CAAC,GAAGN,MAAM,GAAG,CAAb;AACA;;AACJ,eAAKlB,IAAL;AACIuB,YAAAA,CAAC,GAAGN,KAAK,GAAG,CAAZ;AACAO,YAAAA,CAAC,GAAGN,MAAM,GAAGO,aAAb;AACA;;AACJ,eAAKxB,IAAL;AACIsB,YAAAA,CAAC,GAAG,CAAC,CAAD,GAAKD,YAAT;AACAE,YAAAA,CAAC,GAAGN,MAAM,GAAG,CAAb;AACA;AAhBR;;AAkBAC,QAAAA,GAAG,CAACO,QAAJ,CAAa;AACTH,UAAAA,CAAC,EAAE,CAAC,CAAD,GAAKA,CADC;AAETC,UAAAA,CAAC,EAAE,CAAC,CAAD,GAAKA,CAFC;AAGTP,UAAAA,KAAK,EAAEA,KAHE;AAITC,UAAAA,MAAM,EAAEA;AAJC,SAAb;AAMAN,QAAAA,IAAI,CAACc,QAAL,CAAc;AACVH,UAAAA,CAAC,EAAE,CAAC,CAAD,GAAKA,CADE;AAEVC,UAAAA,CAAC,EAAE,CAAC,CAAD,GAAKA;AAFE,SAAd;AAIH;AACJ;AApEL;;AAAA;AAAA,EAA2BjC,KAA3B;AAsEAa,KAAK,CAACuB,SAAN,CAAgBC,SAAhB,GAA4B,OAA5B;;AACAlC,aAAa,CAACU,KAAD,CAAb;;AACA,WAAayB,GAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,WACI,oBAAWC,OAAX,EAAoB;AAChB,UAAIb,KAAK,GAAG,KAAKA,KAAL,EAAZ;AAAA,UAA0BC,MAAM,GAAG,KAAKA,MAAL,EAAnC;AAAA,UAAkDG,gBAAgB,GAAG,KAAKA,gBAAL,EAArE;AAAA,UAA8FC,YAAY,GAAG,KAAKA,YAAL,EAA7G;AAAA,UAAkIG,aAAa,GAAG,KAAKA,aAAL,EAAlJ;AAAA,UAAwKM,YAAY,GAAG,KAAKA,YAAL,EAAvL;AACA,UAAIC,OAAO,GAAG,CAAd;AACA,UAAIC,QAAQ,GAAG,CAAf;AACA,UAAIC,UAAU,GAAG,CAAjB;AACA,UAAIC,WAAW,GAAG,CAAlB;;AACA,UAAI,OAAOJ,YAAP,KAAwB,QAA5B,EAAsC;AAClCC,QAAAA,OAAO,GAAGC,QAAQ,GAAGC,UAAU,GAAGC,WAAW,GAAGC,IAAI,CAACC,GAAL,CAASN,YAAT,EAAuBd,KAAK,GAAG,CAA/B,EAAkCC,MAAM,GAAG,CAA3C,CAAhD;AACH,OAFD,MAGK;AACDc,QAAAA,OAAO,GAAGI,IAAI,CAACC,GAAL,CAASN,YAAY,CAAC,CAAD,CAAZ,IAAmB,CAA5B,EAA+Bd,KAAK,GAAG,CAAvC,EAA0CC,MAAM,GAAG,CAAnD,CAAV;AACAe,QAAAA,QAAQ,GAAGG,IAAI,CAACC,GAAL,CAASN,YAAY,CAAC,CAAD,CAAZ,IAAmB,CAA5B,EAA+Bd,KAAK,GAAG,CAAvC,EAA0CC,MAAM,GAAG,CAAnD,CAAX;AACAiB,QAAAA,WAAW,GAAGC,IAAI,CAACC,GAAL,CAASN,YAAY,CAAC,CAAD,CAAZ,IAAmB,CAA5B,EAA+Bd,KAAK,GAAG,CAAvC,EAA0CC,MAAM,GAAG,CAAnD,CAAd;AACAgB,QAAAA,UAAU,GAAGE,IAAI,CAACC,GAAL,CAASN,YAAY,CAAC,CAAD,CAAZ,IAAmB,CAA5B,EAA+Bd,KAAK,GAAG,CAAvC,EAA0CC,MAAM,GAAG,CAAnD,CAAb;AACH;;AACDY,MAAAA,OAAO,CAACQ,SAAR;AACAR,MAAAA,OAAO,CAACS,MAAR,CAAeP,OAAf,EAAwB,CAAxB;;AACA,UAAIX,gBAAgB,KAAKvB,EAAzB,EAA6B;AACzBgC,QAAAA,OAAO,CAACU,MAAR,CAAe,CAACvB,KAAK,GAAGK,YAAT,IAAyB,CAAxC,EAA2C,CAA3C;AACAQ,QAAAA,OAAO,CAACU,MAAR,CAAevB,KAAK,GAAG,CAAvB,EAA0B,CAAC,CAAD,GAAKQ,aAA/B;AACAK,QAAAA,OAAO,CAACU,MAAR,CAAe,CAACvB,KAAK,GAAGK,YAAT,IAAyB,CAAxC,EAA2C,CAA3C;AACH;;AACDQ,MAAAA,OAAO,CAACU,MAAR,CAAevB,KAAK,GAAGgB,QAAvB,EAAiC,CAAjC;AACAH,MAAAA,OAAO,CAACW,GAAR,CAAYxB,KAAK,GAAGgB,QAApB,EAA8BA,QAA9B,EAAwCA,QAAxC,EAAmDG,IAAI,CAACM,EAAL,GAAU,CAAX,GAAgB,CAAlE,EAAqE,CAArE,EAAwE,KAAxE;;AACA,UAAIrB,gBAAgB,KAAKtB,KAAzB,EAAgC;AAC5B+B,QAAAA,OAAO,CAACU,MAAR,CAAevB,KAAf,EAAsB,CAACC,MAAM,GAAGO,aAAV,IAA2B,CAAjD;AACAK,QAAAA,OAAO,CAACU,MAAR,CAAevB,KAAK,GAAGK,YAAvB,EAAqCJ,MAAM,GAAG,CAA9C;AACAY,QAAAA,OAAO,CAACU,MAAR,CAAevB,KAAf,EAAsB,CAACC,MAAM,GAAGO,aAAV,IAA2B,CAAjD;AACH;;AACDK,MAAAA,OAAO,CAACU,MAAR,CAAevB,KAAf,EAAsBC,MAAM,GAAGiB,WAA/B;AACAL,MAAAA,OAAO,CAACW,GAAR,CAAYxB,KAAK,GAAGkB,WAApB,EAAiCjB,MAAM,GAAGiB,WAA1C,EAAuDA,WAAvD,EAAoE,CAApE,EAAuEC,IAAI,CAACM,EAAL,GAAU,CAAjF,EAAoF,KAApF;;AACA,UAAIrB,gBAAgB,KAAKrB,IAAzB,EAA+B;AAC3B8B,QAAAA,OAAO,CAACU,MAAR,CAAe,CAACvB,KAAK,GAAGK,YAAT,IAAyB,CAAxC,EAA2CJ,MAA3C;AACAY,QAAAA,OAAO,CAACU,MAAR,CAAevB,KAAK,GAAG,CAAvB,EAA0BC,MAAM,GAAGO,aAAnC;AACAK,QAAAA,OAAO,CAACU,MAAR,CAAe,CAACvB,KAAK,GAAGK,YAAT,IAAyB,CAAxC,EAA2CJ,MAA3C;AACH;;AACDY,MAAAA,OAAO,CAACU,MAAR,CAAeN,UAAf,EAA2BhB,MAA3B;AACAY,MAAAA,OAAO,CAACW,GAAR,CAAYP,UAAZ,EAAwBhB,MAAM,GAAGgB,UAAjC,EAA6CA,UAA7C,EAAyDE,IAAI,CAACM,EAAL,GAAU,CAAnE,EAAsEN,IAAI,CAACM,EAA3E,EAA+E,KAA/E;;AACA,UAAIrB,gBAAgB,KAAKpB,IAAzB,EAA+B;AAC3B6B,QAAAA,OAAO,CAACU,MAAR,CAAe,CAAf,EAAkB,CAACtB,MAAM,GAAGO,aAAV,IAA2B,CAA7C;AACAK,QAAAA,OAAO,CAACU,MAAR,CAAe,CAAC,CAAD,GAAKlB,YAApB,EAAkCJ,MAAM,GAAG,CAA3C;AACAY,QAAAA,OAAO,CAACU,MAAR,CAAe,CAAf,EAAkB,CAACtB,MAAM,GAAGO,aAAV,IAA2B,CAA7C;AACH;;AACDK,MAAAA,OAAO,CAACU,MAAR,CAAe,CAAf,EAAkBR,OAAlB;AACAF,MAAAA,OAAO,CAACW,GAAR,CAAYT,OAAZ,EAAqBA,OAArB,EAA8BA,OAA9B,EAAuCI,IAAI,CAACM,EAA5C,EAAiDN,IAAI,CAACM,EAAL,GAAU,CAAX,GAAgB,CAAhE,EAAmE,KAAnE;AACAZ,MAAAA,OAAO,CAACa,SAAR;AACAb,MAAAA,OAAO,CAACc,eAAR,CAAwB,IAAxB;AACH;AAhDL;AAAA;AAAA,WAiDI,uBAAc;AACV,UAAIrB,CAAC,GAAG,CAAR;AAAA,UAAWC,CAAC,GAAG,CAAf;AAAA,UAAkBF,YAAY,GAAG,KAAKA,YAAL,EAAjC;AAAA,UAAsDG,aAAa,GAAG,KAAKA,aAAL,EAAtE;AAAA,UAA4FoB,SAAS,GAAG,KAAKxB,gBAAL,EAAxG;AAAA,UAAiIJ,KAAK,GAAG,KAAKA,KAAL,EAAzI;AAAA,UAAuJC,MAAM,GAAG,KAAKA,MAAL,EAAhK;;AACA,UAAI2B,SAAS,KAAK/C,EAAlB,EAAsB;AAClB0B,QAAAA,CAAC,IAAIC,aAAL;AACAP,QAAAA,MAAM,IAAIO,aAAV;AACH,OAHD,MAIK,IAAIoB,SAAS,KAAK7C,IAAlB,EAAwB;AACzBkB,QAAAA,MAAM,IAAIO,aAAV;AACH,OAFI,MAGA,IAAIoB,SAAS,KAAK5C,IAAlB,EAAwB;AACzBsB,QAAAA,CAAC,IAAID,YAAY,GAAG,GAApB;AACAL,QAAAA,KAAK,IAAIK,YAAT;AACH,OAHI,MAIA,IAAIuB,SAAS,KAAK9C,KAAlB,EAAyB;AAC1BkB,QAAAA,KAAK,IAAIK,YAAY,GAAG,GAAxB;AACH;;AACD,aAAO;AACHC,QAAAA,CAAC,EAAEA,CADA;AAEHC,QAAAA,CAAC,EAAEA,CAFA;AAGHP,QAAAA,KAAK,EAAEA,KAHJ;AAIHC,QAAAA,MAAM,EAAEA;AAJL,OAAP;AAMH;AAvEL;;AAAA;AAAA,EAAyB5B,KAAzB;AAyEAuC,GAAG,CAACF,SAAJ,CAAcC,SAAd,GAA0B,KAA1B;;AACAlC,aAAa,CAACmC,GAAD,CAAb;;AACAxC,OAAO,CAACyD,eAAR,CAAwBjB,GAAxB,EAA6B,kBAA7B,EAAiDhC,IAAjD;AACAR,OAAO,CAACyD,eAAR,CAAwBjB,GAAxB,EAA6B,cAA7B,EAA6C,CAA7C,EAAgDpC,kBAAkB,EAAlE;AACAJ,OAAO,CAACyD,eAAR,CAAwBjB,GAAxB,EAA6B,eAA7B,EAA8C,CAA9C,EAAiDpC,kBAAkB,EAAnE;AACAJ,OAAO,CAACyD,eAAR,CAAwBjB,GAAxB,EAA6B,cAA7B,EAA6C,CAA7C,EAAgDrC,kCAAkC,CAAC,CAAD,CAAlF","sourcesContent":["import { Factory } from '../Factory.js';\nimport { Shape } from '../Shape.js';\nimport { Group } from '../Group.js';\nimport { getNumberOrArrayOfNumbersValidator, getNumberValidator, } from '../Validators.js';\nimport { _registerNode } from '../Global.js';\nvar ATTR_CHANGE_LIST = [\n    'fontFamily',\n    'fontSize',\n    'fontStyle',\n    'padding',\n    'lineHeight',\n    'text',\n    'width',\n    'height',\n], CHANGE_KONVA = 'Change.konva', NONE = 'none', UP = 'up', RIGHT = 'right', DOWN = 'down', LEFT = 'left', attrChangeListLen = ATTR_CHANGE_LIST.length;\nexport class Label extends Group {\n    constructor(config) {\n        super(config);\n        this.on('add.konva', function (evt) {\n            this._addListeners(evt.child);\n            this._sync();\n        });\n    }\n    getText() {\n        return this.find('Text')[0];\n    }\n    getTag() {\n        return this.find('Tag')[0];\n    }\n    _addListeners(text) {\n        var that = this, n;\n        var func = function () {\n            that._sync();\n        };\n        for (n = 0; n < attrChangeListLen; n++) {\n            text.on(ATTR_CHANGE_LIST[n] + CHANGE_KONVA, func);\n        }\n    }\n    getWidth() {\n        return this.getText().width();\n    }\n    getHeight() {\n        return this.getText().height();\n    }\n    _sync() {\n        var text = this.getText(), tag = this.getTag(), width, height, pointerDirection, pointerWidth, x, y, pointerHeight;\n        if (text && tag) {\n            width = text.width();\n            height = text.height();\n            pointerDirection = tag.pointerDirection();\n            pointerWidth = tag.pointerWidth();\n            pointerHeight = tag.pointerHeight();\n            x = 0;\n            y = 0;\n            switch (pointerDirection) {\n                case UP:\n                    x = width / 2;\n                    y = -1 * pointerHeight;\n                    break;\n                case RIGHT:\n                    x = width + pointerWidth;\n                    y = height / 2;\n                    break;\n                case DOWN:\n                    x = width / 2;\n                    y = height + pointerHeight;\n                    break;\n                case LEFT:\n                    x = -1 * pointerWidth;\n                    y = height / 2;\n                    break;\n            }\n            tag.setAttrs({\n                x: -1 * x,\n                y: -1 * y,\n                width: width,\n                height: height,\n            });\n            text.setAttrs({\n                x: -1 * x,\n                y: -1 * y,\n            });\n        }\n    }\n}\nLabel.prototype.className = 'Label';\n_registerNode(Label);\nexport class Tag extends Shape {\n    _sceneFunc(context) {\n        var width = this.width(), height = this.height(), pointerDirection = this.pointerDirection(), pointerWidth = this.pointerWidth(), pointerHeight = this.pointerHeight(), cornerRadius = this.cornerRadius();\n        let topLeft = 0;\n        let topRight = 0;\n        let bottomLeft = 0;\n        let bottomRight = 0;\n        if (typeof cornerRadius === 'number') {\n            topLeft = topRight = bottomLeft = bottomRight = Math.min(cornerRadius, width / 2, height / 2);\n        }\n        else {\n            topLeft = Math.min(cornerRadius[0] || 0, width / 2, height / 2);\n            topRight = Math.min(cornerRadius[1] || 0, width / 2, height / 2);\n            bottomRight = Math.min(cornerRadius[2] || 0, width / 2, height / 2);\n            bottomLeft = Math.min(cornerRadius[3] || 0, width / 2, height / 2);\n        }\n        context.beginPath();\n        context.moveTo(topLeft, 0);\n        if (pointerDirection === UP) {\n            context.lineTo((width - pointerWidth) / 2, 0);\n            context.lineTo(width / 2, -1 * pointerHeight);\n            context.lineTo((width + pointerWidth) / 2, 0);\n        }\n        context.lineTo(width - topRight, 0);\n        context.arc(width - topRight, topRight, topRight, (Math.PI * 3) / 2, 0, false);\n        if (pointerDirection === RIGHT) {\n            context.lineTo(width, (height - pointerHeight) / 2);\n            context.lineTo(width + pointerWidth, height / 2);\n            context.lineTo(width, (height + pointerHeight) / 2);\n        }\n        context.lineTo(width, height - bottomRight);\n        context.arc(width - bottomRight, height - bottomRight, bottomRight, 0, Math.PI / 2, false);\n        if (pointerDirection === DOWN) {\n            context.lineTo((width + pointerWidth) / 2, height);\n            context.lineTo(width / 2, height + pointerHeight);\n            context.lineTo((width - pointerWidth) / 2, height);\n        }\n        context.lineTo(bottomLeft, height);\n        context.arc(bottomLeft, height - bottomLeft, bottomLeft, Math.PI / 2, Math.PI, false);\n        if (pointerDirection === LEFT) {\n            context.lineTo(0, (height + pointerHeight) / 2);\n            context.lineTo(-1 * pointerWidth, height / 2);\n            context.lineTo(0, (height - pointerHeight) / 2);\n        }\n        context.lineTo(0, topLeft);\n        context.arc(topLeft, topLeft, topLeft, Math.PI, (Math.PI * 3) / 2, false);\n        context.closePath();\n        context.fillStrokeShape(this);\n    }\n    getSelfRect() {\n        var x = 0, y = 0, pointerWidth = this.pointerWidth(), pointerHeight = this.pointerHeight(), direction = this.pointerDirection(), width = this.width(), height = this.height();\n        if (direction === UP) {\n            y -= pointerHeight;\n            height += pointerHeight;\n        }\n        else if (direction === DOWN) {\n            height += pointerHeight;\n        }\n        else if (direction === LEFT) {\n            x -= pointerWidth * 1.5;\n            width += pointerWidth;\n        }\n        else if (direction === RIGHT) {\n            width += pointerWidth * 1.5;\n        }\n        return {\n            x: x,\n            y: y,\n            width: width,\n            height: height,\n        };\n    }\n}\nTag.prototype.className = 'Tag';\n_registerNode(Tag);\nFactory.addGetterSetter(Tag, 'pointerDirection', NONE);\nFactory.addGetterSetter(Tag, 'pointerWidth', 0, getNumberValidator());\nFactory.addGetterSetter(Tag, 'pointerHeight', 0, getNumberValidator());\nFactory.addGetterSetter(Tag, 'cornerRadius', 0, getNumberOrArrayOfNumbersValidator(4));\n"]},"metadata":{},"sourceType":"module"}