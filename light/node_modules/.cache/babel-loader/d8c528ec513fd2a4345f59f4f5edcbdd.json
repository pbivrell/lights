{"ast":null,"code":"var _jsxFileName = \"/Users/pbivrell/light/light/src/components/Picker2.js\",\n    _s = $RefreshSig$();\n\nimport './Picker2.css';\nimport React, { useState, useEffect } from \"react\";\nimport { HuePicker, AlphaPicker } from 'react-color';\nimport bulb from '../res/Bulb_crop.png';\nimport offbulb from '../res/OffBulb_crop.png';\nimport disconnectedbulb from '../res/DisconnectedBulb_crop.png';\nimport axios from \"axios\";\nimport { displayError } from \"../lib/hooks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Picker2(_ref) {\n  _s();\n\n  let {\n    name,\n    hub\n  } = _ref;\n  const [light, setLight] = useState({});\n  useEffect(() => {\n    getLight();\n  }, []);\n  const [color, setColor] = useState({\n    hsl: {\n      a: 1\n    },\n    rgb: {\n      a: 1\n    },\n    hex: \"\"\n  });\n\n  function getLight() {\n    axios.get(`${process.env.REACT_APP_API_URL}/user/hub/${hub}/light/${name}`, {\n      withCredentials: true\n    }).then(resp => {\n      setLight(resp.data);\n    }).catch(e => {\n      displayError(e);\n    });\n  }\n  /*function pushLight(pushColor) {\n  \tlet data = generateBinary(pushColor, light.Count);\n                 let blob = new Blob([data], {type: \"application/octet-stream\"});\n                 let bodyFormData = new FormData();\n                 bodyFormData.append(\"file\", blob, `${pushColor.r}-${pushColor.g}-${pushColor.b}-${pushColor.a}.bin`);\n                  axios({\n                 \tmethod: \"post\",\n                 \turl: `http://${light.IP}/upload`,\n                 \tdata: bodyFormData,\n                 \theaders: { \"Content-Type\": \"multipart/form-data\" },\n                 })\n                 .then(function (response) {\n                 \tconsole.log(response);\n                 })\n                 .catch(function (response) {\n                 \tdisplayError(response)\n                 });\n  }*/\n\n\n  function pushLight(pushColor) {\n    axios.post(`${process.env.REACT_APP_API_URL}/user/hub/${hub}/light/${name}?p=~${pushColor.r}-${pushColor.g}-${pushColor.b}-${Math.floor(pushColor.a * 100)}.bin`, null, {\n      withCredentials: true\n    }).then(resp => {\n      console.log(\"toggled\");\n    }).catch(e => {\n      displayError(e);\n    });\n  }\n\n  function pushToggle(s) {\n    let lightStatus = \"on\";\n\n    if (!s) {\n      lightStatus = \"off\";\n    }\n\n    axios.post(`${process.env.REACT_APP_API_URL}/user/hub/${hub}/light/${name}?s=${lightStatus}`, null, {\n      withCredentials: true\n    }).then(resp => {\n      console.log(\"toggled\");\n    }).catch(e => {\n      displayError(e);\n    });\n  }\n\n  function toggleBulb() {\n    const map = { ...light\n    };\n    map.Status = !map.Status;\n    setLight(map);\n    pushToggle(map.Status);\n  }\n\n  function onColorChange(hue, c) {\n    console.log(c);\n    let hsl = c.hsl;\n    let rgb = c.rgb;\n\n    if (!hue) {\n      hsl.a = color.hsl.a;\n      rgb.a = color.rgb.a;\n    }\n\n    setColor({\n      hsl: hsl,\n      rgb: c.rgb,\n      hex: `rgba(${c.rgb.r},${c.rgb.g},${c.rgb.b},${hsl.a}`\n    });\n    pushLight(c.rgb);\n  }\n\n  function generateBinary(color, pixels) {\n    let data = new Uint8Array((2 + pixels) * 8);\n    let bytes = getInt64Bytes(pixels);\n    let count = bytes[bytes.length - 2] << 8 | bytes[bytes.length - 1];\n    data[0] = 0x3;\n    data[1] = bytes[bytes.length - 1];\n    data[2] = bytes[bytes.length - 2];\n\n    for (let i = 0; i < pixels; i++) {\n      let bytes = getInt64Bytes(i);\n      data[(i + 1) * 8] = 0x1;\n      data[(i + 1) * 8 + 1] = parseInt(color.r * color.a);\n      data[(i + 1) * 8 + 2] = parseInt(color.g * color.a);\n      data[(i + 1) * 8 + 3] = parseInt(color.b * color.a);\n      data[(i + 1) * 8 + 4] = bytes[bytes.length - 1];\n      data[(i + 1) * 8 + 5] = bytes[bytes.length - 2];\n    }\n\n    data[8 + pixels * 8] = 0x2;\n    data[8 + pixels * 8 + 1] = 200;\n    data[8 + pixels * 8 + 2] = 0;\n    data[8 + pixels * 8 + 3] = 0;\n    data[8 + pixels * 8 + 4] = 0;\n    console.log(data);\n    return data;\n  }\n\n  function getInt64Bytes(x) {\n    let y = Math.floor(x / 2 ** 32);\n    return [y, y << 8, y << 16, y << 24, x, x << 8, x << 16, x << 24].map(z => z >>> 24);\n  }\n\n  function getToolTip() {\n    console.log(light);\n\n    if (!light) {\n      return \"\";\n    }\n\n    return `ID: ${light.ID}\n${new Date(light.Updated).toLocaleDateString() + \" \" + new Date(light.Updated).toLocaleTimeString()}`;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Picker\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ButtonText\",\n      \"data-tooltip\": getToolTip(),\n      children: light.Alias === \"\" ? light.Alias : light.Name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Button\",\n      style: {\n        background: color.hex\n      },\n      onClick: toggleBulb,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"ButtonImage\",\n        src: light.Status ? bulb : offbulb\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 4\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 3\n    }, this), light.Status ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(HuePicker, {\n        className: \"ButtonImage\",\n        color: color.hsl,\n        onChangeComplete: c => onColorChange(false, c)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(AlphaPicker, {\n        className: \"ButtonImage\",\n        color: color.hsl,\n        onChangeComplete: c => onColorChange(true, c)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 154,\n    columnNumber: 2\n  }, this);\n}\n\n_s(Picker2, \"Uhbcfj+fh2ZshjAtsLDaWEUw/0Y=\");\n\n_c = Picker2;\nexport default Picker2;\n\nvar _c;\n\n$RefreshReg$(_c, \"Picker2\");","map":{"version":3,"sources":["/Users/pbivrell/light/light/src/components/Picker2.js"],"names":["React","useState","useEffect","HuePicker","AlphaPicker","bulb","offbulb","disconnectedbulb","axios","displayError","Picker2","name","hub","light","setLight","getLight","color","setColor","hsl","a","rgb","hex","get","process","env","REACT_APP_API_URL","withCredentials","then","resp","data","catch","e","pushLight","pushColor","post","r","g","b","Math","floor","console","log","pushToggle","s","lightStatus","toggleBulb","map","Status","onColorChange","hue","c","generateBinary","pixels","Uint8Array","bytes","getInt64Bytes","count","length","i","parseInt","x","y","z","getToolTip","ID","Date","Updated","toLocaleDateString","toLocaleTimeString","Alias","Name","background"],"mappings":"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","sourcesContent":["import './Picker2.css';\nimport React, { useState, useEffect } from \"react\";\nimport { HuePicker, AlphaPicker } from 'react-color'\nimport bulb from '../res/Bulb_crop.png';\nimport offbulb from '../res/OffBulb_crop.png';\nimport disconnectedbulb from '../res/DisconnectedBulb_crop.png';\nimport axios from \"axios\";\nimport {displayError} from \"../lib/hooks\";\n\nfunction Picker2({name, hub}) {\n\n\t\n\tconst [light, setLight] = useState({});\n\n\tuseEffect(() => {\n\t\tgetLight();\n\t}, [])\n\n\n  \tconst [color, setColor] = useState({ hsl: {a: 1}, rgb: {a: 1}, hex: \"\"});\n\t\n\tfunction getLight() {\n\t\t\n\t\taxios.get(`${process.env.REACT_APP_API_URL}/user/hub/${hub}/light/${name}`, {\n\t\t\twithCredentials: true,\n\t\t}).then((resp) => {\n\t\t\tsetLight(resp.data);\n\t\t}).catch((e) => {\n\t\t\tdisplayError(e);\n\t\t});\n\t}\n\n\t/*function pushLight(pushColor) {\n\t\tlet data = generateBinary(pushColor, light.Count);\n                let blob = new Blob([data], {type: \"application/octet-stream\"});\n                let bodyFormData = new FormData();\n                bodyFormData.append(\"file\", blob, `${pushColor.r}-${pushColor.g}-${pushColor.b}-${pushColor.a}.bin`);\n\n                axios({\n                \tmethod: \"post\",\n                \turl: `http://${light.IP}/upload`,\n                \tdata: bodyFormData,\n                \theaders: { \"Content-Type\": \"multipart/form-data\" },\n                })\n                .then(function (response) {\n                \tconsole.log(response);\n                })\n                .catch(function (response) {\n                \tdisplayError(response)\n                });\n\t}*/\n\n\tfunction pushLight(pushColor) {\n\t\taxios.post(`${process.env.REACT_APP_API_URL}/user/hub/${hub}/light/${name}?p=~${pushColor.r}-${pushColor.g}-${pushColor.b}-${Math.floor(pushColor.a * 100)}.bin`,null, {\n\t\t\twithCredentials: true,\n\t\t})\n\t\t.then((resp) => {\n\t\t\tconsole.log(\"toggled\");\n\t\t})\n\t\t.catch((e) => {\n        \t\tdisplayError(e);\n\t\t});\n\t}\n\n\tfunction pushToggle(s) {\n\t\tlet lightStatus = \"on\";\n\t\tif (!s) {\n\t\t\tlightStatus = \"off\"\n\t\t}\n\n\t\taxios.post(`${process.env.REACT_APP_API_URL}/user/hub/${hub}/light/${name}?s=${lightStatus}`, null, {\n\t\t\twithCredentials: true,\n\t\t})\n\t\t.then((resp) => {\n\t\t\tconsole.log(\"toggled\");\n\t\t})\n\t\t.catch((e) => {\n        \t\tdisplayError(e);\n\t\t});\n\t}\n\n\tfunction toggleBulb() {\n\t\tconst map = {...light};\n                map.Status = !map.Status;\n                setLight(map);\n\t\tpushToggle(map.Status);\n\t}\n\n\tfunction onColorChange(hue, c) {\n\n\t\tconsole.log(c);\n\n\t\tlet hsl = c.hsl;\n\t\tlet rgb = c.rgb;\n\n\t\tif(!hue) {\n\t\t\thsl.a = color.hsl.a;\n\t\t\trgb.a = color.rgb.a;\n\t\t}\n\t\tsetColor({hsl: hsl, rgb: c.rgb, hex: `rgba(${c.rgb.r},${c.rgb.g},${c.rgb.b},${hsl.a}`});\n\t\t\n\t\tpushLight(c.rgb);\n\t}\n\t\n\t\n\tfunction generateBinary(color, pixels) {\n\t\t\n\t\tlet data = new Uint8Array((2 + pixels) * 8);\n\t\tlet bytes = getInt64Bytes(pixels);\n\n\t\tlet count = (bytes[bytes.length-2] << 8) | bytes[bytes.length-1];\n\t\t\n\t\tdata[0] = 0x3;\n\t\tdata[1] = bytes[bytes.length-1];\n\t\tdata[2] = bytes[bytes.length-2];\n\n\t\tfor (let i = 0; i < pixels; i++) {\n\t\t\tlet bytes = getInt64Bytes(i);\n\t\t \tdata[(i + 1) * 8] = 0x1;\n\t\t\tdata[(i + 1) * 8 + 1] = parseInt(color.r * color.a) ;\n\t\t\tdata[(i + 1) * 8 + 2] = parseInt(color.g * color.a);\n\t\t\tdata[(i + 1) * 8 + 3] = parseInt(color.b * color.a);\n\t\t\tdata[(i + 1) * 8 + 4] = bytes[bytes.length-1];\n\t\t\tdata[(i + 1) * 8 + 5] = bytes[bytes.length-2];\n\t\t}\n\n\t\tdata[8 + (pixels * 8)] = 0x2;\n\t\tdata[8 + (pixels * 8) + 1] = 200;\n\t\tdata[8 + (pixels * 8) + 2] = 0;\n\t\tdata[8 + (pixels * 8) + 3] = 0;\n\t\tdata[8 + (pixels * 8) + 4] = 0;\n\n\n\t\tconsole.log(data);\n\t\treturn data;\n\n\t}\n\n\tfunction getInt64Bytes(x) {\n  \t\tlet y= Math.floor(x/2**32);\n  \t\treturn [y,(y<<8),(y<<16),(y<<24), x,(x<<8),(x<<16),(x<<24)].map(z=> z>>>24)\n\t}\n\n\tfunction getToolTip() {\n\t\tconsole.log(light);\n\t\tif (!light) {\n\t\t\treturn \"\"\n\t\t}\n\t\treturn `ID: ${light.ID}\n${new Date(light.Updated).toLocaleDateString() +\" \" +  new Date(light.Updated).toLocaleTimeString()}`\n\t}\n\n\treturn (\n\t<div className=\"Picker\">\n\n\t\t<div className=\"ButtonText\" data-tooltip={getToolTip()}>{light.Alias === \"\" ? light.Alias : light.Name }</div>\n\t\t<div className=\"Button\" style={{background: color.hex}} onClick={toggleBulb}>\n\t\t\t<img className=\"ButtonImage\" src={light.Status ? bulb : offbulb }></img>\n\t\t</div>\n\t\t{ light.Status ? \n\t\t\t<>\n\t\t\t\t<br/>\n\t\t\t\t<HuePicker className=\"ButtonImage\" color={color.hsl} onChangeComplete={(c) => onColorChange(false, c)}/>\n\t\t\t\t<br/>\n                \t\t<AlphaPicker className=\"ButtonImage\" color={color.hsl} onChangeComplete={(c) => onColorChange(true, c)}/>\n\t\t\t</>\n\t\t: \n\t\t\t<></>\n\t\t}\n\t</div>\n  \t);\n}\n\n\nexport default Picker2;\n"]},"metadata":{},"sourceType":"module"}